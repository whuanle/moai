{
  "x-generator": "NSwag v14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "AI API",
    "description": "MoAI openapi document.",
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:5000",
      "description": "User-defined service address"
    }
  ],
  "paths": {
    "/api/storage/pre_upload_image": {
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": "获取预上传文件签名地址，只能用于上传公开类文件，如头像等.",
        "operationId": "PreUploadImageendpoint",
        "requestBody": {
          "x-name": "PreUploadImageCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreUploadImageCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreUploadFileCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/storage/complate_url": {
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": "完成文件上传，私有和公有文件都可以使用.",
        "operationId": "ComplateUploadEndpoint",
        "requestBody": {
          "x-name": "ComplateFileUploadCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplateFileUploadCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/common/encryption": {
      "post": {
        "tags": [
          "Common"
        ],
        "summary": "加密接口，通过.",
        "operationId": "EncryptionEndpoint",
        "requestBody": {
          "x-name": "SimpleString",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleString"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleString"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/common/userinfo": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "查询用户基本信息.",
        "operationId": "QueryUserInfoEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStateInfo"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/common/serverinfo": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "获取服务器信息.",
        "operationId": "ServerInfoEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryServerInfoCommandResponse"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/login": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "用户登录.",
        "operationId": "LoginEndpoint",
        "requestBody": {
          "x-name": "LoginCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginCommandResponse"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/oauth_bind_account": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "使用 OAuth 绑定已存在的账号.",
        "operationId": "OAuthBindExistAccountEndpoint",
        "requestBody": {
          "x-name": "OAuthBindExistAccountCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthBindExistAccountCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/account/oauth_login": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "OAuth登录.",
        "operationId": "OAuthLoginEndpoint",
        "requestBody": {
          "x-name": "OAuthLoginCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthLoginCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthLoginCommandResponse"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/oauth_register": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "OAuth 注册.",
        "operationId": "OAuthRegisterEndpoint",
        "requestBody": {
          "x-name": "OAuthRegisterCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthRegisterCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginCommandResponse"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/oauth_prividers": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "获取第三方登录列表.",
        "operationId": "QueryAllOAuthPrividerEndpoint",
        "parameters": [
          {
            "name": "redirectUrl",
            "in": "query",
            "description": "要跳转的路径.",
            "schema": {
              "type": "string",
              "format": "uri",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryAllOAuthPrividerCommandResponse"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/refresh_token": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "刷新token.",
        "operationId": "RefreshTokenEndpoint",
        "requestBody": {
          "x-name": "RefreshTokenCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenCommandResponse"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/account/register": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "注册账号.",
        "operationId": "RegisterUserEndpoint",
        "requestBody": {
          "x-name": "RegisterUserCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleInt"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/user/delete_user": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "删除用户.",
        "operationId": "DeleteUserEndpoint",
        "requestBody": {
          "x-name": "DeleteUserCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteUserCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/admin/user/disable_user": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "禁用用户.",
        "operationId": "DisableUserEndpoint",
        "requestBody": {
          "x-name": "DisableUserCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisableUserCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/admin/user/user_list": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "查询用户列表.",
        "operationId": "QueryUserListEndpoint",
        "requestBody": {
          "x-name": "QueryUserListCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryUserListCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryUserListCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/admin/user/reset_password": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "重置用户密码.",
        "operationId": "ResetUserPasswordEndpoint",
        "requestBody": {
          "x-name": "ResetUserPasswordCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetUserPasswordCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleString"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/admin/user/set_admin": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "设置管理员.",
        "operationId": "SetUserAdminEndpoint",
        "requestBody": {
          "x-name": "SetUserAdminCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetUserAdminCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/admin/settings": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "查询系统配置.",
        "operationId": "QuerySystemSettingsEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuerySystemSettingsCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "更新系统设置.",
        "operationId": "SetSystemSettingsEndpoint",
        "requestBody": {
          "x-name": "SetSystemSettingsCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSystemSettingsCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/admin/oauth/create": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "创建 OAuth2.0 连接配置.",
        "operationId": "CreateOAuthConnectionEndpoint",
        "requestBody": {
          "x-name": "CreateOAuthConnectionCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOAuthConnectionCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/admin/oauth/delete": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "删除认证方式.",
        "operationId": "DeleteOAuthConnectionEndpoint",
        "requestBody": {
          "x-name": "DeleteOAuthConnectionCommand",
          "description": "",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOAuthConnectionCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOAuthConnectionCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/admin/oauth/detail_list": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "查询所有认证方式.",
        "operationId": "QueryAllOAuthPrividerDetailEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryAllOAuthPrividerDetailCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/admin/oauth/update": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "更新 OAuth2.0 连接配置.",
        "operationId": "UpdateOAuthConnectionlEndpoint",
        "requestBody": {
          "x-name": "UpdateOAuthConnectionCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOAuthConnectionCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/user/oauth_list": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "查询用户已经绑定的第三方账号.",
        "operationId": "QueryUserBindAccountEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryUserBindAccountCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/user/unbind-oauth": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "解绑第三方账号.",
        "operationId": "UnbindUserAccountEndpoint",
        "requestBody": {
          "x-name": "UnbindUserAccountCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnbindUserAccountCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/user/update_user": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "更新用户信息.",
        "operationId": "UpdateUserInfoEndpoint",
        "requestBody": {
          "x-name": "UpdateUserInfoCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInfoCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/user/update_password": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "更新密码.",
        "operationId": "UpdateUserPasswordEndpoint",
        "requestBody": {
          "x-name": "UpdateUserPasswordCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPasswordCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/user/upload_avatar": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "上传头像.",
        "operationId": "UploadtUserAvatarEndpoint",
        "requestBody": {
          "x-name": "UploadtUserAvatarCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadtUserAvatarCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/aimodel/type/public_system_aimodel_list": {
      "post": {
        "tags": [
          "Aimodel"
        ],
        "summary": "获取开放的系统 AI 模型列表.",
        "operationId": "QueryPublicSystemAiModelListEndpoint",
        "requestBody": {
          "x-name": "QueryPublicSystemAiModelListCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryPublicSystemAiModelListCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryPublicSystemAiModelListCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/aimodel/type/user_modellist": {
      "post": {
        "tags": [
          "Aimodel"
        ],
        "summary": "获取 AI 模型列表.",
        "operationId": "QueryUserAiModelListEndpoint",
        "requestBody": {
          "x-name": "QueryUserAiModelListRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryUserAiModelListRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryAiModelListCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/aimodel/user_providerlist": {
      "get": {
        "tags": [
          "Aimodel"
        ],
        "summary": "查询ai服务商列表.",
        "operationId": "QueryUserAiModelProviderListEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryAiModelProviderListResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/aimodel/type/system_modellist": {
      "post": {
        "tags": [
          "Aimodel"
        ],
        "summary": "获取 AI 模型列表.",
        "operationId": "QuerySystemAiModelListEndpoint",
        "requestBody": {
          "x-name": "QuerySystemAiModelListCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuerySystemAiModelListCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuerySystemAiModelListCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/aimodel/system_providerlist": {
      "get": {
        "tags": [
          "Aimodel"
        ],
        "summary": "查询ai服务商列表.",
        "operationId": "QuerySystemAiModelProviderListEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryAiModelProviderListResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/aimodel/add_system_aimodel": {
      "post": {
        "tags": [
          "Aimodel"
        ],
        "summary": "添加一个系统 ai 模型，key 要使用 RSA 公钥加密.",
        "operationId": "AddSystemAiModelEndpoint",
        "requestBody": {
          "x-name": "AddSystemAiModelRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSystemAiModelRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleInt"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/aimodel/update_system_aimodel": {
      "post": {
        "tags": [
          "Aimodel"
        ],
        "summary": "修改 AI 模型信息，key 要使用 RSA 公钥加密，如果不修改 key 需设置 key=*.",
        "operationId": "UpdateSystemAiModelEndpoint",
        "requestBody": {
          "x-name": "UpdateSystemAiModelRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystemAiModelRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/aimodel/delete_model": {
      "delete": {
        "tags": [
          "Aimodel"
        ],
        "summary": "删除一个模型.",
        "operationId": "DeleteAiModelEndpoint",
        "requestBody": {
          "x-name": "DeleteAiModelCommand",
          "description": "",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAiModelCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAiModelCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/aimodel/add_user_model": {
      "post": {
        "tags": [
          "Aimodel"
        ],
        "summary": "添加一个用户私有模型配置，key 要使用 RSA 公钥加密.",
        "operationId": "AddUserAiModelEndpoint",
        "requestBody": {
          "x-name": "AddUserAiModelRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserAiModelRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleInt"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/aimodel/update_user_aimodel": {
      "post": {
        "tags": [
          "Aimodel"
        ],
        "summary": "修改 AI 模型信息，key 要使用 RSA 公钥加密，如果不修改 key 需设置 key=*.",
        "operationId": "UpdateUserAiModelEndpoint",
        "requestBody": {
          "x-name": "UpdateUserAiModelRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserAiModelRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/create": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "创建知识库.",
        "operationId": "CreateWikiEndpoint",
        "requestBody": {
          "x-name": "CreateWikiCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWikiCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleInt"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/delete_wiki": {
      "delete": {
        "tags": [
          "Wiki"
        ],
        "summary": "删除知识库.",
        "operationId": "DeleteWikiEndpoint",
        "requestBody": {
          "x-name": "DeleteWikiCommand",
          "description": "",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/DeleteWikiCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteWikiCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/invite_wiki_user": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "邀请用户加入知识库协作.",
        "operationId": "InviteWikiUserEndpoint",
        "requestBody": {
          "x-name": "InviteWikiUserCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteWikiUserCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/query_wiki_list": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "获取用户有权访问的知识库列表.",
        "operationId": "QueryWikiBaseListEndpoint",
        "requestBody": {
          "x-name": "QueryWikiBaseListCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryWikiBaseListCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QueryWikiInfoResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/query_wiki_info": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "获取知识库的信息.",
        "operationId": "QueryWikiInfoEndpoint",
        "requestBody": {
          "x-name": "QueryWikiInfoCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryWikiInfoCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryWikiInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/query_wiki_users": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "获取知识库协作者列表.",
        "operationId": "QueryWikiUsersEndpoint",
        "requestBody": {
          "x-name": "QueryWikiUsersCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryWikiUsersCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryWikiUsersCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/remove_wiki_user": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "将用户从知识库协作中移除.",
        "operationId": "RemoveWikiUserEndpoint",
        "requestBody": {
          "x-name": "RemoveWikiUserCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveWikiUserCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/update_wiki_config": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "更新知识库配置.",
        "operationId": "UpdateWikiConfigEndpoint",
        "requestBody": {
          "x-name": "UpdateWikiConfigCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWikiConfigCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/update_wiki_info": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "更新知识库信息.",
        "operationId": "UpdateWikiInfoEndpoint",
        "requestBody": {
          "x-name": "UpdateWikiInfoCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWikiInfoCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/web/create_crawle_config": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "创建爬虫配置.",
        "operationId": "AddWebDocumentConfigEndpoints",
        "requestBody": {
          "x-name": "AddWebDocumentConfigCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWebDocumentConfigCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleInt"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/web/cancel_crawle_task": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "取消爬虫任务.",
        "operationId": "CancalCrawleTaskEndpoints",
        "requestBody": {
          "x-name": "CancalCrawleTaskCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancalCrawleTaskCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/web/delete_crawle_config": {
      "delete": {
        "tags": [
          "Wiki"
        ],
        "summary": "删除爬虫配置.",
        "operationId": "DeleteWebDocumentConfigEndpoints",
        "requestBody": {
          "x-name": "DeleteWebDocumentConfigCommand",
          "description": "",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/DeleteWebDocumentConfigCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteWebDocumentConfigCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/web/query_crawle_config": {
      "get": {
        "tags": [
          "Wiki"
        ],
        "summary": "获取爬虫配置详细信息.",
        "operationId": "QueryWikiConfigInfoEndpoints",
        "parameters": [
          {
            "name": "wikiId",
            "in": "query",
            "required": true,
            "description": "知识库id.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "wikiWebConfigId",
            "in": "query",
            "required": true,
            "description": "id.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryWikiConfigInfoCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/web/query_crawle_list": {
      "get": {
        "tags": [
          "Wiki"
        ],
        "summary": "查询爬虫配置列表.",
        "operationId": "QueryWikiWebConfigListEndpoints",
        "parameters": [
          {
            "name": "wikiId",
            "in": "query",
            "required": true,
            "description": "知识库 id.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryWikiWebConfigListCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/web/query_web_document_state_list": {
      "get": {
        "tags": [
          "Wiki"
        ],
        "summary": "查询爬虫工作状态，只返回最近 10 条记录.",
        "operationId": "QueryWikiWebConfigTaskStateListEndpoints",
        "parameters": [
          {
            "name": "wikiId",
            "in": "query",
            "required": true,
            "description": "知识库id.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "wikiWebConfigId",
            "in": "query",
            "required": true,
            "description": "id.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryWikiWebConfigTaskStateListCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/web/query_web_document_list": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "查询该爬虫下的文档.",
        "operationId": "QueryWikiWebDocumentListEndpoints",
        "requestBody": {
          "x-name": "QueryWikiWebDocumentListCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryWikiWebDocumentListCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryWikiDocumentListCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/web/lanuch_crawle": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "启动爬虫.",
        "operationId": "StartWebDocumentCrawleEndpoints",
        "requestBody": {
          "x-name": "StartWebDocumentCrawleCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartWebDocumentCrawleCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleGuid"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/web/update_crawle_config": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "修改爬虫配置.",
        "operationId": "UpdateWebDocumentConfigEndpoints",
        "requestBody": {
          "x-name": "UpdateWebDocumentConfigCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWebDocumentConfigCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/document/create_document": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "取消文档向量化任务.",
        "operationId": "CancalWikiDocumentTaskEndpoint",
        "requestBody": {
          "x-name": "CancalWikiDocumentTaskCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancalWikiDocumentTaskCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/document/clear_document": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "清空知识库文档向量.",
        "operationId": "ClearWikiDocumentEmbeddingEndpoint",
        "requestBody": {
          "x-name": "ClearWikiDocumentEmbeddingCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClearWikiDocumentEmbeddingCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/document/complete_upload_document": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "完成上传知识库文档上传.",
        "operationId": "ComplateUploadWikiDocumentEndpoint",
        "requestBody": {
          "x-name": "ComplateUploadWikiDocumentCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplateUploadWikiDocumentCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/document/delete_document": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "删除知识库文档.",
        "operationId": "DeleteWikiDocumentEndpoint",
        "requestBody": {
          "x-name": "DeleteWikiDocumentCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteWikiDocumentCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/document/embedding_document": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "向量化文档.",
        "operationId": "EmbeddingocumentEndpoint",
        "requestBody": {
          "x-name": "EmbeddingDocumentCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbeddingDocumentCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/document/preupload_document": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "预上传文档.",
        "operationId": "PreUploadWikiDocumentEndpoint",
        "requestBody": {
          "x-name": "PreUploadWikiDocumentCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreUploadWikiDocumentCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreloadWikiDocumentResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/document/document_info": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "查询文档信息.",
        "operationId": "QueryWikiDocumentInfoEndpoint",
        "requestBody": {
          "x-name": "QueryWikiDocumentInfoCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryWikiDocumentInfoCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryWikiDocumentListItem"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/document/list": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "查询知识库文档列表.",
        "operationId": "QueryWikiDocumentListEndpoint",
        "requestBody": {
          "x-name": "QueryWikiDocumentListCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryWikiDocumentListCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryWikiDocumentListCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/document/task_list": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "查询文档任务列表.",
        "operationId": "QueryWikiDocumentTaskListCommandEndpoint",
        "requestBody": {
          "x-name": "QueryWikiDocumentTaskListCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryWikiDocumentTaskListCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WikiDocumentTaskItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/wiki/document/search": {
      "post": {
        "tags": [
          "Wiki"
        ],
        "summary": "搜索知识库.",
        "operationId": "SearchWikiDocumentTextEndpoint",
        "requestBody": {
          "x-name": "SearchWikiDocumentTextCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchWikiDocumentTextCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchWikiDocumentTextCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/plugin/plugin_detail": {
      "post": {
        "tags": [
          "Plugin"
        ],
        "summary": "获取插件的详细信息.",
        "operationId": "QueryPluginDetailEndpoint",
        "requestBody": {
          "x-name": "QueryPluginDetailCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryPluginDetailCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryPluginDetailCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/plugin/function_list": {
      "post": {
        "tags": [
          "Plugin"
        ],
        "summary": "插件的函数列表.",
        "operationId": "QueryPluginFunctionsListEndpoint",
        "requestBody": {
          "x-name": "QueryPluginFunctionsListCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryPluginFunctionsListCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryPluginFunctionsListCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/plugin/system_plugin_list": {
      "post": {
        "tags": [
          "Plugin"
        ],
        "summary": "查询系统插件简要信息列表.",
        "operationId": "QuerySystemPluginBaseListEndpoint",
        "requestBody": {
          "x-name": "QuerySystemPluginBaseListCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuerySystemPluginBaseListCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryPluginBaseListCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/plugin/user_plugin_list": {
      "post": {
        "tags": [
          "Plugin"
        ],
        "summary": "查询用户插件简要信息列表.",
        "operationId": "QueryUserPluginBaseListEndpoint",
        "requestBody": {
          "x-name": "QueryUserPluginBaseListCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryUserPluginBaseListCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryPluginBaseListCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/plugin/delete_plugin": {
      "delete": {
        "tags": [
          "Plugin"
        ],
        "summary": "删除插件.",
        "operationId": "DeletePlugiEndpoint",
        "requestBody": {
          "x-name": "DeletePluginCommand",
          "description": "",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/DeletePluginCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeletePluginCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/plugin/import_mcp": {
      "post": {
        "tags": [
          "Plugin"
        ],
        "summary": "导入 mcp 服务.",
        "operationId": "ImportMcpServerPluginEndpoint",
        "requestBody": {
          "x-name": "ImportMcpServerPluginCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportMcpServerPluginCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleInt"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/plugin/pre_upload_openapi": {
      "post": {
        "tags": [
          "Plugin"
        ],
        "summary": "预上传 openapi 文件.",
        "operationId": "PreUploadOpenApiFileEndpoint",
        "requestBody": {
          "x-name": "PreUploadOpenApiFilePluginCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreUploadOpenApiFilePluginCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreUploadOpenApiFilePluginCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/plugin/refresh_mcp": {
      "post": {
        "tags": [
          "Plugin"
        ],
        "summary": "刷新mcp服务器的tool列表.",
        "operationId": "RefreshMcpServerPluginEndpoint",
        "requestBody": {
          "x-name": "RefreshMcpServerPluginCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshMcpServerPluginCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/plugin/update_mcp": {
      "post": {
        "tags": [
          "Plugin"
        ],
        "summary": "修改mcp插件.",
        "operationId": "UpdateMcpServerPluginEndpoint",
        "requestBody": {
          "x-name": "UpdateMcpServerPluginCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMcpServerPluginCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/plugin/update_openapi": {
      "post": {
        "tags": [
          "Plugin"
        ],
        "summary": "修改 openapi 插件.",
        "operationId": "UpdateOpenApiPluginEndpoint",
        "requestBody": {
          "x-name": "UpdateOpenApiPluginCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOpenApiPluginCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/prompt/ai_optmize_prompt": {
      "post": {
        "tags": [
          "Prompt"
        ],
        "summary": "使用 AI 优化提示词.",
        "operationId": "AiOptimizePromptEndpoint",
        "requestBody": {
          "x-name": "AiOptimizePromptRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AiOptimizePromptRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryAiOptimizePromptCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/prompt/create_prompt": {
      "post": {
        "tags": [
          "Prompt"
        ],
        "summary": "创建提示词.",
        "operationId": "CreatePromptEndpoints",
        "requestBody": {
          "x-name": "CreatePromptCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromptCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleInt"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/prompt/delete_prompt": {
      "delete": {
        "tags": [
          "Prompt"
        ],
        "summary": "删除提示词.",
        "operationId": "DeletePromptEndpoints",
        "requestBody": {
          "x-name": "DeletePromptCommand",
          "description": "",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/DeletePromptCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeletePromptCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/prompt/prompt_list": {
      "post": {
        "tags": [
          "Prompt"
        ],
        "summary": "查询提示词.",
        "operationId": "QueryPrompListEndpoints",
        "requestBody": {
          "x-name": "QueryPromptListCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryPromptListCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryPromptListCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/prompt/prompt_content": {
      "get": {
        "tags": [
          "Prompt"
        ],
        "summary": "获取提示词内容.",
        "operationId": "QueryPromptEndpoint",
        "parameters": [
          {
            "name": "promptId",
            "in": "query",
            "required": true,
            "description": "提示词 id.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptItem"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/prompt/update_prompt": {
      "post": {
        "tags": [
          "Prompt"
        ],
        "summary": "修改提示词.",
        "operationId": "UpdatePromptEndpoints",
        "requestBody": {
          "x-name": "UpdatePromptCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromptCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/prompt/create_class": {
      "post": {
        "tags": [
          "Prompt"
        ],
        "summary": "创建提示词分类.",
        "operationId": "CreatePromptClassEndpoints",
        "requestBody": {
          "x-name": "CreatePromptClassCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromptClassCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleInt"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/prompt/delete_class": {
      "delete": {
        "tags": [
          "Prompt"
        ],
        "summary": "删除提示词分类.",
        "operationId": "DeletePromptClassEndpoint",
        "requestBody": {
          "x-name": "DeletePromptCommand",
          "description": "",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/DeletePromptCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeletePromptCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/prompt/class_list": {
      "get": {
        "tags": [
          "Prompt"
        ],
        "summary": "查询分类.",
        "operationId": "QueryPromptClassEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryePromptClassCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/prompt/update_class": {
      "post": {
        "tags": [
          "Prompt"
        ],
        "summary": "修改提示词分类.",
        "operationId": "UpdatePromptClassEndpoints",
        "requestBody": {
          "x-name": "UpdatePromptClassCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromptClassCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/app/assistant/create_chat": {
      "post": {
        "tags": [
          "App"
        ],
        "summary": "发起新的聊天，检查用户是否有知识库、插件灯权限，如果检查通过，返回聊天 id.",
        "operationId": "CreateAiAssistantChatEndpoint",
        "requestBody": {
          "x-name": "AIAssistantChatObject",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIAssistantChatObject"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAiAssistantChatCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/app/assistant/delete_chat": {
      "delete": {
        "tags": [
          "App"
        ],
        "summary": "删除对话.",
        "operationId": "DeleteAiAssistantChatEndpoint",
        "requestBody": {
          "x-name": "DeleteAiAssistantChatCommand",
          "description": "",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAiAssistantChatCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAiAssistantChatCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/app/assistant/delete_chat_record": {
      "delete": {
        "tags": [
          "App"
        ],
        "summary": "删除对话中的一条记录.",
        "operationId": "DeleteAiAssistantChatOneRecordEndpoint",
        "requestBody": {
          "x-name": "DeleteAiAssistantChatOneRecordCommand",
          "description": "",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAiAssistantChatOneRecordCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAiAssistantChatOneRecordCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/app/assistant/chat_history": {
      "get": {
        "tags": [
          "App"
        ],
        "summary": "获取话题详细内容.",
        "operationId": "QueryAiAssistantChatHistoryEndpoint",
        "parameters": [
          {
            "name": "chatId",
            "in": "query",
            "required": true,
            "description": "对话 id.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isBaseInfo",
            "in": "query",
            "required": true,
            "description": "不包含历史记录，只查基础信息.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryAiAssistantChatHistoryCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/app/assistant/topic_list": {
      "get": {
        "tags": [
          "App"
        ],
        "summary": "获取用户所有话题记录.",
        "operationId": "QueryAiAssistantChatTopicListEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryAiAssistantChatTopicListCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/app/assistant/update_chat": {
      "post": {
        "tags": [
          "App"
        ],
        "summary": "更新聊天参数.",
        "operationId": "UpdateAiAssistanChatConfigEndpoint",
        "requestBody": {
          "x-name": "UpdateAiAssistanChatConfigCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAiAssistanChatConfigCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyCommandResponse"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/plugin/import_openapi": {
      "post": {
        "tags": [
          "Plugin"
        ],
        "summary": "完成 openapi 文件上传.",
        "operationId": "ImportOpenApiPluginEndpoint",
        "requestBody": {
          "x-name": "ImportOpenApiPluginCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportOpenApiPluginCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleInt"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/app/assistant/completions": {
      "post": {
        "tags": [
          "AiAssistant"
        ],
        "summary": "对话.",
        "operationId": "AiAssistant_Completions",
        "requestBody": {
          "x-name": "command",
          "description": "对话参数.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessingAiAssistantChatCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/download/private/{filename}": {
      "get": {
        "tags": [
          "Download"
        ],
        "summary": "下载文件.",
        "operationId": "Download_DownloadPrivateFile",
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "expiry",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "int64",
              "minimum": 0.0,
              "example": "1415926535897934852"
            },
            "x-position": 3
          },
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/storage/upload/public/{objectKey}": {
      "put": {
        "tags": [
          "Upload"
        ],
        "summary": "上传公有文件.",
        "operationId": "Upload_UploadPublicFile",
        "parameters": [
          {
            "name": "objectKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "expiry",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 3
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          },
          {
            "name": "Content-Type",
            "x-originalName": "contentType",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 5
          },
          {
            "name": "Content-Length",
            "x-originalName": "contentLength",
            "in": "header",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/api/storage/upload/private/{objectKey}": {
      "put": {
        "tags": [
          "Upload"
        ],
        "summary": "上传私有文件.",
        "operationId": "Upload_UploadPrivateFile",
        "parameters": [
          {
            "name": "objectKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "expiry",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 3
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          },
          {
            "name": "Content-Type",
            "x-originalName": "contentType",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 5
          },
          {
            "name": "Content-Length",
            "x-originalName": "contentLength",
            "in": "header",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "401": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "403": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "409": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessValidationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "PreUploadFileCommandResponse": {
        "type": "object",
        "description": "预上传文件.",
        "additionalProperties": false,
        "required": [
          "visibility",
          "isExist",
          "fileId"
        ],
        "properties": {
          "visibility": {
            "description": "文件可见性.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FileVisibility"
              }
            ]
          },
          "isExist": {
            "type": "boolean",
            "description": "文件已存在,如果文件已存在则直接使用 FileId，无需再次上传."
          },
          "fileId": {
            "type": "integer",
            "description": "文件ID.",
            "format": "int32"
          },
          "uploadUrl": {
            "type": "string",
            "description": "预签名上传地址，当 IsExist = true 时字段为空.",
            "format": "uri",
            "nullable": true
          },
          "expiration": {
            "type": "string",
            "description": "签名过期时间，当 IsExist = true 时字段为空.",
            "format": "int64",
            "minimum": 0.0,
            "nullable": true,
            "example": "1754624391144"
          }
        }
      },
      "FileVisibility": {
        "type": "string",
        "description": "存储类型.",
        "x-enumNames": [
          "Public",
          "Private"
        ],
        "enum": [
          "public",
          "private"
        ]
      },
      "PreUploadImageCommand": {
        "type": "object",
        "description": "上传图像，例如头像、公有图像等，文件公开访问，都根路径下.",
        "additionalProperties": false,
        "required": [
          "fileName",
          "contentType",
          "fileSize",
          "mD5"
        ],
        "properties": {
          "fileName": {
            "type": "string",
            "description": "文件名称."
          },
          "contentType": {
            "type": "string",
            "description": "文件类型."
          },
          "fileSize": {
            "type": "integer",
            "description": "文件大小.",
            "format": "int32"
          },
          "mD5": {
            "type": "string",
            "description": "文件 MD5."
          }
        }
      },
      "BusinessValidationResult": {
        "type": "object",
        "description": "错误响应模型.",
        "additionalProperties": false,
        "required": [
          "requestId",
          "code",
          "detail"
        ],
        "properties": {
          "requestId": {
            "type": "string",
            "description": "请求上下文 ID."
          },
          "code": {
            "type": "integer",
            "description": "错误码.",
            "format": "int32"
          },
          "detail": {
            "type": "string",
            "description": "错误消息."
          },
          "errors": {
            "type": "array",
            "description": "具体错误列表.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BusinessExceptionError"
            }
          },
          "extensions": {
            "type": "object",
            "description": "扩展.",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "BusinessExceptionError": {
        "type": "object",
        "description": "错误信息.",
        "additionalProperties": false,
        "required": [
          "name",
          "errors"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "名称."
          },
          "errors": {
            "type": "array",
            "description": "错误信息列表.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EmptyCommandResponse": {
        "type": "object",
        "description": "空数据.",
        "additionalProperties": false
      },
      "ComplateFileUploadCommand": {
        "type": "object",
        "description": "结束上传文件.",
        "additionalProperties": false,
        "required": [
          "isSuccess",
          "fileId"
        ],
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "description": "上传成功或失败."
          },
          "fileId": {
            "type": "integer",
            "description": "文件ID.",
            "format": "int32"
          }
        }
      },
      "SimpleString": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SimpleOfString"
          },
          {
            "type": "object",
            "description": "SimpleString.",
            "additionalProperties": false
          }
        ]
      },
      "SimpleOfString": {
        "type": "object",
        "description": "简单类型.",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "description": "任何类型.",
            "nullable": true
          }
        }
      },
      "UserStateInfo": {
        "type": "object",
        "description": "UserStateInfo.",
        "additionalProperties": false,
        "required": [
          "userId",
          "userName",
          "email",
          "nickName",
          "avatarPath",
          "phone",
          "isDisable",
          "isAdmin",
          "isDeleted"
        ],
        "properties": {
          "userId": {
            "type": "integer",
            "description": "用户ID.",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "用户名."
          },
          "email": {
            "type": "string",
            "description": "邮箱."
          },
          "nickName": {
            "type": "string",
            "description": "昵称."
          },
          "avatarPath": {
            "type": "string",
            "description": "头像路径."
          },
          "phone": {
            "type": "string",
            "description": "手机号."
          },
          "isDisable": {
            "type": "boolean",
            "description": "禁用."
          },
          "isAdmin": {
            "type": "boolean",
            "description": "是否管理员."
          },
          "isDeleted": {
            "type": "boolean",
            "description": "已被删除."
          }
        }
      },
      "QueryServerInfoCommandResponse": {
        "type": "object",
        "description": "服务器信息.",
        "additionalProperties": false,
        "required": [
          "serviceUrl",
          "publicStoreUrl",
          "rsaPublic",
          "maxUploadFileSize",
          "disableRegister"
        ],
        "properties": {
          "serviceUrl": {
            "type": "string",
            "description": "系统访问地址."
          },
          "publicStoreUrl": {
            "type": "string",
            "description": "公共存储地址，静态资源时可直接访问."
          },
          "rsaPublic": {
            "type": "string",
            "description": "RSA 公钥，用于加密密码等信息传输到服务器."
          },
          "maxUploadFileSize": {
            "type": "integer",
            "description": "最大可上传文件大小，单位为字节.",
            "format": "int32"
          },
          "disableRegister": {
            "type": "boolean",
            "description": "禁止注册."
          }
        }
      },
      "LoginCommandResponse": {
        "type": "object",
        "description": "登录结果.",
        "additionalProperties": false,
        "required": [
          "userId",
          "userName",
          "accessToken",
          "refreshToken",
          "tokenType",
          "expiresIn"
        ],
        "properties": {
          "userId": {
            "type": "integer",
            "description": "用户ID.",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "用户名."
          },
          "accessToken": {
            "type": "string",
            "description": "访问令牌."
          },
          "refreshToken": {
            "type": "string",
            "description": "刷新令牌."
          },
          "tokenType": {
            "type": "string",
            "description": "令牌类型."
          },
          "expiresIn": {
            "type": "string",
            "description": "过期时间（秒）.",
            "format": "int64",
            "minimum": 0.0,
            "example": "1415926535897934852"
          }
        }
      },
      "LoginCommand": {
        "type": "object",
        "description": "登录.",
        "additionalProperties": false,
        "required": [
          "userName",
          "password"
        ],
        "properties": {
          "userName": {
            "type": "string",
            "description": "用户名或邮箱."
          },
          "password": {
            "type": "string",
            "description": "密码，使用 RSA 公钥加密."
          }
        }
      },
      "OAuthBindExistAccountCommand": {
        "type": "object",
        "description": "使用 OAuth 绑定已存在的账号.",
        "additionalProperties": false,
        "required": [
          "tempOAuthBindId"
        ],
        "properties": {
          "tempOAuthBindId": {
            "type": "string",
            "description": "id.",
            "format": "uuid"
          }
        }
      },
      "OAuthLoginCommandResponse": {
        "type": "object",
        "description": "响应.",
        "additionalProperties": false,
        "required": [
          "isBindUser",
          "oAuthId",
          "name"
        ],
        "properties": {
          "isBindUser": {
            "type": "boolean",
            "description": "如果已经绑定用户."
          },
          "oAuthId": {
            "type": "string",
            "description": "id.",
            "format": "uuid"
          },
          "tempOAuthBindId": {
            "type": "string",
            "description": "如果此 id 没有绑定过用户，则返回此 id，使用此 id 绑定或注册用户.",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "用户在第三方登录的名字."
          },
          "loginCommandResponse": {
            "description": "IsBindUser == true 时，返回用户登录信息.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginCommandResponse"
              }
            ]
          }
        }
      },
      "OAuthLoginCommand": {
        "type": "object",
        "description": "使用 OAuth 登录，用于第三方登录回调后触发接口.",
        "additionalProperties": false,
        "required": [
          "code",
          "oAuthId"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Code."
          },
          "oAuthId": {
            "type": "string",
            "description": "id.",
            "format": "uuid"
          }
        }
      },
      "OAuthRegisterCommand": {
        "type": "object",
        "description": "第三方账号没有绑定记录时，使用第三方账号一键注册.",
        "additionalProperties": false,
        "required": [
          "tempOAuthBindId"
        ],
        "properties": {
          "tempOAuthBindId": {
            "type": "string",
            "description": "登录绑定 OAuth 用户 ID.",
            "format": "uuid"
          }
        }
      },
      "QueryAllOAuthPrividerCommandResponse": {
        "type": "object",
        "description": "QueryAllOAuthPrividerCommandResponse。",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "集合.",
            "items": {
              "$ref": "#/components/schemas/QueryAllOAuthPrividerCommandResponseItem"
            }
          }
        }
      },
      "QueryAllOAuthPrividerCommandResponseItem": {
        "type": "object",
        "description": "QueryAllOAuthPrividerCommandResponseItem.",
        "additionalProperties": false,
        "required": [
          "oAuthId",
          "name",
          "iconUrl",
          "provider",
          "redirectUrl"
        ],
        "properties": {
          "oAuthId": {
            "type": "string",
            "description": "id.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "提供商名称"
          },
          "iconUrl": {
            "type": "string",
            "description": "提供商图标地址"
          },
          "provider": {
            "type": "string",
            "description": "提供商标识"
          },
          "redirectUrl": {
            "type": "string",
            "description": "授权地址."
          }
        }
      },
      "QueryAllOAuthPrividerCommand": {
        "type": "object",
        "description": "查询支持的 OAuth 登录方式.",
        "additionalProperties": false
      },
      "RefreshTokenCommandResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "userId",
          "userName",
          "accessToken",
          "refreshToken",
          "tokenType",
          "expiresIn"
        ],
        "properties": {
          "userId": {
            "type": "integer",
            "description": "用户ID.",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "用户名."
          },
          "accessToken": {
            "type": "string",
            "description": "访问令牌."
          },
          "refreshToken": {
            "type": "string",
            "description": "刷新令牌."
          },
          "tokenType": {
            "type": "string",
            "description": "令牌类型."
          },
          "expiresIn": {
            "type": "string",
            "description": "过期时间（秒）.",
            "format": "int64",
            "minimum": 0.0,
            "example": "1415926535897934852"
          }
        }
      },
      "RefreshTokenCommand": {
        "type": "object",
        "description": "刷新 token.",
        "additionalProperties": false,
        "required": [
          "refreshToken"
        ],
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "刷新令牌.",
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "SimpleInt": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SimpleOfInt32"
          },
          {
            "type": "object",
            "description": "SimpleInt.",
            "additionalProperties": false
          }
        ]
      },
      "SimpleOfInt32": {
        "type": "object",
        "description": "简单类型.",
        "additionalProperties": false,
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "integer",
            "description": "任何类型.",
            "format": "int32"
          }
        }
      },
      "RegisterUserCommand": {
        "type": "object",
        "description": "注册用户.",
        "additionalProperties": false,
        "required": [
          "userName",
          "email",
          "password",
          "nickName",
          "phone"
        ],
        "properties": {
          "userName": {
            "type": "string",
            "description": "用户名.",
            "maxLength": 20,
            "minLength": 5,
            "nullable": false
          },
          "email": {
            "type": "string",
            "description": "邮箱.",
            "format": "email",
            "maxLength": 50,
            "minLength": 5,
            "pattern": "^[^@]+@[^@]+$",
            "nullable": false
          },
          "password": {
            "type": "string",
            "description": "密码，接口请求时，使用 RSA 公钥加密密码.",
            "minLength": 1,
            "nullable": false
          },
          "nickName": {
            "type": "string",
            "description": "昵称.",
            "maxLength": 20,
            "minLength": 3,
            "nullable": false
          },
          "phone": {
            "type": "string",
            "description": "手机号.",
            "minLength": 1,
            "pattern": "^(?:\\+?1)?\\d{10,15}$",
            "nullable": false
          }
        }
      },
      "DeleteUserCommand": {
        "type": "object",
        "description": "删除用户.",
        "additionalProperties": false,
        "required": [
          "userIds"
        ],
        "properties": {
          "userIds": {
            "type": "array",
            "description": "用户ID.",
            "minLength": 1,
            "nullable": false,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "DisableUserCommand": {
        "type": "object",
        "description": "禁用启用用户.",
        "additionalProperties": false,
        "required": [
          "userIds",
          "isDisable"
        ],
        "properties": {
          "userIds": {
            "type": "array",
            "description": "用户ID.",
            "minLength": 1,
            "nullable": false,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "isDisable": {
            "type": "boolean",
            "description": "是否禁用."
          }
        }
      },
      "QueryUserListCommandResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedResultOfQueryUserListCommandResponseItem"
          },
          {
            "type": "object",
            "description": "QueryUserListCommandResponse.",
            "additionalProperties": false
          }
        ]
      },
      "PagedResultOfQueryUserListCommandResponseItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedParamter"
          },
          {
            "type": "object",
            "description": "分页结果.",
            "additionalProperties": false,
            "required": [
              "items",
              "total"
            ],
            "properties": {
              "items": {
                "type": "array",
                "description": "项目集合.",
                "items": {
                  "$ref": "#/components/schemas/QueryUserListCommandResponseItem"
                }
              },
              "total": {
                "type": "integer",
                "description": "总数.",
                "format": "int32"
              }
            }
          }
        ]
      },
      "QueryUserListCommandResponseItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditsInfo"
          },
          {
            "type": "object",
            "description": "QueryUserListCommandResponseItem.",
            "additionalProperties": false,
            "required": [
              "id",
              "userName",
              "email",
              "nickName",
              "avatarPath",
              "phone",
              "isDisable",
              "isAdmin"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "用户ID.",
                "format": "int32"
              },
              "userName": {
                "type": "string",
                "description": "用户名."
              },
              "email": {
                "type": "string",
                "description": "邮箱."
              },
              "nickName": {
                "type": "string",
                "description": "昵称."
              },
              "avatarPath": {
                "type": "string",
                "description": "头像路径."
              },
              "phone": {
                "type": "string",
                "description": "手机号."
              },
              "isDisable": {
                "type": "boolean",
                "description": "禁用."
              },
              "isAdmin": {
                "type": "boolean",
                "description": "是否管理员."
              }
            }
          }
        ]
      },
      "AuditsInfo": {
        "type": "object",
        "description": "数据子项.",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "createTime",
          "createUserId",
          "createUserName",
          "updateTime",
          "updateUserId",
          "updateUserName"
        ],
        "properties": {
          "createTime": {
            "type": "string",
            "description": "创建时间.",
            "format": "int64",
            "minimum": 0.0,
            "example": "1754624391144"
          },
          "createUserId": {
            "type": "integer",
            "description": "创建人ID.",
            "format": "int32"
          },
          "createUserName": {
            "type": "string",
            "description": "创建者 名字."
          },
          "updateTime": {
            "type": "string",
            "description": "更新时间.",
            "format": "int64",
            "minimum": 0.0,
            "example": "1754624391144"
          },
          "updateUserId": {
            "type": "integer",
            "description": "更新人ID.",
            "format": "int32"
          },
          "updateUserName": {
            "type": "string",
            "description": "更新人 名字."
          }
        }
      },
      "PagedParamter": {
        "type": "object",
        "description": "分页参数.",
        "additionalProperties": false,
        "required": [
          "pageNo",
          "pageSize"
        ],
        "properties": {
          "pageNo": {
            "type": "integer",
            "description": "页码，从1开始.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "每页大小.",
            "format": "int32"
          }
        }
      },
      "QueryUserListCommand": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedParamter"
          },
          {
            "type": "object",
            "description": "分页查询用户列表.",
            "additionalProperties": false,
            "properties": {
              "userId": {
                "type": "integer",
                "description": "查询指定用户.",
                "format": "int32",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "description": "根据用户名筛选.",
                "nullable": true
              },
              "search": {
                "type": "string",
                "description": "搜索参数.",
                "nullable": true
              },
              "isAdmin": {
                "type": "boolean",
                "description": "只看管理员.",
                "nullable": true
              }
            }
          }
        ]
      },
      "ResetUserPasswordCommand": {
        "type": "object",
        "description": "重置用户密码.",
        "additionalProperties": false,
        "required": [
          "userId"
        ],
        "properties": {
          "userId": {
            "type": "integer",
            "description": "用户 id.",
            "format": "int32",
            "minimum": 0.0,
            "exclusiveMinimum": true
          }
        }
      },
      "SetUserAdminCommand": {
        "type": "object",
        "description": "设置用户是否为管理员.",
        "additionalProperties": false,
        "required": [
          "userIds",
          "isAdmin"
        ],
        "properties": {
          "userIds": {
            "type": "array",
            "description": "用户ID.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "isAdmin": {
            "type": "boolean",
            "description": "是否为管理员."
          }
        }
      },
      "QuerySystemSettingsCommandResponse": {
        "type": "object",
        "description": "QuerySystemSettingsCommandResponse.",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "列表.",
            "items": {
              "$ref": "#/components/schemas/QuerySystemSettingsCommandResponseItem"
            }
          }
        }
      },
      "QuerySystemSettingsCommandResponseItem": {
        "type": "object",
        "description": "QuerySystemSettingsCommandResponseItem.",
        "additionalProperties": false,
        "required": [
          "id",
          "key",
          "value",
          "description"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "id.",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "description": "配置名称."
          },
          "value": {
            "type": "string",
            "description": "配置值."
          },
          "description": {
            "type": "string",
            "description": "描述."
          }
        }
      },
      "SetSystemSettingsCommand": {
        "type": "object",
        "description": "设置系统配置.",
        "additionalProperties": false,
        "required": [
          "settings"
        ],
        "properties": {
          "settings": {
            "description": "系统配置.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/KeyValueString"
              }
            ]
          }
        }
      },
      "KeyValueString": {
        "allOf": [
          {
            "$ref": "#/components/schemas/KeyValueOfStringAndString"
          },
          {
            "type": "object",
            "description": "KeyValueString.",
            "additionalProperties": false
          }
        ]
      },
      "KeyValueOfStringAndString": {
        "type": "object",
        "description": "kv.",
        "additionalProperties": false,
        "properties": {
          "key": {
            "type": "string",
            "description": "Key.",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Value.",
            "nullable": true
          }
        }
      },
      "CreateOAuthConnectionCommand": {
        "type": "object",
        "description": "创建 OAuth2.0 连接配置.",
        "additionalProperties": false,
        "required": [
          "name",
          "key",
          "secret",
          "iconUrl",
          "wellKnown",
          "provider"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "认证名称.",
            "maxLength": 20,
            "minLength": 2,
            "pattern": "^[\\u4e00-\\u9fa5a-zA-Z0-9]+$",
            "nullable": false
          },
          "provider": {
            "description": "提供商.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/OAuthPrivider"
              }
            ]
          },
          "key": {
            "type": "string",
            "description": "应用key.",
            "minLength": 1,
            "nullable": false
          },
          "secret": {
            "type": "string",
            "description": "密钥.",
            "minLength": 1,
            "nullable": false
          },
          "iconUrl": {
            "type": "string",
            "description": "图标地址.",
            "minLength": 1,
            "nullable": false
          },
          "wellKnown": {
            "type": "string",
            "description": "发现端口.",
            "format": "uri",
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "OAuthPrivider": {
        "type": "string",
        "description": "OAuth 提供商.",
        "x-enumNames": [
          "Custom",
          "Feishu",
          "DingTalk",
          "GitHub"
        ],
        "enum": [
          "custom",
          "feishu",
          "dingTalk",
          "gitHub"
        ]
      },
      "DeleteOAuthConnectionCommand": {
        "type": "object",
        "description": "删除认证方式.",
        "additionalProperties": false,
        "required": [
          "oAuthConnectionId"
        ],
        "properties": {
          "oAuthConnectionId": {
            "type": "string",
            "description": "id.",
            "format": "uuid",
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "QueryAllOAuthPrividerDetailCommandResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "列表.",
            "items": {
              "$ref": "#/components/schemas/QueryAllOAuthPrividerDetailCommandResponseItem"
            }
          }
        }
      },
      "QueryAllOAuthPrividerDetailCommandResponseItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditsInfo"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "id",
              "name",
              "iconUrl",
              "provider",
              "key",
              "wellKnown",
              "authorizeUrl"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "id.",
                "format": "uuid"
              },
              "name": {
                "type": "string",
                "description": "提供商名称"
              },
              "iconUrl": {
                "type": "string",
                "description": "提供商图标地址"
              },
              "provider": {
                "type": "string",
                "description": "提供商标识"
              },
              "key": {
                "type": "string"
              },
              "wellKnown": {
                "type": "string",
                "description": "发现端口"
              },
              "authorizeUrl": {
                "type": "string",
                "description": "回调地址."
              }
            }
          }
        ]
      },
      "UpdateOAuthConnectionCommand": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateOAuthConnectionCommand"
          },
          {
            "type": "object",
            "description": "更新 OAuth2.0 连接配置.",
            "additionalProperties": false,
            "required": [
              "oAuthConnectionId"
            ],
            "properties": {
              "oAuthConnectionId": {
                "type": "string",
                "description": "id.",
                "format": "uuid"
              }
            }
          }
        ]
      },
      "QueryUserBindAccountCommandResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryUserBindAccountCommandResponseItem"
            }
          }
        }
      },
      "QueryUserBindAccountCommandResponseItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "bindId",
          "name",
          "providerId",
          "iconUrl"
        ],
        "properties": {
          "bindId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "providerId": {
            "type": "string",
            "format": "uuid"
          },
          "iconUrl": {
            "type": "string"
          }
        }
      },
      "UnbindUserAccountCommand": {
        "type": "object",
        "description": "解绑第三方账号.",
        "additionalProperties": false,
        "required": [
          "userId",
          "bindId"
        ],
        "properties": {
          "userId": {
            "type": "integer",
            "description": "用户 id.",
            "format": "int32"
          },
          "bindId": {
            "type": "integer",
            "description": "绑定 id.",
            "format": "int32"
          }
        }
      },
      "UpdateUserInfoCommand": {
        "type": "object",
        "description": "修改用户信息.",
        "additionalProperties": false,
        "required": [
          "userId",
          "userName",
          "email",
          "nickName",
          "phone"
        ],
        "properties": {
          "userId": {
            "type": "integer",
            "description": "用户ID.",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "用户名."
          },
          "email": {
            "type": "string",
            "description": "邮箱."
          },
          "nickName": {
            "type": "string",
            "description": "昵称."
          },
          "phone": {
            "type": "string",
            "description": "手机号."
          }
        }
      },
      "UpdateUserPasswordCommand": {
        "type": "object",
        "description": "重置密码.",
        "additionalProperties": false,
        "required": [
          "userId",
          "password"
        ],
        "properties": {
          "userId": {
            "type": "integer",
            "description": "用户 id.",
            "format": "int32"
          },
          "password": {
            "type": "string",
            "description": "新的密码，提前使用 rsa 公有加密."
          }
        }
      },
      "UploadtUserAvatarCommand": {
        "type": "object",
        "description": "上传用户头像.",
        "additionalProperties": false,
        "required": [
          "userId",
          "fileId"
        ],
        "properties": {
          "userId": {
            "type": "integer",
            "description": "用户 id.",
            "format": "int32"
          },
          "fileId": {
            "type": "integer",
            "description": "文件id.",
            "format": "int32"
          }
        }
      },
      "QueryPublicSystemAiModelListCommandResponse": {
        "type": "object",
        "description": "Ai 模型列表.",
        "additionalProperties": false,
        "required": [
          "aiModels"
        ],
        "properties": {
          "aiModels": {
            "type": "array",
            "description": "AI 模型列表.",
            "items": {
              "$ref": "#/components/schemas/AiNotKeyEndpoint"
            }
          }
        }
      },
      "AiNotKeyEndpoint": {
        "type": "object",
        "description": "AI 模型.",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "deploymentName",
          "title",
          "aiModelType",
          "provider",
          "contextWindowTokens",
          "endpoint",
          "abilities",
          "textOutput",
          "maxDimension"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "id.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "模型名称."
          },
          "deploymentName": {
            "type": "string",
            "description": "部署名称，适配 Azure Open AI ，非 Azure Open AI 跟 Name 同名."
          },
          "title": {
            "type": "string",
            "description": "对用户显示名称."
          },
          "aiModelType": {
            "description": "模型类型.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AiModelType"
              }
            ]
          },
          "provider": {
            "description": "AI 服务商.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AiProvider"
              }
            ]
          },
          "contextWindowTokens": {
            "type": "integer",
            "description": "the context window (or input + output tokens limit).",
            "format": "int32"
          },
          "endpoint": {
            "type": "string",
            "description": "请求端点."
          },
          "abilities": {
            "description": "additional parameters.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ModelAbilities"
              }
            ]
          },
          "textOutput": {
            "type": "integer",
            "description": "最大模型输出 tokens，TextOutput.",
            "format": "int32"
          },
          "maxDimension": {
            "type": "integer",
            "description": "向量模型的维度.",
            "format": "int32"
          }
        }
      },
      "AiModelType": {
        "type": "string",
        "description": "AI 模型大分类.",
        "x-enumNames": [
          "Chat",
          "Embedding",
          "Image",
          "TTS",
          "STTS",
          "Realtime",
          "Text2video",
          "Text2music"
        ],
        "enum": [
          "chat",
          "embedding",
          "image",
          "tts",
          "stts",
          "realtime",
          "text2video",
          "text2music"
        ]
      },
      "AiProvider": {
        "type": "string",
        "description": "AI 服务提供商，服务商来源.",
        "x-enumNames": [
          "Custom",
          "Ai21",
          "Ai360",
          "Anthropic",
          "Azure",
          "Baichuan",
          "Bedrock",
          "Cloudflare",
          "Cohere",
          "DeepSeek",
          "FireworksAI",
          "GiteeAI",
          "GitHub",
          "Google",
          "Groq",
          "Higress",
          "HuggingFace",
          "Hunyuan",
          "InfinitiAI",
          "InternLM",
          "Jina",
          "LMStudio",
          "MiniMax",
          "Mistral",
          "Moonshot",
          "Novita",
          "Nvidia",
          "Ollama",
          "OpenAI",
          "OpenRouter",
          "Perplexity",
          "PPIO",
          "Qiniu",
          "Qwen",
          "SambaNova",
          "Search1API",
          "SenseNova",
          "SiliconCloud",
          "Spark",
          "StepFun",
          "Taichu",
          "TencentCloud",
          "TogetherAI",
          "Upstage",
          "VertexAI",
          "Vllm",
          "Volcengine",
          "Wenxin",
          "XAI",
          "Xinference",
          "ZeroOne",
          "Zhipu"
        ],
        "enum": [
          "custom",
          "ai21",
          "ai360",
          "anthropic",
          "azure",
          "baichuan",
          "bedrock",
          "cloudflare",
          "cohere",
          "deepseek",
          "fireworksai",
          "giteeai",
          "github",
          "google",
          "groq",
          "higress",
          "huggingface",
          "hunyuan",
          "infiniai",
          "internlm",
          "jina",
          "lmstudio",
          "minimax",
          "mistral",
          "moonshot",
          "novita",
          "nvidia",
          "ollama",
          "openai",
          "openrouter",
          "perplexity",
          "ppio",
          "qiniu",
          "qwen",
          "sambanova",
          "search1api",
          "sensenova",
          "siliconcloud",
          "spark",
          "stepfun",
          "taichu",
          "tencentcloud",
          "togetherai",
          "upstage",
          "vertexai",
          "vllm",
          "volcengine",
          "wenxin",
          "xai",
          "xinference",
          "zeroone",
          "zhipu"
        ]
      },
      "ModelAbilities": {
        "type": "object",
        "description": "ModelAbilities.",
        "additionalProperties": false,
        "properties": {
          "files": {
            "type": "boolean",
            "description": "Whether model supports file upload",
            "nullable": true
          },
          "functionCall": {
            "type": "boolean",
            "description": "Whether model supports function call",
            "nullable": true
          },
          "imageOutput": {
            "type": "boolean",
            "description": "Whether model supports image output",
            "nullable": true
          },
          "vision": {
            "type": "boolean",
            "description": "Whether model supports vision",
            "nullable": true
          }
        }
      },
      "QueryPublicSystemAiModelListCommand": {
        "type": "object",
        "description": "查询公开访问的系统AI模型列表.",
        "additionalProperties": false,
        "properties": {
          "provider": {
            "description": "AI 模型类型.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AiProvider"
              }
            ]
          },
          "aiModelType": {
            "description": "Ai 模型类型.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AiModelType"
              }
            ]
          }
        }
      },
      "QueryAiModelListCommandResponse": {
        "type": "object",
        "description": "Ai 模型列表.",
        "additionalProperties": false,
        "required": [
          "aiModels"
        ],
        "properties": {
          "aiModels": {
            "type": "array",
            "description": "AI 模型列表.",
            "items": {
              "$ref": "#/components/schemas/AiNotKeyEndpoint"
            }
          }
        }
      },
      "QueryUserAiModelListRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "provider": {
            "description": "AI 模型类型.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AiProvider"
              }
            ]
          },
          "aiModelType": {
            "description": "Ai 模型类型.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AiModelType"
              }
            ]
          }
        }
      },
      "QueryAiModelProviderListResponse": {
        "type": "object",
        "description": "AI 模型供应商和已添加的ai模型数量列表.",
        "additionalProperties": false,
        "required": [
          "providers"
        ],
        "properties": {
          "providers": {
            "type": "array",
            "description": "AI 服务商列表，{ai服务提供商,模型数量}.",
            "items": {
              "$ref": "#/components/schemas/QueryAiModelProviderCount"
            }
          }
        }
      },
      "QueryAiModelProviderCount": {
        "type": "object",
        "description": "AI 模型数量.",
        "additionalProperties": false,
        "required": [
          "provider",
          "count"
        ],
        "properties": {
          "provider": {
            "description": "供应商名称.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AiProvider"
              }
            ]
          },
          "count": {
            "type": "integer",
            "description": "模型数量.",
            "format": "int32"
          }
        }
      },
      "QuerySystemAiModelListCommandResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "aiModels"
        ],
        "properties": {
          "aiModels": {
            "type": "array",
            "description": "AI 模型列表.",
            "items": {
              "$ref": "#/components/schemas/QuerySystemAiModelListCommandResponseItem"
            }
          }
        }
      },
      "QuerySystemAiModelListCommandResponseItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AiNotKeyEndpoint"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "isSystem",
              "isPublic"
            ],
            "properties": {
              "isSystem": {
                "type": "boolean"
              },
              "isPublic": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "QuerySystemAiModelListCommand": {
        "type": "object",
        "description": "系统视图，查询系统能够看到的模型列表.",
        "additionalProperties": false,
        "properties": {
          "provider": {
            "description": "AI 模型类型.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AiProvider"
              }
            ]
          },
          "aiModelType": {
            "description": "Ai 模型类型.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AiModelType"
              }
            ]
          }
        }
      },
      "AddSystemAiModelRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AiEndpoint"
          },
          {
            "type": "object",
            "description": "添加一个系统级模型.",
            "additionalProperties": false,
            "required": [
              "isPublic"
            ],
            "properties": {
              "isPublic": {
                "type": "boolean",
                "description": "公开使用，只有系统模型才能公开使用."
              }
            }
          }
        ]
      },
      "AiEndpoint": {
        "type": "object",
        "description": "AI 模型.",
        "additionalProperties": false,
        "required": [
          "name",
          "deploymentName",
          "title",
          "aiModelType",
          "provider",
          "contextWindowTokens",
          "endpoint",
          "key",
          "textOutput",
          "maxDimension"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "模型名称."
          },
          "deploymentName": {
            "type": "string",
            "description": "部署名称，适配 Azure Open AI ，非 Azure Open AI 跟 Name 同名."
          },
          "title": {
            "type": "string",
            "description": "对用户显示名称.",
            "maxLength": 50,
            "minLength": 0,
            "nullable": false
          },
          "aiModelType": {
            "description": "模型类型.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AiModelType"
              }
            ]
          },
          "provider": {
            "description": "AI 服务商.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AiProvider"
              }
            ]
          },
          "contextWindowTokens": {
            "type": "integer",
            "description": "the context window (or input + output tokens limit).",
            "format": "int32"
          },
          "endpoint": {
            "type": "string",
            "description": "请求端点.",
            "maxLength": 500,
            "minLength": 0,
            "nullable": false
          },
          "key": {
            "type": "string",
            "description": "key.",
            "minLength": 1,
            "nullable": false
          },
          "abilities": {
            "description": "additional parameters.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ModelAbilities"
              }
            ]
          },
          "textOutput": {
            "type": "integer",
            "description": "最大模型输出 tokens，也可表示嵌入向量等最大输出数量.",
            "format": "int32"
          },
          "maxDimension": {
            "type": "integer",
            "description": "向量模型的维度.",
            "format": "int32"
          }
        }
      },
      "UpdateSystemAiModelRequest": {
        "required": [
          "aiModelId"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/AiEndpoint"
          },
          {
            "type": "object",
            "description": "修改一个系统级模型.",
            "additionalProperties": false,
            "required": [
              "aiModelId",
              "isPublic"
            ],
            "properties": {
              "aiModelId": {
                "type": "integer",
                "description": "AI 模型 id.",
                "format": "int32",
                "minLength": 1,
                "nullable": false
              },
              "isPublic": {
                "type": "boolean",
                "description": "公开使用，只有系统模型才能公开使用."
              }
            }
          }
        ]
      },
      "DeleteAiModelCommand": {
        "type": "object",
        "description": "删除 ai 模型.",
        "additionalProperties": false,
        "required": [
          "aiModelId"
        ],
        "properties": {
          "aiModelId": {
            "type": "integer",
            "description": "模型 id.",
            "format": "int32",
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "AddUserAiModelRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AiEndpoint"
          },
          {
            "type": "object",
            "description": "添加一个用户私有的模型.",
            "additionalProperties": false
          }
        ]
      },
      "UpdateUserAiModelRequest": {
        "required": [
          "aiModelId"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/AiEndpoint"
          },
          {
            "type": "object",
            "description": "修改一个用户私有的模型.",
            "additionalProperties": false,
            "required": [
              "aiModelId"
            ],
            "properties": {
              "aiModelId": {
                "type": "integer",
                "description": "AI 模型 id.",
                "format": "int32",
                "minLength": 1,
                "nullable": false
              }
            }
          }
        ]
      },
      "CreateWikiCommand": {
        "type": "object",
        "description": "创建知识库.",
        "additionalProperties": false,
        "required": [
          "name",
          "description"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "团队名称.",
            "maxLength": 20,
            "minLength": 2,
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "团队描述.",
            "maxLength": 255,
            "minLength": 2,
            "nullable": false
          }
        }
      },
      "DeleteWikiCommand": {
        "type": "object",
        "description": "删除知识库.",
        "additionalProperties": false,
        "required": [
          "wikiId"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          }
        }
      },
      "InviteWikiUserCommand": {
        "type": "object",
        "description": "邀请知识库协作成员，可以管理知识库文档等.",
        "additionalProperties": false,
        "required": [
          "userName",
          "wikiId"
        ],
        "properties": {
          "userName": {
            "type": "string",
            "description": "被邀请用户.",
            "minLength": 1,
            "nullable": false
          },
          "wikiId": {
            "type": "integer",
            "description": "知识库 id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          }
        }
      },
      "QueryWikiInfoResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditsInfo"
          },
          {
            "type": "object",
            "description": "知识库信息.",
            "additionalProperties": false,
            "required": [
              "wikiId",
              "name",
              "description",
              "isPublic",
              "isUser",
              "documentCount",
              "embeddingModelId",
              "isLock",
              "embeddingModelTokenizer",
              "embeddingDimensions",
              "embeddingBatchSize",
              "maxRetries"
            ],
            "properties": {
              "wikiId": {
                "type": "integer",
                "description": "知识库 id.",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "知识库名称."
              },
              "description": {
                "type": "string",
                "description": "知识库描述."
              },
              "isPublic": {
                "type": "boolean",
                "description": "公开使用，所有人不需要加入团队即可使用此知识库."
              },
              "isUser": {
                "type": "boolean",
                "description": "是否该知识库成员."
              },
              "documentCount": {
                "type": "integer",
                "description": "文档数量.",
                "format": "int32"
              },
              "embeddingModelId": {
                "type": "integer",
                "description": "指定进行文档向量化的模型.",
                "format": "int32"
              },
              "isLock": {
                "type": "boolean",
                "description": "锁定配置，锁定后不能再修改."
              },
              "embeddingModelTokenizer": {
                "description": "分词器.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmbeddingTokenizer"
                  }
                ]
              },
              "embeddingDimensions": {
                "type": "integer",
                "description": "维度，跟模型有关.",
                "format": "int32"
              },
              "embeddingBatchSize": {
                "type": "integer",
                "description": "批处理大小.",
                "format": "int32"
              },
              "maxRetries": {
                "type": "integer",
                "description": "最大重试次数.",
                "format": "int32"
              }
            }
          }
        ]
      },
      "EmbeddingTokenizer": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "P50k",
          "Cl100k",
          "O200k"
        ],
        "enum": [
          "p50k",
          "cl100k",
          "o200k"
        ]
      },
      "QueryWikiBaseListCommand": {
        "type": "object",
        "description": "查询当前用户可以看到的所有知识库.",
        "additionalProperties": false,
        "required": [
          "userId"
        ],
        "properties": {
          "userId": {
            "type": "integer",
            "description": "用户id.",
            "format": "int32"
          },
          "isOwn": {
            "type": "boolean",
            "description": "只查询该用户创建的知识库.",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean",
            "description": "只查询公开的知识库.",
            "nullable": true
          },
          "isUser": {
            "type": "boolean",
            "description": "只查询已加入的知识库.",
            "nullable": true
          }
        }
      },
      "QueryWikiInfoCommand": {
        "type": "object",
        "description": "获取知识库简单信息.",
        "additionalProperties": false,
        "required": [
          "wikiId"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库 id.",
            "format": "int32"
          }
        }
      },
      "QueryWikiUsersCommandResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "users"
        ],
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryWikiUsersCommandResponseItem"
            }
          }
        }
      },
      "QueryWikiUsersCommandResponseItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditsInfo"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "id",
              "userName",
              "email",
              "nickName",
              "avatarPath"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "用户ID.",
                "format": "int32"
              },
              "userName": {
                "type": "string",
                "description": "用户名."
              },
              "email": {
                "type": "string",
                "description": "邮箱."
              },
              "nickName": {
                "type": "string",
                "description": "昵称."
              },
              "avatarPath": {
                "type": "string",
                "description": "头像路径."
              }
            }
          }
        ]
      },
      "QueryWikiUsersCommand": {
        "type": "object",
        "description": "查询知识库协作成员.",
        "additionalProperties": false,
        "required": [
          "wikiId"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "查询知识库协作的成员列表.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          }
        }
      },
      "RemoveWikiUserCommand": {
        "type": "object",
        "description": "移除知识库协作成员.",
        "additionalProperties": false,
        "required": [
          "wikiId",
          "userIds"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库 id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "userIds": {
            "type": "array",
            "description": "被邀请用户.",
            "nullable": false,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "UpdateWikiConfigCommand": {
        "required": [
          "wikiId"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/EmbeddingConfig"
          },
          {
            "type": "object",
            "description": "更新知识库设置信息.",
            "additionalProperties": false,
            "required": [
              "wikiId"
            ],
            "properties": {
              "wikiId": {
                "type": "integer",
                "description": "知识库 id.",
                "format": "int32",
                "minimum": 0.0,
                "minLength": 1,
                "nullable": false,
                "exclusiveMinimum": true
              }
            }
          }
        ]
      },
      "EmbeddingConfig": {
        "type": "object",
        "description": "知识库配置.",
        "additionalProperties": false,
        "required": [
          "embeddingModelId",
          "embeddingModelTokenizer",
          "embeddingDimensions",
          "embeddingBatchSize",
          "maxRetries"
        ],
        "properties": {
          "embeddingModelId": {
            "type": "integer",
            "description": "指定进行文档向量化的模型.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "embeddingModelTokenizer": {
            "description": "分词器.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddingTokenizer"
              }
            ]
          },
          "embeddingDimensions": {
            "type": "integer",
            "description": "维度，跟模型有关，小于嵌入向量的最大值.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "embeddingBatchSize": {
            "type": "integer",
            "description": "批处理大小.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "maxRetries": {
            "type": "integer",
            "description": "文档处理最大重试次数.",
            "format": "int32",
            "maximum": 5.0,
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMaximum": true,
            "exclusiveMinimum": true
          }
        }
      },
      "UpdateWikiInfoCommand": {
        "type": "object",
        "description": "修改知识库信息.",
        "additionalProperties": false,
        "required": [
          "wikiId",
          "name",
          "description",
          "isPublic",
          "isSystem"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库 id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "name": {
            "type": "string",
            "description": "知识库名称.",
            "maxLength": 20,
            "minLength": 2,
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "知识库描述.",
            "maxLength": 255,
            "minLength": 2,
            "nullable": false
          },
          "isPublic": {
            "type": "boolean",
            "description": "公开使用，所有人不需要加入团队即可使用此知识库."
          },
          "isSystem": {
            "type": "boolean",
            "description": "是否系统知识库."
          }
        }
      },
      "AddWebDocumentConfigCommand": {
        "type": "object",
        "description": "添加一个网页爬取配置.",
        "additionalProperties": false,
        "required": [
          "wikiId",
          "title",
          "address",
          "limitMaxCount",
          "isCrawlOther",
          "isAutoEmbedding",
          "isWaitJs"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库 id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "title": {
            "type": "string",
            "description": "标题.",
            "maxLength": 50,
            "minLength": 0,
            "nullable": false
          },
          "address": {
            "type": "string",
            "description": "页面地址.",
            "format": "uri"
          },
          "limitAddress": {
            "type": "string",
            "description": "限制自动爬取的网页都在该路径之下,limit_address跟address必须具有相同域名.",
            "format": "uri",
            "nullable": true
          },
          "limitMaxCount": {
            "type": "integer",
            "description": "最大抓取数量.",
            "format": "int32",
            "maximum": 1000.0,
            "minimum": 0.0,
            "exclusiveMinimum": true
          },
          "isCrawlOther": {
            "type": "boolean",
            "description": "是否抓取其它页面."
          },
          "isAutoEmbedding": {
            "type": "boolean",
            "description": "是否自动向量化."
          },
          "isWaitJs": {
            "type": "boolean",
            "description": "等待js加载完成."
          }
        }
      },
      "CancalCrawleTaskCommand": {
        "type": "object",
        "description": "取消爬虫任务.",
        "additionalProperties": false,
        "required": [
          "wikiId",
          "wikiWebConfigId",
          "taskId"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库 id.",
            "format": "int32"
          },
          "wikiWebConfigId": {
            "type": "integer",
            "format": "int32"
          },
          "taskId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DeleteWebDocumentConfigCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "wikiId",
          "wikiWebConfigId",
          "isDeleteWebDocuments"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库 id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "wikiWebConfigId": {
            "type": "integer",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "isDeleteWebDocuments": {
            "type": "boolean",
            "description": "是否删除该配置下的所有网页."
          }
        }
      },
      "QueryWikiConfigInfoCommandResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditsInfo"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "wikiId",
              "wikiConfigId",
              "title",
              "address",
              "limitAddress",
              "limitMaxCount",
              "isCrawlOther",
              "isAutoEmbedding",
              "isWaitJs",
              "selector"
            ],
            "properties": {
              "wikiId": {
                "type": "integer",
                "description": "知识库id.",
                "format": "int32"
              },
              "wikiConfigId": {
                "type": "integer",
                "description": "id.",
                "format": "int32"
              },
              "title": {
                "type": "string",
                "description": "标题."
              },
              "address": {
                "type": "string",
                "description": "页面地址."
              },
              "limitAddress": {
                "type": "string",
                "description": "限制自动爬取的网页都在该路径之下,limit_address跟address必须具有相同域名."
              },
              "limitMaxCount": {
                "type": "integer",
                "description": "最大抓取数量.",
                "format": "int32"
              },
              "isCrawlOther": {
                "type": "boolean",
                "description": "是否抓取其它页面."
              },
              "isAutoEmbedding": {
                "type": "boolean",
                "description": "是否自动向量化."
              },
              "isWaitJs": {
                "type": "boolean",
                "description": "等待js加载完成."
              },
              "selector": {
                "type": "string",
                "description": "html 筛选器."
              }
            }
          }
        ]
      },
      "QueryWikiConfigInfoCommand": {
        "type": "object",
        "additionalProperties": false
      },
      "QueryWikiWebConfigListCommandResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "爬虫配置列表.",
            "items": {
              "$ref": "#/components/schemas/WeikiWebConfigSimpleItem"
            }
          }
        }
      },
      "WeikiWebConfigSimpleItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditsInfo"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "id",
              "wikiId",
              "title",
              "address"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "爬虫配置 id.",
                "format": "int32"
              },
              "wikiId": {
                "type": "integer",
                "description": "知识库 id.",
                "format": "int32"
              },
              "title": {
                "type": "string",
                "description": "爬虫标题."
              },
              "address": {
                "type": "string",
                "description": "爬虫地址."
              }
            }
          }
        ]
      },
      "QueryWikiWebConfigListCommand": {
        "type": "object",
        "description": "查询知识库爬虫列表.",
        "additionalProperties": false
      },
      "QueryWikiWebConfigTaskStateListCommandResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "pageStates",
          "tasks"
        ],
        "properties": {
          "pageStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WikiWebConfigCrawleStateItem"
            }
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WikiConfigCrawleTaskItem"
            }
          }
        }
      },
      "WikiWebConfigCrawleStateItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "wikiId",
          "wikiWebConfigId",
          "url",
          "message",
          "state",
          "createTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "id.",
            "format": "int64",
            "minimum": 0.0,
            "example": "1415926535897934852"
          },
          "wikiId": {
            "type": "integer",
            "description": "知识库id.",
            "format": "int32"
          },
          "wikiWebConfigId": {
            "type": "integer",
            "description": "爬虫id.",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "description": "正在爬取的地址."
          },
          "message": {
            "type": "string",
            "description": "信息."
          },
          "state": {
            "description": "爬取状态.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawleState"
              }
            ]
          },
          "createTime": {
            "type": "string",
            "description": "创建时间.",
            "format": "int64",
            "minimum": 0.0,
            "example": "1754624391144"
          }
        }
      },
      "CrawleState": {
        "type": "string",
        "description": "爬虫状态.",
        "x-enumNames": [
          "None",
          "Wait",
          "Processing",
          "Cancal",
          "Successful",
          "Failed"
        ],
        "enum": [
          "none",
          "wait",
          "processing",
          "cancal",
          "successful",
          "failed"
        ]
      },
      "WikiConfigCrawleTaskItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "wikiId",
          "wikiWebConfigId",
          "crawleState",
          "message",
          "selector",
          "pageCount",
          "faildPageCount",
          "maxTokensPerParagraph",
          "overlappingTokens",
          "tokenizer",
          "createUserId",
          "createTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "id.",
            "format": "uuid"
          },
          "wikiId": {
            "type": "integer",
            "description": "知识库id.",
            "format": "int32"
          },
          "wikiWebConfigId": {
            "type": "integer",
            "description": "web配置id.",
            "format": "int32"
          },
          "crawleState": {
            "description": "爬取状态.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawleState"
              }
            ]
          },
          "message": {
            "type": "string",
            "description": "任务执行信息."
          },
          "selector": {
            "type": "string",
            "description": "选择器."
          },
          "pageCount": {
            "type": "integer",
            "description": "爬取成功的页面数量.",
            "format": "int32"
          },
          "faildPageCount": {
            "type": "integer",
            "description": "爬取失败的页面数量.",
            "format": "int32"
          },
          "maxTokensPerParagraph": {
            "type": "integer",
            "description": "每段最大token数量.",
            "format": "int32"
          },
          "overlappingTokens": {
            "type": "integer",
            "description": "重叠的token数量.",
            "format": "int32"
          },
          "tokenizer": {
            "type": "string",
            "description": "分词器."
          },
          "createUserId": {
            "type": "integer",
            "description": "创建人.",
            "format": "int32"
          },
          "createTime": {
            "type": "string",
            "description": "创建时间.",
            "format": "int64",
            "minimum": 0.0,
            "example": "1754624391144"
          }
        }
      },
      "QueryWikiWebConfigTaskStateListCommand": {
        "type": "object",
        "additionalProperties": false
      },
      "QueryWikiDocumentListCommandResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedResultOfQueryWikiDocumentListItem"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PagedResultOfQueryWikiDocumentListItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedParamter"
          },
          {
            "type": "object",
            "description": "分页结果.",
            "additionalProperties": false,
            "required": [
              "items",
              "total"
            ],
            "properties": {
              "items": {
                "type": "array",
                "description": "项目集合.",
                "items": {
                  "$ref": "#/components/schemas/QueryWikiDocumentListItem"
                }
              },
              "total": {
                "type": "integer",
                "description": "总数.",
                "format": "int32"
              }
            }
          }
        ]
      },
      "QueryWikiDocumentListItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditsInfo"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "documentId",
              "fileName",
              "fileSize",
              "contentType",
              "embedding"
            ],
            "properties": {
              "documentId": {
                "type": "integer",
                "format": "int32"
              },
              "fileName": {
                "type": "string"
              },
              "fileSize": {
                "type": "integer",
                "format": "int32"
              },
              "contentType": {
                "type": "string"
              },
              "embedding": {
                "type": "boolean",
                "description": "是否有向量化内容."
              }
            }
          }
        ]
      },
      "QueryWikiWebDocumentListCommand": {
        "required": [
          "wikiId",
          "wikiWebConfigId"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedParamter"
          },
          {
            "type": "object",
            "description": "查询 web 文档列表.",
            "additionalProperties": false,
            "required": [
              "wikiId",
              "wikiWebConfigId"
            ],
            "properties": {
              "wikiId": {
                "type": "integer",
                "description": "知识库 id.",
                "format": "int32",
                "minimum": 0.0,
                "minLength": 1,
                "nullable": false,
                "exclusiveMinimum": true
              },
              "wikiWebConfigId": {
                "type": "integer",
                "description": "web 爬虫 id.",
                "format": "int32",
                "minimum": 0.0,
                "minLength": 1,
                "nullable": false,
                "exclusiveMinimum": true
              },
              "query": {
                "type": "string",
                "description": "筛选文件名称.",
                "nullable": true
              }
            }
          }
        ]
      },
      "SimpleGuid": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SimpleOfGuid"
          },
          {
            "type": "object",
            "description": "SimpleGuid.",
            "additionalProperties": false
          }
        ]
      },
      "SimpleOfGuid": {
        "type": "object",
        "description": "简单类型.",
        "additionalProperties": false,
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string",
            "description": "任何类型.",
            "format": "uuid"
          }
        }
      },
      "StartWebDocumentCrawleCommand": {
        "type": "object",
        "description": "开始启动知识库 web 爬取任务.",
        "additionalProperties": false,
        "required": [
          "wikiId",
          "webConfigId",
          "splitMethod",
          "maxTokensPerParagraph",
          "overlappingTokens",
          "tokenizer"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库 id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "webConfigId": {
            "type": "integer",
            "description": "知识库 web 配置 id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "splitMethod": {
            "type": "string",
            "description": "文本分割方法，暂时不支持使用."
          },
          "maxTokensPerParagraph": {
            "type": "integer",
            "description": "每个段落最大 token 数量.",
            "format": "int32"
          },
          "overlappingTokens": {
            "type": "integer",
            "description": "块之间重叠令牌的数量.",
            "format": "int32"
          },
          "tokenizer": {
            "description": "统计 tokens 数量的算法 支持: \"p50k\", \"cl100k\", \"o200k\".",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddingTokenizer"
              }
            ]
          }
        }
      },
      "UpdateWebDocumentConfigCommand": {
        "type": "object",
        "description": "修改一个网页爬取配置.",
        "additionalProperties": false,
        "required": [
          "wikiId",
          "webConfigId",
          "title",
          "address",
          "limitMaxCount",
          "isCrawlOther",
          "isAutoEmbedding",
          "isWaitJs",
          "selector"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库 id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "webConfigId": {
            "type": "integer",
            "description": "配置 id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "title": {
            "type": "string",
            "description": "标题.",
            "maxLength": 50,
            "minLength": 0,
            "nullable": false
          },
          "address": {
            "type": "string",
            "description": "页面地址.",
            "format": "uri"
          },
          "limitAddress": {
            "type": "string",
            "description": "限制自动爬取的网页都在该路径之下,limit_address跟address必须具有相同域名.",
            "format": "uri",
            "nullable": true
          },
          "limitMaxCount": {
            "type": "integer",
            "description": "最大抓取数量.",
            "format": "int32",
            "maximum": 1000.0,
            "minimum": 0.0,
            "exclusiveMinimum": true
          },
          "isCrawlOther": {
            "type": "boolean",
            "description": "是否抓取其它页面."
          },
          "isAutoEmbedding": {
            "type": "boolean",
            "description": "是否自动向量化."
          },
          "isWaitJs": {
            "type": "boolean",
            "description": "等待js加载完成."
          },
          "selector": {
            "type": "string",
            "description": "选择器，筛选页面的表达式，例如 \".content\".",
            "maxLength": 255,
            "minLength": 0
          }
        }
      },
      "CancalWikiDocumentTaskCommand": {
        "type": "object",
        "description": "取消文档处理任务.",
        "additionalProperties": false,
        "required": [
          "wikiId",
          "documentId",
          "taskId"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "documentId": {
            "type": "integer",
            "description": "文档id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "taskId": {
            "type": "string",
            "description": "任务 id.",
            "format": "uuid"
          }
        }
      },
      "ClearWikiDocumentEmbeddingCommand": {
        "type": "object",
        "description": "清空知识库文档向量.",
        "additionalProperties": false,
        "required": [
          "wikiId"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库 id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "documentId": {
            "type": "integer",
            "description": "不填写时清空整个知识库的文档向量.",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ComplateUploadWikiDocumentCommand": {
        "type": "object",
        "description": "结束上传文件.",
        "additionalProperties": false,
        "required": [
          "wikiId",
          "isSuccess",
          "fileId"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库ID.",
            "format": "int32"
          },
          "isSuccess": {
            "type": "boolean",
            "description": "上传成功或失败."
          },
          "fileId": {
            "type": "integer",
            "description": "文件ID.",
            "format": "int32"
          }
        }
      },
      "DeleteWikiDocumentCommand": {
        "type": "object",
        "description": "删除知识库文档.",
        "additionalProperties": false,
        "required": [
          "wikiId",
          "documentId"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库 id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "documentId": {
            "type": "integer",
            "description": "文档 id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          }
        }
      },
      "EmbeddingDocumentCommand": {
        "type": "object",
        "description": "向量化文档.",
        "additionalProperties": false,
        "required": [
          "wikiId",
          "documentId",
          "splitMethod",
          "maxTokensPerParagraph",
          "overlappingTokens",
          "tokenizer"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库 id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "documentId": {
            "type": "integer",
            "description": "文档 id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "splitMethod": {
            "type": "string",
            "description": "文本分割方法，暂时不支持使用."
          },
          "maxTokensPerParagraph": {
            "type": "integer",
            "description": "每个段落最大 token 数量.",
            "format": "int32"
          },
          "overlappingTokens": {
            "type": "integer",
            "description": "块之间重叠令牌的数量.",
            "format": "int32"
          },
          "tokenizer": {
            "description": "统计 tokens 数量的算法 支持: \"p50k\", \"cl100k\", \"o200k\".",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddingTokenizer"
              }
            ]
          }
        }
      },
      "PreloadWikiDocumentResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "visibility",
          "isExist",
          "fileId"
        ],
        "properties": {
          "visibility": {
            "description": "文件可见性.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FileVisibility"
              }
            ]
          },
          "isExist": {
            "type": "boolean",
            "description": "文件已存在,如果文件已存在则直接使用 FileId，无需再次上传."
          },
          "fileId": {
            "type": "integer",
            "description": "文件ID.",
            "format": "int32"
          },
          "uploadUrl": {
            "type": "string",
            "description": "预签名上传地址，当 IsExist = true 时字段为空.",
            "format": "uri",
            "nullable": true
          },
          "expiration": {
            "type": "string",
            "description": "签名过期时间，当 IsExist = true 时字段为空.",
            "format": "int64",
            "minimum": 0.0,
            "nullable": true,
            "example": "1754624391144"
          }
        }
      },
      "PreUploadWikiDocumentCommand": {
        "type": "object",
        "description": "预上传知识库文件.",
        "additionalProperties": false,
        "required": [
          "wikiId",
          "fileName",
          "contentType",
          "mD5",
          "fileSize"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库 id.\n            ",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "fileName": {
            "type": "string",
            "description": "文件名称.",
            "maxLength": 100,
            "minLength": 2,
            "nullable": false
          },
          "contentType": {
            "type": "string",
            "description": "文件类型.",
            "maxLength": 50,
            "minLength": 2,
            "nullable": false
          },
          "fileSize": {
            "type": "integer",
            "description": "文件大小.",
            "format": "int32"
          },
          "mD5": {
            "type": "string",
            "description": "文件 MD5.",
            "maxLength": 32,
            "minLength": 32,
            "pattern": "^[a-fA-F0-9]{32}$",
            "nullable": false
          }
        }
      },
      "QueryWikiDocumentInfoCommand": {
        "type": "object",
        "description": "查询单个文档信息.",
        "additionalProperties": false,
        "required": [
          "wikiId",
          "documentId"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库 id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "documentId": {
            "type": "integer",
            "description": "文档 id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          }
        }
      },
      "QueryWikiDocumentListCommand": {
        "required": [
          "wikiId"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedParamter"
          },
          {
            "type": "object",
            "description": "查询 wiki 文件列表.",
            "additionalProperties": false,
            "required": [
              "wikiId",
              "includeFileTypes",
              "excludeFileTypes"
            ],
            "properties": {
              "wikiId": {
                "type": "integer",
                "description": "知识库 id.",
                "format": "int32",
                "minimum": 0.0,
                "minLength": 1,
                "nullable": false,
                "exclusiveMinimum": true
              },
              "query": {
                "type": "string",
                "description": "筛选文件名称.",
                "nullable": true
              },
              "includeFileTypes": {
                "type": "array",
                "description": "包括文件类型，如 .md、.docx 等.",
                "items": {
                  "type": "string"
                }
              },
              "excludeFileTypes": {
                "type": "array",
                "description": "排除文件类型，如 .md、.docx 等.",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "WikiDocumentTaskItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditsInfo"
          },
          {
            "type": "object",
            "description": "文档列表.",
            "additionalProperties": false,
            "required": [
              "id",
              "wikiId",
              "documentId",
              "fileId",
              "fileName",
              "fileSize",
              "contentType",
              "state",
              "message",
              "maxTokensPerParagraph",
              "overlappingTokens",
              "tokenizer"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "id.",
                "format": "uuid"
              },
              "wikiId": {
                "type": "integer",
                "description": "知识库id.",
                "format": "int32"
              },
              "documentId": {
                "type": "integer",
                "description": "文档id.",
                "format": "int32"
              },
              "fileId": {
                "type": "integer",
                "description": "文件id.",
                "format": "int32"
              },
              "fileName": {
                "type": "string",
                "description": "文件名称."
              },
              "fileSize": {
                "type": "string",
                "description": "文件大小.",
                "format": "int64",
                "minimum": 0.0,
                "example": "1415926535897934852"
              },
              "contentType": {
                "type": "string",
                "description": "文件类型."
              },
              "state": {
                "description": "任务状态.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/FileEmbeddingState"
                  }
                ]
              },
              "message": {
                "type": "string",
                "description": "执行信息."
              },
              "maxTokensPerParagraph": {
                "type": "integer",
                "description": "每段最大token数量.",
                "format": "int32"
              },
              "overlappingTokens": {
                "type": "integer",
                "description": "重叠的token数量.",
                "format": "int32"
              },
              "tokenizer": {
                "type": "string",
                "description": "分词器."
              }
            }
          }
        ]
      },
      "FileEmbeddingState": {
        "type": "string",
        "description": "向量化状态.",
        "x-enumNames": [
          "None",
          "Wait",
          "Processing",
          "Cancal",
          "Successful",
          "Failed"
        ],
        "enum": [
          "none",
          "wait",
          "processing",
          "cancal",
          "successful",
          "failed"
        ]
      },
      "QueryWikiDocumentTaskListCommand": {
        "type": "object",
        "description": "查询文档任务列表.",
        "additionalProperties": false,
        "required": [
          "wikiId",
          "documentId"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "documentId": {
            "type": "integer",
            "description": "文档id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          }
        }
      },
      "SearchWikiDocumentTextCommandResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "searchResult"
        ],
        "properties": {
          "searchResult": {
            "$ref": "#/components/schemas/SearchResult"
          }
        }
      },
      "SearchResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "query",
          "noResult",
          "results"
        ],
        "properties": {
          "query": {
            "type": "string",
            "description": "Client question."
          },
          "noResult": {
            "type": "boolean",
            "description": "Whether the search didn't return any result"
          },
          "results": {
            "type": "array",
            "description": "List of the relevant sources used to produce the answer.\nKey = Document ID\nValue = List of partitions used from the document.",
            "items": {
              "$ref": "#/components/schemas/Citation"
            }
          }
        }
      },
      "Citation": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "link",
          "index",
          "documentId",
          "fileId",
          "sourceContentType",
          "sourceName",
          "partitions"
        ],
        "properties": {
          "link": {
            "type": "string",
            "description": "Link to the source, if available."
          },
          "index": {
            "type": "string",
            "description": "Link to the source, if available."
          },
          "documentId": {
            "type": "string",
            "description": "Link to the source, if available."
          },
          "fileId": {
            "type": "string",
            "description": "Link to the source, if available."
          },
          "sourceContentType": {
            "type": "string",
            "description": "Type of source, e.g. PDF, Word, Chat, etc."
          },
          "sourceName": {
            "type": "string",
            "description": "Name of the source, e.g. file name."
          },
          "sourceUrl": {
            "type": "string",
            "description": "URL of the source, used for web pages and external data",
            "nullable": true
          },
          "partitions": {
            "type": "array",
            "description": "List of chunks/blocks of text used.",
            "items": {
              "$ref": "#/components/schemas/Citation_Partition"
            }
          }
        }
      },
      "Citation_Partition": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "text",
          "relevance",
          "partitionNumber",
          "sectionNumber",
          "lastUpdate",
          "tags"
        ],
        "properties": {
          "text": {
            "type": "string",
            "description": "Content of the document partition, aka chunk/block of text."
          },
          "relevance": {
            "type": "number",
            "description": "Relevance of this partition against the given query.\nValue usually is between 0 and 1, when using cosine similarity.",
            "format": "float"
          },
          "partitionNumber": {
            "type": "integer",
            "description": "Partition number, zero based",
            "format": "int32"
          },
          "sectionNumber": {
            "type": "integer",
            "description": "Text page number / Audio segment number / Video scene number",
            "format": "int32"
          },
          "lastUpdate": {
            "type": "string",
            "description": "Timestamp about the file/text partition.",
            "format": "int64",
            "minimum": 0.0,
            "example": "1754624391144"
          },
          "tags": {
            "type": "array",
            "description": "List of document tags",
            "items": {
              "$ref": "#/components/schemas/KeyValuePairOfStringAndListOfString"
            }
          }
        }
      },
      "KeyValuePairOfStringAndListOfString": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SearchWikiDocumentTextCommand": {
        "type": "object",
        "description": "搜索知识库文档分片.",
        "additionalProperties": false,
        "required": [
          "wikiId"
        ],
        "properties": {
          "wikiId": {
            "type": "integer",
            "description": "知识库 id.\n            ",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "documentId": {
            "type": "integer",
            "description": "文档id，不设置时搜索整个知识库.",
            "format": "int32",
            "nullable": true
          },
          "query": {
            "type": "string",
            "description": "搜索文本，区配文本.",
            "nullable": true
          }
        }
      },
      "QueryPluginDetailCommandResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditsInfo"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "pluginId",
              "pluginName",
              "title",
              "description",
              "server",
              "header",
              "query",
              "type",
              "openapiFileId",
              "isPublic"
            ],
            "properties": {
              "pluginId": {
                "type": "integer",
                "description": "id.",
                "format": "int32"
              },
              "pluginName": {
                "type": "string",
                "description": "插件名称."
              },
              "title": {
                "type": "string",
                "description": "插件标题."
              },
              "description": {
                "type": "string",
                "description": "注释."
              },
              "server": {
                "type": "string",
                "description": "服务器地址."
              },
              "header": {
                "type": "array",
                "description": "Header 头部信息.",
                "items": {
                  "$ref": "#/components/schemas/KeyValueString"
                }
              },
              "query": {
                "type": "array",
                "description": "Query 字典.",
                "items": {
                  "$ref": "#/components/schemas/KeyValueString"
                }
              },
              "type": {
                "description": "system|mcp|openapi.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PluginType"
                  }
                ]
              },
              "openapiFileId": {
                "type": "integer",
                "description": "文件id.",
                "format": "int32"
              },
              "openapiFileName": {
                "type": "string",
                "description": "文件名称.",
                "nullable": true
              },
              "isPublic": {
                "type": "boolean",
                "description": "是否公开."
              }
            }
          }
        ]
      },
      "PluginType": {
        "type": "string",
        "description": "插件类型.",
        "x-enumNames": [
          "System",
          "MCP",
          "OpenApi",
          "Wiki"
        ],
        "enum": [
          "system",
          "mcp",
          "openApi",
          "wiki"
        ]
      },
      "QueryPluginDetailCommand": {
        "type": "object",
        "description": "查询该插件的详细信息.",
        "additionalProperties": false,
        "required": [
          "pluginId"
        ],
        "properties": {
          "pluginId": {
            "type": "integer",
            "description": "插件 id.",
            "format": "int32"
          }
        }
      },
      "QueryPluginFunctionsListCommandResponse": {
        "type": "object",
        "description": "函数列表.",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "函数列表.",
            "items": {
              "$ref": "#/components/schemas/QueryPluginFunctionsListCommandResponseItem"
            }
          }
        }
      },
      "QueryPluginFunctionsListCommandResponseItem": {
        "type": "object",
        "description": "函数.",
        "additionalProperties": false,
        "required": [
          "functionId",
          "pluginId",
          "name",
          "summary",
          "path"
        ],
        "properties": {
          "functionId": {
            "type": "integer",
            "description": "id.",
            "format": "int32"
          },
          "pluginId": {
            "type": "integer",
            "description": "插件路径.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "函数名称."
          },
          "summary": {
            "type": "string",
            "description": "描述."
          },
          "path": {
            "type": "string",
            "description": "api路径."
          }
        }
      },
      "QueryPluginFunctionsListCommand": {
        "type": "object",
        "description": "获取插件的函数列表.",
        "additionalProperties": false,
        "required": [
          "pluginId"
        ],
        "properties": {
          "pluginId": {
            "type": "integer",
            "description": "插件 id.",
            "format": "int32"
          }
        }
      },
      "QueryPluginBaseListCommandResponse": {
        "type": "object",
        "description": "QueryPluginListCommandResponse.",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "列表.",
            "items": {
              "$ref": "#/components/schemas/PluginBaseInfoItem"
            }
          }
        }
      },
      "PluginBaseInfoItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditsInfo"
          },
          {
            "type": "object",
            "description": "插件.",
            "additionalProperties": false,
            "required": [
              "pluginId",
              "pluginName",
              "title",
              "description",
              "server",
              "type",
              "openapiFileId",
              "isSystem",
              "isPublic"
            ],
            "properties": {
              "pluginId": {
                "type": "integer",
                "description": "id.",
                "format": "int32"
              },
              "pluginName": {
                "type": "string",
                "description": "插件名称."
              },
              "title": {
                "type": "string",
                "description": "插件标题."
              },
              "description": {
                "type": "string",
                "description": "注释."
              },
              "server": {
                "type": "string",
                "description": "服务器地址."
              },
              "type": {
                "description": "system|mcp|openapi.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PluginType"
                  }
                ]
              },
              "openapiFileId": {
                "type": "integer",
                "description": "文件id.",
                "format": "int32"
              },
              "openapiFileName": {
                "type": "string",
                "description": "文件名称.",
                "nullable": true
              },
              "isSystem": {
                "type": "boolean",
                "description": "系统插件."
              },
              "isPublic": {
                "type": "boolean",
                "description": "是否公开."
              }
            }
          }
        ]
      },
      "QuerySystemPluginBaseListCommand": {
        "type": "object",
        "description": "获取系统插件基础信息列表.",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "名称搜索.",
            "nullable": true
          },
          "type": {
            "description": "筛选类型.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PluginType"
              }
            ]
          }
        }
      },
      "QueryUserPluginBaseListCommand": {
        "type": "object",
        "description": "获取用户插件基础信息列表.",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "名称搜索.",
            "nullable": true
          },
          "type": {
            "description": "筛选类型.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PluginType"
              }
            ]
          },
          "isOwn": {
            "type": "boolean",
            "description": "只查询该用户创建的插件，不设置时查询所有用户可用插件.",
            "nullable": true
          }
        }
      },
      "DeletePluginCommand": {
        "type": "object",
        "description": "删除插件.",
        "additionalProperties": false,
        "required": [
          "pluginId"
        ],
        "properties": {
          "pluginId": {
            "type": "integer",
            "description": "插件.",
            "format": "int32",
            "minimum": 0.0,
            "exclusiveMinimum": true
          }
        }
      },
      "ImportMcpServerPluginCommand": {
        "allOf": [
          {
            "$ref": "#/components/schemas/McpServerPluginConnectionOptions"
          },
          {
            "type": "object",
            "description": "导入 mcp 服务.",
            "additionalProperties": false,
            "required": [
              "isSystem",
              "isPublic"
            ],
            "properties": {
              "isSystem": {
                "type": "boolean",
                "description": "系统插件."
              },
              "isPublic": {
                "type": "boolean",
                "description": "是否公开，系统插件 == true 时才能设置."
              }
            }
          }
        ]
      },
      "McpServerPluginConnectionOptions": {
        "type": "object",
        "description": "MCP 服务器连接配置.",
        "additionalProperties": false,
        "required": [
          "name",
          "title",
          "description",
          "serverUrl",
          "header",
          "query"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "插件名称，只能纯字母，用于给 AI 使用.",
            "maxLength": 20,
            "minLength": 2,
            "pattern": "^[a-zA-Z]+$",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "插件标题，可中文.",
            "maxLength": 20,
            "minLength": 2,
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "描述.",
            "maxLength": 255,
            "minLength": 2,
            "nullable": false
          },
          "serverUrl": {
            "type": "string",
            "description": "MCP Service 地址.",
            "format": "uri",
            "minLength": 1,
            "nullable": false
          },
          "header": {
            "type": "array",
            "description": "Header 头部信息.",
            "items": {
              "$ref": "#/components/schemas/KeyValueString"
            }
          },
          "query": {
            "type": "array",
            "description": "Query 字典.",
            "items": {
              "$ref": "#/components/schemas/KeyValueString"
            }
          }
        }
      },
      "PreUploadOpenApiFilePluginCommandResponse": {
        "type": "object",
        "description": "导入 openapi 文件插件.",
        "additionalProperties": false,
        "required": [
          "visibility",
          "isExist",
          "fileId"
        ],
        "properties": {
          "visibility": {
            "description": "文件可见性.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FileVisibility"
              }
            ]
          },
          "isExist": {
            "type": "boolean",
            "description": "文件已存在,如果文件已存在则直接使用 FileId，无需再次上传."
          },
          "fileId": {
            "type": "integer",
            "description": "文件ID.",
            "format": "int32"
          },
          "uploadUrl": {
            "type": "string",
            "description": "预签名上传地址，当 IsExist = true 时字段为空.",
            "format": "uri",
            "nullable": true
          },
          "expiration": {
            "type": "string",
            "description": "签名过期时间，当 IsExist = true 时字段为空.",
            "format": "int64",
            "minimum": 0.0,
            "nullable": true,
            "example": "1754624391144"
          }
        }
      },
      "PreUploadOpenApiFilePluginCommand": {
        "type": "object",
        "description": "预上传 openapi 文件，支持 json、yaml.",
        "additionalProperties": false,
        "required": [
          "fileName",
          "contentType",
          "mD5",
          "fileSize"
        ],
        "properties": {
          "fileName": {
            "type": "string",
            "description": "文件名称.",
            "maxLength": 100,
            "minLength": 2,
            "nullable": false
          },
          "contentType": {
            "type": "string",
            "description": "文件类型.",
            "maxLength": 50,
            "minLength": 2,
            "nullable": false
          },
          "fileSize": {
            "type": "integer",
            "description": "文件大小.",
            "format": "int32",
            "maximum": 1073741824.0,
            "minimum": 0.0,
            "exclusiveMinimum": true
          },
          "mD5": {
            "type": "string",
            "description": "文件 MD5.",
            "maxLength": 32,
            "minLength": 32,
            "pattern": "^[a-fA-F0-9]{32}$",
            "nullable": false
          }
        }
      },
      "RefreshMcpServerPluginCommand": {
        "type": "object",
        "description": "刷新 MCP 服务器的工具列表.",
        "additionalProperties": false,
        "required": [
          "pluginId"
        ],
        "properties": {
          "pluginId": {
            "type": "integer",
            "description": "插件 id.\n            ",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          }
        }
      },
      "UpdateMcpServerPluginCommand": {
        "required": [
          "pluginId"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/McpServerPluginConnectionOptions"
          },
          {
            "type": "object",
            "description": "更新 MCP 插件.",
            "additionalProperties": false,
            "required": [
              "pluginId",
              "isSystem",
              "isPublic"
            ],
            "properties": {
              "pluginId": {
                "type": "integer",
                "description": "插件 id.\n            ",
                "format": "int32",
                "minimum": 0.0,
                "minLength": 1,
                "nullable": false,
                "exclusiveMinimum": true
              },
              "isSystem": {
                "type": "boolean",
                "description": "系统插件."
              },
              "isPublic": {
                "type": "boolean",
                "description": "是否公开，系统插件 == true 时才能设置."
              }
            }
          }
        ]
      },
      "UpdateOpenApiPluginCommand": {
        "type": "object",
        "description": "更新 openapi 文件，支持 json、yaml.",
        "additionalProperties": false,
        "required": [
          "name",
          "title",
          "description",
          "pluginId",
          "serverUrl",
          "fileId",
          "fileName",
          "isSystem",
          "isPublic",
          "header",
          "query"
        ],
        "properties": {
          "fileId": {
            "type": "integer",
            "description": "上传的 id.",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "description": "文件名称."
          },
          "name": {
            "type": "string",
            "description": "插件名称.",
            "maxLength": 20,
            "minLength": 2,
            "pattern": "^[a-zA-Z]+$",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "插件标题，可中文.",
            "maxLength": 20,
            "minLength": 2,
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "描述.",
            "maxLength": 255,
            "minLength": 2,
            "nullable": false
          },
          "isSystem": {
            "type": "boolean",
            "description": "系统插件."
          },
          "isPublic": {
            "type": "boolean",
            "description": "是否公开，系统插件 == true 时才能设置."
          },
          "pluginId": {
            "type": "integer",
            "description": "插件 id.",
            "format": "int32",
            "minimum": 0.0,
            "minLength": 1,
            "nullable": false,
            "exclusiveMinimum": true
          },
          "serverUrl": {
            "type": "string",
            "description": "MCP Service 地址.",
            "format": "uri",
            "minLength": 1,
            "nullable": false
          },
          "header": {
            "type": "array",
            "description": "Header 头部信息.",
            "items": {
              "$ref": "#/components/schemas/KeyValueString"
            }
          },
          "query": {
            "type": "array",
            "description": "Query 字典.",
            "items": {
              "$ref": "#/components/schemas/KeyValueString"
            }
          }
        }
      },
      "QueryAiOptimizePromptCommandResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "useage",
          "content"
        ],
        "properties": {
          "useage": {
            "description": "请求使用量.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/TextTokenUsage"
              }
            ]
          },
          "content": {
            "type": "string",
            "description": "回复内容."
          }
        }
      },
      "TextTokenUsage": {
        "type": "object",
        "description": "Token 使用量.",
        "additionalProperties": false,
        "required": [
          "CompletionTokens",
          "PromptTokens",
          "TotalTokens"
        ],
        "properties": {
          "CompletionTokens": {
            "type": "integer",
            "description": "The combined number of output tokens in the generated completion, as consumed by the model.",
            "format": "int32"
          },
          "PromptTokens": {
            "type": "integer",
            "description": "The number of tokens in the request message input, spanning all message content items.",
            "format": "int32"
          },
          "TotalTokens": {
            "type": "integer",
            "description": "The total number of combined input (prompt) and output (completion) tokens used by a chat completion operation.",
            "format": "int32"
          }
        }
      },
      "AiOptimizePromptRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "aiModelId",
          "sourcePrompt"
        ],
        "properties": {
          "aiModelId": {
            "type": "integer",
            "description": "AI 模型 id.",
            "format": "int32",
            "minLength": 1,
            "nullable": false
          },
          "sourcePrompt": {
            "type": "string",
            "description": "用户原本的提示词",
            "maxLength": 2000,
            "minLength": 0,
            "nullable": false
          }
        }
      },
      "CreatePromptCommand": {
        "type": "object",
        "description": "创建提示词.",
        "additionalProperties": false,
        "required": [
          "promptClassId",
          "name",
          "description",
          "content",
          "isPublic"
        ],
        "properties": {
          "promptClassId": {
            "type": "integer",
            "description": "分类.",
            "format": "int32",
            "minLength": 1,
            "nullable": false
          },
          "name": {
            "type": "string",
            "description": "名称.",
            "maxLength": 50,
            "minLength": 0,
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "描述.",
            "maxLength": 200,
            "minLength": 0,
            "nullable": false
          },
          "content": {
            "type": "string",
            "description": "助手设定,支持 markdown.",
            "maxLength": 2000,
            "minLength": 0,
            "nullable": false
          },
          "isPublic": {
            "type": "boolean",
            "description": "是否公开."
          }
        }
      },
      "DeletePromptCommand": {
        "type": "object",
        "description": "删除提示词.",
        "additionalProperties": false,
        "required": [
          "promptId"
        ],
        "properties": {
          "promptId": {
            "type": "integer",
            "description": "提示词 id.",
            "format": "int32"
          }
        }
      },
      "QueryPromptListCommandResponse": {
        "type": "object",
        "description": "提示词列表.",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "列表.",
            "items": {
              "$ref": "#/components/schemas/PromptItem"
            }
          }
        }
      },
      "PromptItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditsInfo"
          },
          {
            "type": "object",
            "description": "查询提示词详细信息.",
            "additionalProperties": false,
            "required": [
              "id",
              "name",
              "description",
              "isPublic",
              "promptClassId"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "id.",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "名称."
              },
              "description": {
                "type": "string",
                "description": "描述."
              },
              "content": {
                "type": "string",
                "description": "助手设定,markdown.",
                "nullable": true
              },
              "isPublic": {
                "type": "boolean"
              },
              "promptClassId": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "QueryPromptListCommand": {
        "type": "object",
        "description": "查询能看到的提示词列表.",
        "additionalProperties": false,
        "required": [
          "userId"
        ],
        "properties": {
          "classId": {
            "type": "integer",
            "description": "筛选分类.",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "筛选名称.",
            "nullable": true
          },
          "isOwn": {
            "type": "boolean",
            "description": "自己创建的.",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "description": "用户 id.",
            "format": "int32"
          }
        }
      },
      "QueryPromptContentRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "UpdatePromptCommand": {
        "type": "object",
        "description": "更新提示词.",
        "additionalProperties": false,
        "required": [
          "promptClassId",
          "promptId",
          "name",
          "description",
          "content",
          "isPublic"
        ],
        "properties": {
          "promptClassId": {
            "type": "integer",
            "description": "新的分类id.",
            "format": "int32",
            "minLength": 1,
            "nullable": false
          },
          "promptId": {
            "type": "integer",
            "description": "提示词 id.",
            "format": "int32",
            "minLength": 1,
            "nullable": false
          },
          "name": {
            "type": "string",
            "description": "名称.",
            "maxLength": 50,
            "minLength": 0,
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "描述.",
            "maxLength": 200,
            "minLength": 0,
            "nullable": false
          },
          "content": {
            "type": "string",
            "description": "助手设定,markdown."
          },
          "isPublic": {
            "type": "boolean",
            "description": "是否公开."
          }
        }
      },
      "CreatePromptClassCommand": {
        "type": "object",
        "description": "创建提示词分类.",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "名称.",
            "maxLength": 50,
            "minLength": 0,
            "nullable": false
          }
        }
      },
      "QueryePromptClassCommandResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryePromptClassCommandResponseItem"
            }
          }
        }
      },
      "QueryePromptClassCommandResponseItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "id.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "名称."
          }
        }
      },
      "UpdatePromptClassCommand": {
        "type": "object",
        "description": "修改提示词分类.",
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "id.",
            "format": "int32",
            "minLength": 1,
            "nullable": false
          },
          "name": {
            "type": "string",
            "description": "名称.",
            "maxLength": 20,
            "minLength": 0,
            "nullable": false
          }
        }
      },
      "CreateAiAssistantChatCommandResponse": {
        "type": "object",
        "description": "对话 id.",
        "additionalProperties": false,
        "required": [
          "chatId"
        ],
        "properties": {
          "chatId": {
            "type": "string",
            "description": "每个聊天对话都有唯一 id.",
            "format": "uuid"
          }
        }
      },
      "AIAssistantChatObject": {
        "type": "object",
        "description": "对话参数.",
        "additionalProperties": false,
        "required": [
          "title",
          "prompt",
          "modelId",
          "wikiId",
          "pluginIds",
          "executionSettings"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "话题名称.",
            "maxLength": 100,
            "minLength": 0,
            "nullable": false
          },
          "prompt": {
            "type": "string",
            "description": "提示词，第一次对话时带上，如果后续不需要修改则不需要再次传递.",
            "maxLength": 2000,
            "minLength": 0,
            "nullable": false
          },
          "modelId": {
            "type": "integer",
            "description": "要使用的 AI 模型.",
            "format": "int32",
            "minimum": 0.0,
            "exclusiveMinimum": true
          },
          "wikiId": {
            "type": "integer",
            "description": "要使用的知识库，如果用户不在知识库用户内，则必须是公开的.",
            "format": "int32"
          },
          "pluginIds": {
            "type": "array",
            "description": "要使用的插件 id 列表，用户必须有权使用这些插件.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "executionSettings": {
            "type": "array",
            "description": "配置，字典适配不同的 AI 模型.",
            "items": {
              "$ref": "#/components/schemas/KeyValueString"
            }
          }
        }
      },
      "DeleteAiAssistantChatCommand": {
        "type": "object",
        "description": "删除对话记录.",
        "additionalProperties": false,
        "required": [
          "chatId"
        ],
        "properties": {
          "chatId": {
            "type": "string",
            "description": "对话 id.",
            "format": "uuid",
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "DeleteAiAssistantChatOneRecordCommand": {
        "type": "object",
        "description": "删除对话中的一条记录.",
        "additionalProperties": false,
        "required": [
          "chatId",
          "recordId"
        ],
        "properties": {
          "chatId": {
            "type": "string",
            "description": "对话 id.",
            "format": "uuid",
            "minLength": 1,
            "nullable": false
          },
          "recordId": {
            "type": "string",
            "description": "记录id.",
            "format": "int64",
            "minimum": 0.0,
            "exclusiveMinimum": true
          }
        }
      },
      "QueryAiAssistantChatHistoryCommandResponse": {
        "type": "object",
        "description": "对话记录结果.",
        "additionalProperties": false,
        "required": [
          "chatId",
          "title",
          "modelId",
          "wikiId",
          "pluginIds",
          "executionSettings",
          "avatar",
          "inputTokens",
          "outTokens",
          "totalTokens",
          "createTime",
          "updateTime",
          "chatHistory"
        ],
        "properties": {
          "chatId": {
            "type": "string",
            "description": "id.",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "description": "话题名称."
          },
          "prompt": {
            "type": "string",
            "description": "提示词，第一次对话时带上，如果后续不需要修改则不需要再次传递.",
            "nullable": true
          },
          "modelId": {
            "type": "integer",
            "description": "要使用的 AI 模型.",
            "format": "int32"
          },
          "wikiId": {
            "type": "integer",
            "description": "要使用的知识库，如果用户不在知识库用户内，则必须是公开的.",
            "format": "int32"
          },
          "pluginIds": {
            "type": "array",
            "description": "要使用的插件 id 列表，用户必须有权使用这些插件.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "executionSettings": {
            "type": "array",
            "description": "配置，字典适配不同的 AI 模型.",
            "items": {
              "$ref": "#/components/schemas/KeyValueString"
            }
          },
          "avatar": {
            "type": "string",
            "description": "AI 的头像."
          },
          "inputTokens": {
            "type": "integer",
            "description": "输入token统计.",
            "format": "int32"
          },
          "outTokens": {
            "type": "integer",
            "description": "输出token统计.",
            "format": "int32"
          },
          "totalTokens": {
            "type": "integer",
            "description": "使用的 token 总数.",
            "format": "int32"
          },
          "createTime": {
            "type": "string",
            "description": "创建时间.",
            "format": "int64",
            "minimum": 0.0,
            "example": "1754624391144"
          },
          "updateTime": {
            "type": "string",
            "description": "最后更新时间.",
            "format": "int64",
            "minimum": 0.0,
            "example": "1754624391144"
          },
          "chatHistory": {
            "type": "array",
            "description": "历史对话或者上下文信息，创建对话时，如果有提示词，则第一个对话就是提示词.",
            "items": {
              "$ref": "#/components/schemas/ChatContentItem"
            }
          }
        }
      },
      "ChatContentItem": {
        "type": "object",
        "description": "对话项.",
        "additionalProperties": false,
        "required": [
          "recordId",
          "authorName"
        ],
        "properties": {
          "recordId": {
            "type": "string",
            "format": "int64",
            "minimum": 0.0,
            "example": "1415926535897934852"
          },
          "authorName": {
            "type": "string",
            "description": "角色名称，system、assistant、user、tool."
          },
          "content": {
            "type": "string",
            "description": "对话内容.",
            "nullable": true
          }
        }
      },
      "QueryUserViewAiAssistantChatHistoryCommand": {
        "type": "object",
        "description": "查询对话记录.",
        "additionalProperties": false
      },
      "QueryAiAssistantChatTopicListCommandResponse": {
        "type": "object",
        "description": "话题列表.",
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AiAssistantChatTopic"
            }
          }
        }
      },
      "AiAssistantChatTopic": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "chatId",
          "title",
          "createTime"
        ],
        "properties": {
          "chatId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "createTime": {
            "type": "string",
            "format": "int64",
            "minimum": 0.0,
            "example": "1754624391144"
          }
        }
      },
      "UpdateAiAssistanChatConfigCommand": {
        "required": [
          "chatId",
          "aiAvatar"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/AIAssistantChatObject"
          },
          {
            "type": "object",
            "description": "更新 AI 对话参数.",
            "additionalProperties": false,
            "required": [
              "chatId",
              "aiAvatar"
            ],
            "properties": {
              "chatId": {
                "type": "string",
                "description": "对话 id.",
                "format": "uuid",
                "minLength": 1,
                "nullable": false
              },
              "aiAvatar": {
                "type": "string",
                "description": "AI 的头像.",
                "maxLength": 10,
                "minLength": 0,
                "nullable": false
              }
            }
          }
        ]
      },
      "ImportOpenApiPluginCommand": {
        "type": "object",
        "description": "导入 openapi 文件，支持 json、yaml.",
        "additionalProperties": false,
        "required": [
          "fileName",
          "name",
          "title",
          "description",
          "fileId",
          "isSystem",
          "isPublic"
        ],
        "properties": {
          "fileId": {
            "type": "integer",
            "description": "上传的 id.",
            "format": "int32",
            "minimum": 0.0,
            "exclusiveMinimum": true
          },
          "fileName": {
            "type": "string",
            "description": "文件名称.",
            "maxLength": 100,
            "minLength": 2,
            "nullable": false
          },
          "name": {
            "type": "string",
            "description": "插件名称.",
            "maxLength": 20,
            "minLength": 2,
            "pattern": "^[a-zA-Z]+$",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "插件标题，可中文.",
            "maxLength": 20,
            "minLength": 2,
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "描述.",
            "maxLength": 255,
            "minLength": 2,
            "nullable": false
          },
          "isSystem": {
            "type": "boolean",
            "description": "系统插件."
          },
          "isPublic": {
            "type": "boolean",
            "description": "是否公开，系统插件 == true 时才能设置."
          }
        }
      },
      "ProcessingAiAssistantChatCommand": {
        "type": "object",
        "description": "进行对话，对话时，History 每次做增量传递.",
        "additionalProperties": false,
        "required": [
          "chatId",
          "userId",
          "content"
        ],
        "properties": {
          "chatId": {
            "type": "string",
            "description": "对话 id，id 为空时自动新建.",
            "format": "uuid"
          },
          "userId": {
            "type": "integer",
            "description": "当前用户标识.",
            "format": "int32"
          },
          "content": {
            "type": "string",
            "description": "用户的提问."
          }
        }
      }
    },
    "securitySchemes": {
      "JWTBearerAuth": {
        "type": "http",
        "description": "Enter a JWT token to authorize the requests...",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
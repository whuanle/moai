/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createBusinessValidationResultFromDiscriminatorValue, createQueryAiModelProviderListResponseFromDiscriminatorValue, type BusinessValidationResult, type QueryAiModelProviderListResponse } from '../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/aimodel/system_providerlist
 */
export interface System_providerlistRequestBuilder extends BaseRequestBuilder<System_providerlistRequestBuilder> {
    /**
     * 查询ai服务商列表.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<QueryAiModelProviderListResponse>}
     * @throws {BusinessValidationResult} error when the service returns a 400 status code
     * @throws {BusinessValidationResult} error when the service returns a 401 status code
     * @throws {BusinessValidationResult} error when the service returns a 403 status code
     * @throws {BusinessValidationResult} error when the service returns a 409 status code
     * @throws {BusinessValidationResult} error when the service returns a 500 status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<QueryAiModelProviderListResponse | undefined>;
    /**
     * 查询ai服务商列表.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const System_providerlistRequestBuilderUriTemplate = "{+baseurl}/api/aimodel/system_providerlist";
/**
 * Metadata for all the requests in the request builder.
 */
export const System_providerlistRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: System_providerlistRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createBusinessValidationResultFromDiscriminatorValue as ParsableFactory<Parsable>,
            401: createBusinessValidationResultFromDiscriminatorValue as ParsableFactory<Parsable>,
            403: createBusinessValidationResultFromDiscriminatorValue as ParsableFactory<Parsable>,
            409: createBusinessValidationResultFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createBusinessValidationResultFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createQueryAiModelProviderListResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */

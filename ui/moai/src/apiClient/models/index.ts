/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createUntypedNodeFromDiscriminatorValue, type ApiError, type Guid, type Parsable, type ParseNode, type SerializationWriter, type UntypedNode } from '@microsoft/kiota-abstractions';

/**
 * 添加一个系统级模型.
 */
export interface AddSystemAiModelRequest extends AiEndpoint, Parsable {
    /**
     * 公开使用，只有系统模型才能公开使用.
     */
    isPublic?: boolean | null;
}
/**
 * 添加一个用户私有的模型.
 */
export interface AddUserAiModelRequest extends AiEndpoint, Parsable {
}
/**
 * 对话上下文，一个完整的聊天上下文.
 */
export interface AIAssistantChatContext extends AIAssistantChatObject, Parsable {
    /**
     * 历史对话或者上下文信息，创建对话时，如果有提示词，则第一个对话就是提示词.
     */
    chatHistory?: UntypedNode | null;
}
/**
 * 对话参数.
 */
export interface AIAssistantChatObject extends Parsable {
    /**
     * 配置，字典适配不同的 AI 模型.
     */
    executionSettings?: KeyValueString[] | null;
    /**
     * 要使用的 AI 模型.
     */
    modelId?: number | null;
    /**
     * 要使用的插件 id 列表，用户必须有权使用这些插件.
     */
    pluginIds?: number[] | null;
    /**
     * 提示词，第一次对话时带上，如果后续不需要修改则不需要再次传递.
     */
    prompt?: string | null;
    /**
     * 话题名称.
     */
    title?: string | null;
    /**
     * 要使用的知识库，如果用户不在知识库用户内，则必须是公开的.
     */
    wikiId?: number | null;
}
export interface AiAssistantChatTopic extends Parsable {
    /**
     * The chatId property
     */
    chatId?: Guid | null;
    /**
     * The createTime property
     */
    createTime?: string | null;
    /**
     * The title property
     */
    title?: string | null;
}
/**
 * AI 模型.
 */
export interface AiEndpoint extends Parsable {
    /**
     * additional parameters.
     */
    abilities?: ModelAbilities | null;
    /**
     * 模型类型.
     */
    aiModelType?: AiModelType | null;
    /**
     * the context window (or input + output tokens limit).
     */
    contextWindowTokens?: number | null;
    /**
     * 部署名称，适配 Azure Open AI ，非 Azure Open AI 跟 Name 同名.
     */
    deploymentName?: string | null;
    /**
     * 请求端点.
     */
    endpoint?: string | null;
    /**
     * key.
     */
    key?: string | null;
    /**
     * 向量模型的维度.
     */
    maxDimension?: number | null;
    /**
     * 模型名称.
     */
    name?: string | null;
    /**
     * AI 服务商.
     */
    provider?: AiProvider | null;
    /**
     * 最大模型输出 tokens，也可表示嵌入向量等最大输出数量.
     */
    textOutput?: number | null;
    /**
     * 对用户显示名称.
     */
    title?: string | null;
}
export type AiModelType = (typeof AiModelTypeObject)[keyof typeof AiModelTypeObject];
/**
 * AI 模型.
 */
export interface AiNotKeyEndpoint extends Parsable {
    /**
     * additional parameters.
     */
    abilities?: ModelAbilities | null;
    /**
     * 模型类型.
     */
    aiModelType?: AiModelType | null;
    /**
     * the context window (or input + output tokens limit).
     */
    contextWindowTokens?: number | null;
    /**
     * 部署名称，适配 Azure Open AI ，非 Azure Open AI 跟 Name 同名.
     */
    deploymentName?: string | null;
    /**
     * 请求端点.
     */
    endpoint?: string | null;
    /**
     * id.
     */
    id?: number | null;
    /**
     * 向量模型的维度.
     */
    maxDimension?: number | null;
    /**
     * 模型名称.
     */
    name?: string | null;
    /**
     * AI 服务商.
     */
    provider?: AiProvider | null;
    /**
     * 最大模型输出 tokens，TextOutput.
     */
    textOutput?: number | null;
    /**
     * 对用户显示名称.
     */
    title?: string | null;
}
export type AiProvider = (typeof AiProviderObject)[keyof typeof AiProviderObject];
/**
 * 数据子项.
 */
export interface AuditsInfo extends Parsable {
    /**
     * 创建时间.
     */
    createTime?: string | null;
    /**
     * 创建人ID.
     */
    createUserId?: number | null;
    /**
     * 创建者 名字.
     */
    createUserName?: string | null;
    /**
     * 更新时间.
     */
    updateTime?: string | null;
    /**
     * 更新人ID.
     */
    updateUserId?: number | null;
    /**
     * 更新人 名字.
     */
    updateUserName?: string | null;
}
/**
 * 错误信息.
 */
export interface BusinessExceptionError extends Parsable {
    /**
     * 错误信息列表.
     */
    errors?: string[] | null;
    /**
     * 名称.
     */
    name?: string | null;
}
/**
 * 错误响应模型.
 */
export interface BusinessValidationResult extends ApiError, Parsable {
    /**
     * 错误码.
     */
    code?: number | null;
    /**
     * 错误消息.
     */
    detail?: string | null;
    /**
     * 具体错误列表.
     */
    errors?: BusinessExceptionError[] | null;
    /**
     * 扩展.
     */
    extensions?: BusinessValidationResult_extensions | null;
    /**
     * 请求上下文 ID.
     */
    requestId?: string | null;
}
/**
 * 扩展.
 */
export interface BusinessValidationResult_extensions extends Parsable {
}
/**
 * 取消文档处理任务.
 */
export interface CancalWikiDocumentTaskCommand extends Parsable {
    /**
     * 文档id.
     */
    documentId?: number | null;
    /**
     * 任务 id.
     */
    taskId?: number | null;
    /**
     * 知识库id.
     */
    wikiId?: number | null;
}
export interface Citation extends Parsable {
    /**
     * Link to the source, if available.
     */
    documentId?: string | null;
    /**
     * Link to the source, if available.
     */
    fileId?: string | null;
    /**
     * Link to the source, if available.
     */
    index?: string | null;
    /**
     * Link to the source, if available.
     */
    link?: string | null;
    /**
     * List of chunks/blocks of text used.
     */
    partitions?: Citation_Partition[] | null;
    /**
     * Type of source, e.g. PDF, Word, Chat, etc.
     */
    sourceContentType?: string | null;
    /**
     * Name of the source, e.g. file name.
     */
    sourceName?: string | null;
    /**
     * URL of the source, used for web pages and external data
     */
    sourceUrl?: string | null;
}
export interface Citation_Partition extends Parsable {
    /**
     * Timestamp about the file/text partition.
     */
    lastUpdate?: string | null;
    /**
     * Partition number, zero based
     */
    partitionNumber?: number | null;
    /**
     * Relevance of this partition against the given query.Value usually is between 0 and 1, when using cosine similarity.
     */
    relevance?: number | null;
    /**
     * Text page number / Audio segment number / Video scene number
     */
    sectionNumber?: number | null;
    /**
     * List of document tags
     */
    tags?: KeyValuePairOfStringAndListOfString[] | null;
    /**
     * Content of the document partition, aka chunk/block of text.
     */
    text?: string | null;
}
/**
 * 清空知识库文档向量.
 */
export interface ClearWikiDocumentEmbeddingCommand extends Parsable {
    /**
     * 不填写时清空整个知识库的文档向量.
     */
    documentId?: number | null;
    /**
     * 知识库 id.
     */
    wikiId?: number | null;
}
/**
 * 结束上传文件.
 */
export interface ComplateFileUploadCommand extends Parsable {
    /**
     * 文件ID.
     */
    fileId?: number | null;
    /**
     * 上传成功或失败.
     */
    isSuccess?: boolean | null;
}
/**
 * 结束上传文件.
 */
export interface ComplateUploadWikiDocumentCommand extends Parsable {
    /**
     * 文件ID.
     */
    fileId?: number | null;
    /**
     * 上传成功或失败.
     */
    isSuccess?: boolean | null;
    /**
     * 知识库ID.
     */
    wikiId?: number | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AddSystemAiModelRequest}
 */
// @ts-ignore
export function createAddSystemAiModelRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAddSystemAiModelRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AddUserAiModelRequest}
 */
// @ts-ignore
export function createAddUserAiModelRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAddUserAiModelRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AIAssistantChatContext}
 */
// @ts-ignore
export function createAIAssistantChatContextFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAIAssistantChatContext;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AIAssistantChatObject}
 */
// @ts-ignore
export function createAIAssistantChatObjectFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAIAssistantChatObject;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AiAssistantChatTopic}
 */
// @ts-ignore
export function createAiAssistantChatTopicFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAiAssistantChatTopic;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AiEndpoint}
 */
// @ts-ignore
export function createAiEndpointFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAiEndpoint;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AiNotKeyEndpoint}
 */
// @ts-ignore
export function createAiNotKeyEndpointFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAiNotKeyEndpoint;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditsInfo}
 */
// @ts-ignore
export function createAuditsInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuditsInfo;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BusinessExceptionError}
 */
// @ts-ignore
export function createBusinessExceptionErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBusinessExceptionError;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BusinessValidationResult_extensions}
 */
// @ts-ignore
export function createBusinessValidationResult_extensionsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBusinessValidationResult_extensions;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BusinessValidationResult}
 */
// @ts-ignore
export function createBusinessValidationResultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBusinessValidationResult;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CancalWikiDocumentTaskCommand}
 */
// @ts-ignore
export function createCancalWikiDocumentTaskCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCancalWikiDocumentTaskCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Citation_Partition}
 */
// @ts-ignore
export function createCitation_PartitionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCitation_Partition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Citation}
 */
// @ts-ignore
export function createCitationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCitation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ClearWikiDocumentEmbeddingCommand}
 */
// @ts-ignore
export function createClearWikiDocumentEmbeddingCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoClearWikiDocumentEmbeddingCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplateFileUploadCommand}
 */
// @ts-ignore
export function createComplateFileUploadCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplateFileUploadCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplateUploadWikiDocumentCommand}
 */
// @ts-ignore
export function createComplateUploadWikiDocumentCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplateUploadWikiDocumentCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreateOAuthConnectionCommand}
 */
// @ts-ignore
export function createCreateOAuthConnectionCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateOAuthConnectionCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreatePromptClassCommand}
 */
// @ts-ignore
export function createCreatePromptClassCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreatePromptClassCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreatePromptCommand}
 */
// @ts-ignore
export function createCreatePromptCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreatePromptCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreateWikiCommand}
 */
// @ts-ignore
export function createCreateWikiCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateWikiCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeleteAiAssistantChatCommand}
 */
// @ts-ignore
export function createDeleteAiAssistantChatCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeleteAiAssistantChatCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeleteAiModelCommand}
 */
// @ts-ignore
export function createDeleteAiModelCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeleteAiModelCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeleteOAuthConnectionCommand}
 */
// @ts-ignore
export function createDeleteOAuthConnectionCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeleteOAuthConnectionCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeletePluginCommand}
 */
// @ts-ignore
export function createDeletePluginCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeletePluginCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeletePromptCommand}
 */
// @ts-ignore
export function createDeletePromptCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeletePromptCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeleteUserCommand}
 */
// @ts-ignore
export function createDeleteUserCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeleteUserCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeleteWikiCommand}
 */
// @ts-ignore
export function createDeleteWikiCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeleteWikiCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeleteWikiDocumentCommand}
 */
// @ts-ignore
export function createDeleteWikiDocumentCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeleteWikiDocumentCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DisableUserCommand}
 */
// @ts-ignore
export function createDisableUserCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDisableUserCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EmbeddingDocumentCommand}
 */
// @ts-ignore
export function createEmbeddingDocumentCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEmbeddingDocumentCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EmptyCommandResponse}
 */
// @ts-ignore
export function createEmptyCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEmptyCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ImportMcpServerPluginCommand}
 */
// @ts-ignore
export function createImportMcpServerPluginCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoImportMcpServerPluginCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ImportOpenApiPluginCommand}
 */
// @ts-ignore
export function createImportOpenApiPluginCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoImportOpenApiPluginCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InviteWikiUserCommand}
 */
// @ts-ignore
export function createInviteWikiUserCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInviteWikiUserCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KeyValueOfStringAndString}
 */
// @ts-ignore
export function createKeyValueOfStringAndStringFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKeyValueOfStringAndString;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KeyValuePairOfStringAndListOfString}
 */
// @ts-ignore
export function createKeyValuePairOfStringAndListOfStringFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKeyValuePairOfStringAndListOfString;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KeyValueString}
 */
// @ts-ignore
export function createKeyValueStringFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKeyValueString;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LoginCommand}
 */
// @ts-ignore
export function createLoginCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLoginCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LoginCommandResponse}
 */
// @ts-ignore
export function createLoginCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLoginCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {McpServerPluginConnectionOptions}
 */
// @ts-ignore
export function createMcpServerPluginConnectionOptionsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMcpServerPluginConnectionOptions;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ModelAbilities}
 */
// @ts-ignore
export function createModelAbilitiesFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoModelAbilities;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OAuthBindExistAccountCommand}
 */
// @ts-ignore
export function createOAuthBindExistAccountCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOAuthBindExistAccountCommand;
}
/**
 * 创建 OAuth2.0 连接配置.
 */
export interface CreateOAuthConnectionCommand extends Parsable {
    /**
     * 图标地址.
     */
    iconUrl?: string | null;
    /**
     * 应用key.
     */
    key?: string | null;
    /**
     * 认证名称.
     */
    name?: string | null;
    /**
     * 提供商.
     */
    provider?: OAuthPrivider | null;
    /**
     * 密钥.
     */
    secret?: string | null;
    /**
     * 发现端口.
     */
    wellKnown?: string | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OAuthLoginCommand}
 */
// @ts-ignore
export function createOAuthLoginCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOAuthLoginCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OAuthLoginCommandResponse}
 */
// @ts-ignore
export function createOAuthLoginCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOAuthLoginCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OAuthRegisterCommand}
 */
// @ts-ignore
export function createOAuthRegisterCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOAuthRegisterCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PagedParamter}
 */
// @ts-ignore
export function createPagedParamterFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPagedParamter;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PagedResultOfQueryUserListCommandResponseItem}
 */
// @ts-ignore
export function createPagedResultOfQueryUserListCommandResponseItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPagedResultOfQueryUserListCommandResponseItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PagedResultOfQueryWikiDocumentListItem}
 */
// @ts-ignore
export function createPagedResultOfQueryWikiDocumentListItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPagedResultOfQueryWikiDocumentListItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PluginBaseInfoItem}
 */
// @ts-ignore
export function createPluginBaseInfoItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPluginBaseInfoItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PreloadWikiDocumentResponse}
 */
// @ts-ignore
export function createPreloadWikiDocumentResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPreloadWikiDocumentResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PreUploadFileCommandResponse}
 */
// @ts-ignore
export function createPreUploadFileCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPreUploadFileCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PreUploadImageCommand}
 */
// @ts-ignore
export function createPreUploadImageCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPreUploadImageCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PreUploadOpenApiFilePluginCommand}
 */
// @ts-ignore
export function createPreUploadOpenApiFilePluginCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPreUploadOpenApiFilePluginCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PreUploadOpenApiFilePluginCommandResponse}
 */
// @ts-ignore
export function createPreUploadOpenApiFilePluginCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPreUploadOpenApiFilePluginCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PreUploadWikiDocumentCommand}
 */
// @ts-ignore
export function createPreUploadWikiDocumentCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPreUploadWikiDocumentCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProcessingAiAssistantChatCommand}
 */
// @ts-ignore
export function createProcessingAiAssistantChatCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProcessingAiAssistantChatCommand;
}
/**
 * 创建提示词分类.
 */
export interface CreatePromptClassCommand extends Parsable {
    /**
     * 名称.
     */
    name?: string | null;
}
/**
 * 创建提示词.
 */
export interface CreatePromptCommand extends Parsable {
    /**
     * 助手设定,支持 markdown.
     */
    content?: string | null;
    /**
     * 描述.
     */
    description?: string | null;
    /**
     * 是否公开.
     */
    isPublic?: boolean | null;
    /**
     * 名称.
     */
    name?: string | null;
    /**
     * 分类.
     */
    promptClassId?: number | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PromptItem}
 */
// @ts-ignore
export function createPromptItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPromptItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryAiAssistantChatHistoryCommandResponse}
 */
// @ts-ignore
export function createQueryAiAssistantChatHistoryCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryAiAssistantChatHistoryCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryAiAssistantChatTopicListCommandResponse}
 */
// @ts-ignore
export function createQueryAiAssistantChatTopicListCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryAiAssistantChatTopicListCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryAiModelListCommandResponse}
 */
// @ts-ignore
export function createQueryAiModelListCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryAiModelListCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryAiModelProviderCount}
 */
// @ts-ignore
export function createQueryAiModelProviderCountFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryAiModelProviderCount;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryAiModelProviderListResponse}
 */
// @ts-ignore
export function createQueryAiModelProviderListResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryAiModelProviderListResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryAllOAuthPrividerCommandResponse}
 */
// @ts-ignore
export function createQueryAllOAuthPrividerCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryAllOAuthPrividerCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryAllOAuthPrividerCommandResponseItem}
 */
// @ts-ignore
export function createQueryAllOAuthPrividerCommandResponseItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryAllOAuthPrividerCommandResponseItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryAllOAuthPrividerDetailCommandResponse}
 */
// @ts-ignore
export function createQueryAllOAuthPrividerDetailCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryAllOAuthPrividerDetailCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryAllOAuthPrividerDetailCommandResponseItem}
 */
// @ts-ignore
export function createQueryAllOAuthPrividerDetailCommandResponseItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryAllOAuthPrividerDetailCommandResponseItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryePromptClassCommandResponse}
 */
// @ts-ignore
export function createQueryePromptClassCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryePromptClassCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryePromptClassCommandResponseItem}
 */
// @ts-ignore
export function createQueryePromptClassCommandResponseItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryePromptClassCommandResponseItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryPluginBaseListCommandResponse}
 */
// @ts-ignore
export function createQueryPluginBaseListCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryPluginBaseListCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryPluginDetailCommand}
 */
// @ts-ignore
export function createQueryPluginDetailCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryPluginDetailCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryPluginDetailCommandResponse}
 */
// @ts-ignore
export function createQueryPluginDetailCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryPluginDetailCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryPluginFunctionsListCommand}
 */
// @ts-ignore
export function createQueryPluginFunctionsListCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryPluginFunctionsListCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryPluginFunctionsListCommandResponse}
 */
// @ts-ignore
export function createQueryPluginFunctionsListCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryPluginFunctionsListCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryPluginFunctionsListCommandResponseItem}
 */
// @ts-ignore
export function createQueryPluginFunctionsListCommandResponseItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryPluginFunctionsListCommandResponseItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryPromptListCommand}
 */
// @ts-ignore
export function createQueryPromptListCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryPromptListCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryPromptListCommandResponse}
 */
// @ts-ignore
export function createQueryPromptListCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryPromptListCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryPublicSystemAiModelListCommand}
 */
// @ts-ignore
export function createQueryPublicSystemAiModelListCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryPublicSystemAiModelListCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryPublicSystemAiModelListCommandResponse}
 */
// @ts-ignore
export function createQueryPublicSystemAiModelListCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryPublicSystemAiModelListCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryServerInfoCommandResponse}
 */
// @ts-ignore
export function createQueryServerInfoCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryServerInfoCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QuerySystemAiModelListCommand}
 */
// @ts-ignore
export function createQuerySystemAiModelListCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQuerySystemAiModelListCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QuerySystemAiModelListCommandResponse}
 */
// @ts-ignore
export function createQuerySystemAiModelListCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQuerySystemAiModelListCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QuerySystemAiModelListCommandResponseItem}
 */
// @ts-ignore
export function createQuerySystemAiModelListCommandResponseItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQuerySystemAiModelListCommandResponseItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QuerySystemPluginBaseListCommand}
 */
// @ts-ignore
export function createQuerySystemPluginBaseListCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQuerySystemPluginBaseListCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QuerySystemSettingsCommandResponse}
 */
// @ts-ignore
export function createQuerySystemSettingsCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQuerySystemSettingsCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QuerySystemSettingsCommandResponseItem}
 */
// @ts-ignore
export function createQuerySystemSettingsCommandResponseItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQuerySystemSettingsCommandResponseItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryUserAiModelListRequest}
 */
// @ts-ignore
export function createQueryUserAiModelListRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryUserAiModelListRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryUserBindAccountCommandResponse}
 */
// @ts-ignore
export function createQueryUserBindAccountCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryUserBindAccountCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryUserBindAccountCommandResponseItem}
 */
// @ts-ignore
export function createQueryUserBindAccountCommandResponseItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryUserBindAccountCommandResponseItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryUserListCommand}
 */
// @ts-ignore
export function createQueryUserListCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryUserListCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryUserListCommandResponse}
 */
// @ts-ignore
export function createQueryUserListCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryUserListCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryUserListCommandResponseItem}
 */
// @ts-ignore
export function createQueryUserListCommandResponseItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryUserListCommandResponseItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryUserPluginBaseListCommand}
 */
// @ts-ignore
export function createQueryUserPluginBaseListCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryUserPluginBaseListCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryWikiBaseListCommand}
 */
// @ts-ignore
export function createQueryWikiBaseListCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryWikiBaseListCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryWikiDocumentInfoCommand}
 */
// @ts-ignore
export function createQueryWikiDocumentInfoCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryWikiDocumentInfoCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryWikiDocumentListCommand}
 */
// @ts-ignore
export function createQueryWikiDocumentListCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryWikiDocumentListCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryWikiDocumentListItem}
 */
// @ts-ignore
export function createQueryWikiDocumentListItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryWikiDocumentListItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryWikiDocumentListResponse}
 */
// @ts-ignore
export function createQueryWikiDocumentListResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryWikiDocumentListResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryWikiDocumentTaskListCommand}
 */
// @ts-ignore
export function createQueryWikiDocumentTaskListCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryWikiDocumentTaskListCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryWikiInfoCommand}
 */
// @ts-ignore
export function createQueryWikiInfoCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryWikiInfoCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryWikiInfoResponse}
 */
// @ts-ignore
export function createQueryWikiInfoResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryWikiInfoResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryWikiUsersCommand}
 */
// @ts-ignore
export function createQueryWikiUsersCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryWikiUsersCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryWikiUsersCommandResponse}
 */
// @ts-ignore
export function createQueryWikiUsersCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryWikiUsersCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryWikiUsersCommandResponseItem}
 */
// @ts-ignore
export function createQueryWikiUsersCommandResponseItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryWikiUsersCommandResponseItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RefreshMcpServerPluginCommand}
 */
// @ts-ignore
export function createRefreshMcpServerPluginCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRefreshMcpServerPluginCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RefreshTokenCommand}
 */
// @ts-ignore
export function createRefreshTokenCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRefreshTokenCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RefreshTokenCommandResponse}
 */
// @ts-ignore
export function createRefreshTokenCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRefreshTokenCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RegisterUserCommand}
 */
// @ts-ignore
export function createRegisterUserCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRegisterUserCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RemoveWikiUserCommand}
 */
// @ts-ignore
export function createRemoveWikiUserCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRemoveWikiUserCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ResetUserPasswordCommand}
 */
// @ts-ignore
export function createResetUserPasswordCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoResetUserPasswordCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchResult}
 */
// @ts-ignore
export function createSearchResultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchResult;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchWikiDocumentTextCommand}
 */
// @ts-ignore
export function createSearchWikiDocumentTextCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchWikiDocumentTextCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchWikiDocumentTextCommandResponse}
 */
// @ts-ignore
export function createSearchWikiDocumentTextCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchWikiDocumentTextCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SetSystemSettingsCommand}
 */
// @ts-ignore
export function createSetSystemSettingsCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSetSystemSettingsCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SetUserAdminCommand}
 */
// @ts-ignore
export function createSetUserAdminCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSetUserAdminCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SimpleInt}
 */
// @ts-ignore
export function createSimpleIntFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSimpleInt;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SimpleOfInt32}
 */
// @ts-ignore
export function createSimpleOfInt32FromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSimpleOfInt32;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SimpleOfString}
 */
// @ts-ignore
export function createSimpleOfStringFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSimpleOfString;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SimpleString}
 */
// @ts-ignore
export function createSimpleStringFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSimpleString;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UnbindUserAccountCommand}
 */
// @ts-ignore
export function createUnbindUserAccountCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnbindUserAccountCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateMcpServerPluginCommand}
 */
// @ts-ignore
export function createUpdateMcpServerPluginCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateMcpServerPluginCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateOAuthConnectionCommand}
 */
// @ts-ignore
export function createUpdateOAuthConnectionCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateOAuthConnectionCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateOpenApiPluginCommand}
 */
// @ts-ignore
export function createUpdateOpenApiPluginCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateOpenApiPluginCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdatePromptClassCommand}
 */
// @ts-ignore
export function createUpdatePromptClassCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdatePromptClassCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdatePromptCommand}
 */
// @ts-ignore
export function createUpdatePromptCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdatePromptCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateSystemAiModelRequest}
 */
// @ts-ignore
export function createUpdateSystemAiModelRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateSystemAiModelRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateUserAiModelRequest}
 */
// @ts-ignore
export function createUpdateUserAiModelRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateUserAiModelRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateUserInfoCommand}
 */
// @ts-ignore
export function createUpdateUserInfoCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateUserInfoCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateUserPasswordCommand}
 */
// @ts-ignore
export function createUpdateUserPasswordCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateUserPasswordCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateWikiConfigCommand}
 */
// @ts-ignore
export function createUpdateWikiConfigCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateWikiConfigCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateWikiInfoCommand}
 */
// @ts-ignore
export function createUpdateWikiInfoCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateWikiInfoCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UploadtUserAvatarCommand}
 */
// @ts-ignore
export function createUploadtUserAvatarCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUploadtUserAvatarCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserStateInfo}
 */
// @ts-ignore
export function createUserStateInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserStateInfo;
}
/**
 * 创建知识库.
 */
export interface CreateWikiCommand extends Parsable {
    /**
     * 团队描述.
     */
    description?: string | null;
    /**
     * 团队名称.
     */
    name?: string | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WikiConfig}
 */
// @ts-ignore
export function createWikiConfigFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWikiConfig;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WikiDocumentTaskItem}
 */
// @ts-ignore
export function createWikiDocumentTaskItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWikiDocumentTaskItem;
}
/**
 * 删除对话记录.
 */
export interface DeleteAiAssistantChatCommand extends Parsable {
    /**
     * 对话 id.
     */
    chatId?: Guid | null;
    /**
     * 用户 id.
     */
    userId?: number | null;
}
/**
 * 删除 ai 模型.
 */
export interface DeleteAiModelCommand extends Parsable {
    /**
     * 模型 id.
     */
    aiModelId?: number | null;
}
/**
 * 删除认证方式.
 */
export interface DeleteOAuthConnectionCommand extends Parsable {
    /**
     * id.
     */
    oAuthConnectionId?: Guid | null;
}
/**
 * 删除插件.
 */
export interface DeletePluginCommand extends Parsable {
    /**
     * 插件.
     */
    pluginId?: number | null;
}
/**
 * 删除提示词.
 */
export interface DeletePromptCommand extends Parsable {
    /**
     * 提示词 id.
     */
    promptId?: number | null;
}
/**
 * 删除用户.
 */
export interface DeleteUserCommand extends Parsable {
    /**
     * 用户ID.
     */
    userIds?: number[] | null;
}
/**
 * 删除知识库.
 */
export interface DeleteWikiCommand extends Parsable {
    /**
     * 知识库id.
     */
    wikiId?: number | null;
}
/**
 * 删除知识库文档.
 */
export interface DeleteWikiDocumentCommand extends Parsable {
    /**
     * 文档 id.
     */
    documentId?: number | null;
    /**
     * 知识库 id.
     */
    wikiId?: number | null;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAddSystemAiModelRequest(addSystemAiModelRequest: Partial<AddSystemAiModelRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAiEndpoint(addSystemAiModelRequest),
        "isPublic": n => { addSystemAiModelRequest.isPublic = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAddUserAiModelRequest(addUserAiModelRequest: Partial<AddUserAiModelRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAiEndpoint(addUserAiModelRequest),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAIAssistantChatContext(aIAssistantChatContext: Partial<AIAssistantChatContext> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAIAssistantChatObject(aIAssistantChatContext),
        "chatHistory": n => { aIAssistantChatContext.chatHistory = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAIAssistantChatObject(aIAssistantChatObject: Partial<AIAssistantChatObject> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "executionSettings": n => { aIAssistantChatObject.executionSettings = n.getCollectionOfObjectValues<KeyValueString>(createKeyValueStringFromDiscriminatorValue); },
        "modelId": n => { aIAssistantChatObject.modelId = n.getNumberValue(); },
        "pluginIds": n => { aIAssistantChatObject.pluginIds = n.getCollectionOfPrimitiveValues<number>(); },
        "prompt": n => { aIAssistantChatObject.prompt = n.getStringValue(); },
        "title": n => { aIAssistantChatObject.title = n.getStringValue(); },
        "wikiId": n => { aIAssistantChatObject.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAiAssistantChatTopic(aiAssistantChatTopic: Partial<AiAssistantChatTopic> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "chatId": n => { aiAssistantChatTopic.chatId = n.getGuidValue(); },
        "createTime": n => { aiAssistantChatTopic.createTime = n.getStringValue(); },
        "title": n => { aiAssistantChatTopic.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAiEndpoint(aiEndpoint: Partial<AiEndpoint> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "abilities": n => { aiEndpoint.abilities = n.getObjectValue<ModelAbilities>(createModelAbilitiesFromDiscriminatorValue); },
        "aiModelType": n => { aiEndpoint.aiModelType = n.getEnumValue<AiModelType>(AiModelTypeObject); },
        "contextWindowTokens": n => { aiEndpoint.contextWindowTokens = n.getNumberValue(); },
        "deploymentName": n => { aiEndpoint.deploymentName = n.getStringValue(); },
        "endpoint": n => { aiEndpoint.endpoint = n.getStringValue(); },
        "key": n => { aiEndpoint.key = n.getStringValue(); },
        "maxDimension": n => { aiEndpoint.maxDimension = n.getNumberValue(); },
        "name": n => { aiEndpoint.name = n.getStringValue(); },
        "provider": n => { aiEndpoint.provider = n.getEnumValue<AiProvider>(AiProviderObject); },
        "textOutput": n => { aiEndpoint.textOutput = n.getNumberValue(); },
        "title": n => { aiEndpoint.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAiNotKeyEndpoint(aiNotKeyEndpoint: Partial<AiNotKeyEndpoint> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "abilities": n => { aiNotKeyEndpoint.abilities = n.getObjectValue<ModelAbilities>(createModelAbilitiesFromDiscriminatorValue); },
        "aiModelType": n => { aiNotKeyEndpoint.aiModelType = n.getEnumValue<AiModelType>(AiModelTypeObject); },
        "contextWindowTokens": n => { aiNotKeyEndpoint.contextWindowTokens = n.getNumberValue(); },
        "deploymentName": n => { aiNotKeyEndpoint.deploymentName = n.getStringValue(); },
        "endpoint": n => { aiNotKeyEndpoint.endpoint = n.getStringValue(); },
        "id": n => { aiNotKeyEndpoint.id = n.getNumberValue(); },
        "maxDimension": n => { aiNotKeyEndpoint.maxDimension = n.getNumberValue(); },
        "name": n => { aiNotKeyEndpoint.name = n.getStringValue(); },
        "provider": n => { aiNotKeyEndpoint.provider = n.getEnumValue<AiProvider>(AiProviderObject); },
        "textOutput": n => { aiNotKeyEndpoint.textOutput = n.getNumberValue(); },
        "title": n => { aiNotKeyEndpoint.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditsInfo(auditsInfo: Partial<AuditsInfo> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "createTime": n => { auditsInfo.createTime = n.getStringValue(); },
        "createUserId": n => { auditsInfo.createUserId = n.getNumberValue(); },
        "createUserName": n => { auditsInfo.createUserName = n.getStringValue(); },
        "updateTime": n => { auditsInfo.updateTime = n.getStringValue(); },
        "updateUserId": n => { auditsInfo.updateUserId = n.getNumberValue(); },
        "updateUserName": n => { auditsInfo.updateUserName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBusinessExceptionError(businessExceptionError: Partial<BusinessExceptionError> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "errors": n => { businessExceptionError.errors = n.getCollectionOfPrimitiveValues<string>(); },
        "name": n => { businessExceptionError.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBusinessValidationResult(businessValidationResult: Partial<BusinessValidationResult> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "code": n => { businessValidationResult.code = n.getNumberValue(); },
        "detail": n => { businessValidationResult.detail = n.getStringValue(); },
        "errors": n => { businessValidationResult.errors = n.getCollectionOfObjectValues<BusinessExceptionError>(createBusinessExceptionErrorFromDiscriminatorValue); },
        "extensions": n => { businessValidationResult.extensions = n.getObjectValue<BusinessValidationResult_extensions>(createBusinessValidationResult_extensionsFromDiscriminatorValue); },
        "requestId": n => { businessValidationResult.requestId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBusinessValidationResult_extensions(businessValidationResult_extensions: Partial<BusinessValidationResult_extensions> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCancalWikiDocumentTaskCommand(cancalWikiDocumentTaskCommand: Partial<CancalWikiDocumentTaskCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "documentId": n => { cancalWikiDocumentTaskCommand.documentId = n.getNumberValue(); },
        "taskId": n => { cancalWikiDocumentTaskCommand.taskId = n.getNumberValue(); },
        "wikiId": n => { cancalWikiDocumentTaskCommand.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCitation(citation: Partial<Citation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "documentId": n => { citation.documentId = n.getStringValue(); },
        "fileId": n => { citation.fileId = n.getStringValue(); },
        "index": n => { citation.index = n.getStringValue(); },
        "link": n => { citation.link = n.getStringValue(); },
        "partitions": n => { citation.partitions = n.getCollectionOfObjectValues<Citation_Partition>(createCitation_PartitionFromDiscriminatorValue); },
        "sourceContentType": n => { citation.sourceContentType = n.getStringValue(); },
        "sourceName": n => { citation.sourceName = n.getStringValue(); },
        "sourceUrl": n => { citation.sourceUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCitation_Partition(citation_Partition: Partial<Citation_Partition> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "lastUpdate": n => { citation_Partition.lastUpdate = n.getStringValue(); },
        "partitionNumber": n => { citation_Partition.partitionNumber = n.getNumberValue(); },
        "relevance": n => { citation_Partition.relevance = n.getNumberValue(); },
        "sectionNumber": n => { citation_Partition.sectionNumber = n.getNumberValue(); },
        "tags": n => { citation_Partition.tags = n.getCollectionOfObjectValues<KeyValuePairOfStringAndListOfString>(createKeyValuePairOfStringAndListOfStringFromDiscriminatorValue); },
        "text": n => { citation_Partition.text = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoClearWikiDocumentEmbeddingCommand(clearWikiDocumentEmbeddingCommand: Partial<ClearWikiDocumentEmbeddingCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "documentId": n => { clearWikiDocumentEmbeddingCommand.documentId = n.getNumberValue(); },
        "wikiId": n => { clearWikiDocumentEmbeddingCommand.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplateFileUploadCommand(complateFileUploadCommand: Partial<ComplateFileUploadCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "fileId": n => { complateFileUploadCommand.fileId = n.getNumberValue(); },
        "isSuccess": n => { complateFileUploadCommand.isSuccess = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplateUploadWikiDocumentCommand(complateUploadWikiDocumentCommand: Partial<ComplateUploadWikiDocumentCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "fileId": n => { complateUploadWikiDocumentCommand.fileId = n.getNumberValue(); },
        "isSuccess": n => { complateUploadWikiDocumentCommand.isSuccess = n.getBooleanValue(); },
        "wikiId": n => { complateUploadWikiDocumentCommand.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreateOAuthConnectionCommand(createOAuthConnectionCommand: Partial<CreateOAuthConnectionCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "iconUrl": n => { createOAuthConnectionCommand.iconUrl = n.getStringValue(); },
        "key": n => { createOAuthConnectionCommand.key = n.getStringValue(); },
        "name": n => { createOAuthConnectionCommand.name = n.getStringValue(); },
        "provider": n => { createOAuthConnectionCommand.provider = n.getEnumValue<OAuthPrivider>(OAuthPrividerObject); },
        "secret": n => { createOAuthConnectionCommand.secret = n.getStringValue(); },
        "wellKnown": n => { createOAuthConnectionCommand.wellKnown = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreatePromptClassCommand(createPromptClassCommand: Partial<CreatePromptClassCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "name": n => { createPromptClassCommand.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreatePromptCommand(createPromptCommand: Partial<CreatePromptCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "content": n => { createPromptCommand.content = n.getStringValue(); },
        "description": n => { createPromptCommand.description = n.getStringValue(); },
        "isPublic": n => { createPromptCommand.isPublic = n.getBooleanValue(); },
        "name": n => { createPromptCommand.name = n.getStringValue(); },
        "promptClassId": n => { createPromptCommand.promptClassId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreateWikiCommand(createWikiCommand: Partial<CreateWikiCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { createWikiCommand.description = n.getStringValue(); },
        "name": n => { createWikiCommand.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeleteAiAssistantChatCommand(deleteAiAssistantChatCommand: Partial<DeleteAiAssistantChatCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "chatId": n => { deleteAiAssistantChatCommand.chatId = n.getGuidValue(); },
        "userId": n => { deleteAiAssistantChatCommand.userId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeleteAiModelCommand(deleteAiModelCommand: Partial<DeleteAiModelCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "aiModelId": n => { deleteAiModelCommand.aiModelId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeleteOAuthConnectionCommand(deleteOAuthConnectionCommand: Partial<DeleteOAuthConnectionCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "oAuthConnectionId": n => { deleteOAuthConnectionCommand.oAuthConnectionId = n.getGuidValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeletePluginCommand(deletePluginCommand: Partial<DeletePluginCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pluginId": n => { deletePluginCommand.pluginId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeletePromptCommand(deletePromptCommand: Partial<DeletePromptCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "promptId": n => { deletePromptCommand.promptId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeleteUserCommand(deleteUserCommand: Partial<DeleteUserCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "userIds": n => { deleteUserCommand.userIds = n.getCollectionOfPrimitiveValues<number>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeleteWikiCommand(deleteWikiCommand: Partial<DeleteWikiCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "wikiId": n => { deleteWikiCommand.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeleteWikiDocumentCommand(deleteWikiDocumentCommand: Partial<DeleteWikiDocumentCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "documentId": n => { deleteWikiDocumentCommand.documentId = n.getNumberValue(); },
        "wikiId": n => { deleteWikiDocumentCommand.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDisableUserCommand(disableUserCommand: Partial<DisableUserCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "isDisable": n => { disableUserCommand.isDisable = n.getBooleanValue(); },
        "userIds": n => { disableUserCommand.userIds = n.getCollectionOfPrimitiveValues<number>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEmbeddingDocumentCommand(embeddingDocumentCommand: Partial<EmbeddingDocumentCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "documentId": n => { embeddingDocumentCommand.documentId = n.getNumberValue(); },
        "maxTokensPerParagraph": n => { embeddingDocumentCommand.maxTokensPerParagraph = n.getNumberValue(); },
        "overlappingTokens": n => { embeddingDocumentCommand.overlappingTokens = n.getNumberValue(); },
        "splitMethod": n => { embeddingDocumentCommand.splitMethod = n.getStringValue(); },
        "tokenizer": n => { embeddingDocumentCommand.tokenizer = n.getEnumValue<EmbeddingTokenizer>(EmbeddingTokenizerObject); },
        "wikiId": n => { embeddingDocumentCommand.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEmptyCommandResponse(emptyCommandResponse: Partial<EmptyCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoImportMcpServerPluginCommand(importMcpServerPluginCommand: Partial<ImportMcpServerPluginCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoMcpServerPluginConnectionOptions(importMcpServerPluginCommand),
        "isPublic": n => { importMcpServerPluginCommand.isPublic = n.getBooleanValue(); },
        "isSystem": n => { importMcpServerPluginCommand.isSystem = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoImportOpenApiPluginCommand(importOpenApiPluginCommand: Partial<ImportOpenApiPluginCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { importOpenApiPluginCommand.description = n.getStringValue(); },
        "fileId": n => { importOpenApiPluginCommand.fileId = n.getNumberValue(); },
        "fileName": n => { importOpenApiPluginCommand.fileName = n.getStringValue(); },
        "isPublic": n => { importOpenApiPluginCommand.isPublic = n.getBooleanValue(); },
        "isSystem": n => { importOpenApiPluginCommand.isSystem = n.getBooleanValue(); },
        "name": n => { importOpenApiPluginCommand.name = n.getStringValue(); },
        "title": n => { importOpenApiPluginCommand.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInviteWikiUserCommand(inviteWikiUserCommand: Partial<InviteWikiUserCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "userName": n => { inviteWikiUserCommand.userName = n.getStringValue(); },
        "wikiId": n => { inviteWikiUserCommand.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKeyValueOfStringAndString(keyValueOfStringAndString: Partial<KeyValueOfStringAndString> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "key": n => { keyValueOfStringAndString.key = n.getStringValue(); },
        "value": n => { keyValueOfStringAndString.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKeyValuePairOfStringAndListOfString(keyValuePairOfStringAndListOfString: Partial<KeyValuePairOfStringAndListOfString> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "key": n => { keyValuePairOfStringAndListOfString.key = n.getStringValue(); },
        "value": n => { keyValuePairOfStringAndListOfString.value = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKeyValueString(keyValueString: Partial<KeyValueString> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoKeyValueOfStringAndString(keyValueString),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLoginCommand(loginCommand: Partial<LoginCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "password": n => { loginCommand.password = n.getStringValue(); },
        "userName": n => { loginCommand.userName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLoginCommandResponse(loginCommandResponse: Partial<LoginCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accessToken": n => { loginCommandResponse.accessToken = n.getStringValue(); },
        "expiresIn": n => { loginCommandResponse.expiresIn = n.getStringValue(); },
        "refreshToken": n => { loginCommandResponse.refreshToken = n.getStringValue(); },
        "tokenType": n => { loginCommandResponse.tokenType = n.getStringValue(); },
        "userId": n => { loginCommandResponse.userId = n.getNumberValue(); },
        "userName": n => { loginCommandResponse.userName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMcpServerPluginConnectionOptions(mcpServerPluginConnectionOptions: Partial<McpServerPluginConnectionOptions> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { mcpServerPluginConnectionOptions.description = n.getStringValue(); },
        "header": n => { mcpServerPluginConnectionOptions.header = n.getCollectionOfObjectValues<KeyValueString>(createKeyValueStringFromDiscriminatorValue); },
        "name": n => { mcpServerPluginConnectionOptions.name = n.getStringValue(); },
        "query": n => { mcpServerPluginConnectionOptions.query = n.getCollectionOfObjectValues<KeyValueString>(createKeyValueStringFromDiscriminatorValue); },
        "serverUrl": n => { mcpServerPluginConnectionOptions.serverUrl = n.getStringValue(); },
        "title": n => { mcpServerPluginConnectionOptions.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoModelAbilities(modelAbilities: Partial<ModelAbilities> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "files": n => { modelAbilities.files = n.getBooleanValue(); },
        "functionCall": n => { modelAbilities.functionCall = n.getBooleanValue(); },
        "imageOutput": n => { modelAbilities.imageOutput = n.getBooleanValue(); },
        "vision": n => { modelAbilities.vision = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOAuthBindExistAccountCommand(oAuthBindExistAccountCommand: Partial<OAuthBindExistAccountCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "tempOAuthBindId": n => { oAuthBindExistAccountCommand.tempOAuthBindId = n.getGuidValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOAuthLoginCommand(oAuthLoginCommand: Partial<OAuthLoginCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "code": n => { oAuthLoginCommand.code = n.getStringValue(); },
        "oAuthId": n => { oAuthLoginCommand.oAuthId = n.getGuidValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOAuthLoginCommandResponse(oAuthLoginCommandResponse: Partial<OAuthLoginCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "isBindUser": n => { oAuthLoginCommandResponse.isBindUser = n.getBooleanValue(); },
        "loginCommandResponse": n => { oAuthLoginCommandResponse.loginCommandResponse = n.getObjectValue<LoginCommandResponse>(createLoginCommandResponseFromDiscriminatorValue); },
        "name": n => { oAuthLoginCommandResponse.name = n.getStringValue(); },
        "oAuthId": n => { oAuthLoginCommandResponse.oAuthId = n.getGuidValue(); },
        "tempOAuthBindId": n => { oAuthLoginCommandResponse.tempOAuthBindId = n.getGuidValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOAuthRegisterCommand(oAuthRegisterCommand: Partial<OAuthRegisterCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "tempOAuthBindId": n => { oAuthRegisterCommand.tempOAuthBindId = n.getGuidValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPagedParamter(pagedParamter: Partial<PagedParamter> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pageNo": n => { pagedParamter.pageNo = n.getNumberValue(); },
        "pageSize": n => { pagedParamter.pageSize = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPagedResultOfQueryUserListCommandResponseItem(pagedResultOfQueryUserListCommandResponseItem: Partial<PagedResultOfQueryUserListCommandResponseItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoPagedParamter(pagedResultOfQueryUserListCommandResponseItem),
        "items": n => { pagedResultOfQueryUserListCommandResponseItem.items = n.getCollectionOfObjectValues<QueryUserListCommandResponseItem>(createQueryUserListCommandResponseItemFromDiscriminatorValue); },
        "total": n => { pagedResultOfQueryUserListCommandResponseItem.total = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPagedResultOfQueryWikiDocumentListItem(pagedResultOfQueryWikiDocumentListItem: Partial<PagedResultOfQueryWikiDocumentListItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoPagedParamter(pagedResultOfQueryWikiDocumentListItem),
        "items": n => { pagedResultOfQueryWikiDocumentListItem.items = n.getCollectionOfObjectValues<QueryWikiDocumentListItem>(createQueryWikiDocumentListItemFromDiscriminatorValue); },
        "total": n => { pagedResultOfQueryWikiDocumentListItem.total = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPluginBaseInfoItem(pluginBaseInfoItem: Partial<PluginBaseInfoItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditsInfo(pluginBaseInfoItem),
        "description": n => { pluginBaseInfoItem.description = n.getStringValue(); },
        "isPublic": n => { pluginBaseInfoItem.isPublic = n.getBooleanValue(); },
        "isSystem": n => { pluginBaseInfoItem.isSystem = n.getBooleanValue(); },
        "openapiFileId": n => { pluginBaseInfoItem.openapiFileId = n.getNumberValue(); },
        "openapiFileName": n => { pluginBaseInfoItem.openapiFileName = n.getStringValue(); },
        "pluginId": n => { pluginBaseInfoItem.pluginId = n.getNumberValue(); },
        "pluginName": n => { pluginBaseInfoItem.pluginName = n.getStringValue(); },
        "server": n => { pluginBaseInfoItem.server = n.getStringValue(); },
        "title": n => { pluginBaseInfoItem.title = n.getStringValue(); },
        "type": n => { pluginBaseInfoItem.type = n.getEnumValue<PluginType>(PluginTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPreloadWikiDocumentResponse(preloadWikiDocumentResponse: Partial<PreloadWikiDocumentResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "expiration": n => { preloadWikiDocumentResponse.expiration = n.getStringValue(); },
        "fileId": n => { preloadWikiDocumentResponse.fileId = n.getNumberValue(); },
        "isExist": n => { preloadWikiDocumentResponse.isExist = n.getBooleanValue(); },
        "uploadUrl": n => { preloadWikiDocumentResponse.uploadUrl = n.getStringValue(); },
        "visibility": n => { preloadWikiDocumentResponse.visibility = n.getEnumValue<FileVisibility>(FileVisibilityObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPreUploadFileCommandResponse(preUploadFileCommandResponse: Partial<PreUploadFileCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "expiration": n => { preUploadFileCommandResponse.expiration = n.getStringValue(); },
        "fileId": n => { preUploadFileCommandResponse.fileId = n.getNumberValue(); },
        "isExist": n => { preUploadFileCommandResponse.isExist = n.getBooleanValue(); },
        "uploadUrl": n => { preUploadFileCommandResponse.uploadUrl = n.getStringValue(); },
        "visibility": n => { preUploadFileCommandResponse.visibility = n.getEnumValue<FileVisibility>(FileVisibilityObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPreUploadImageCommand(preUploadImageCommand: Partial<PreUploadImageCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "contentType": n => { preUploadImageCommand.contentType = n.getStringValue(); },
        "fileName": n => { preUploadImageCommand.fileName = n.getStringValue(); },
        "fileSize": n => { preUploadImageCommand.fileSize = n.getNumberValue(); },
        "mD5": n => { preUploadImageCommand.mD5 = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPreUploadOpenApiFilePluginCommand(preUploadOpenApiFilePluginCommand: Partial<PreUploadOpenApiFilePluginCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "contentType": n => { preUploadOpenApiFilePluginCommand.contentType = n.getStringValue(); },
        "fileName": n => { preUploadOpenApiFilePluginCommand.fileName = n.getStringValue(); },
        "fileSize": n => { preUploadOpenApiFilePluginCommand.fileSize = n.getNumberValue(); },
        "mD5": n => { preUploadOpenApiFilePluginCommand.mD5 = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPreUploadOpenApiFilePluginCommandResponse(preUploadOpenApiFilePluginCommandResponse: Partial<PreUploadOpenApiFilePluginCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "expiration": n => { preUploadOpenApiFilePluginCommandResponse.expiration = n.getStringValue(); },
        "fileId": n => { preUploadOpenApiFilePluginCommandResponse.fileId = n.getNumberValue(); },
        "isExist": n => { preUploadOpenApiFilePluginCommandResponse.isExist = n.getBooleanValue(); },
        "uploadUrl": n => { preUploadOpenApiFilePluginCommandResponse.uploadUrl = n.getStringValue(); },
        "visibility": n => { preUploadOpenApiFilePluginCommandResponse.visibility = n.getEnumValue<FileVisibility>(FileVisibilityObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPreUploadWikiDocumentCommand(preUploadWikiDocumentCommand: Partial<PreUploadWikiDocumentCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "contentType": n => { preUploadWikiDocumentCommand.contentType = n.getStringValue(); },
        "fileName": n => { preUploadWikiDocumentCommand.fileName = n.getStringValue(); },
        "fileSize": n => { preUploadWikiDocumentCommand.fileSize = n.getNumberValue(); },
        "mD5": n => { preUploadWikiDocumentCommand.mD5 = n.getStringValue(); },
        "wikiId": n => { preUploadWikiDocumentCommand.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProcessingAiAssistantChatCommand(processingAiAssistantChatCommand: Partial<ProcessingAiAssistantChatCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAIAssistantChatObject(processingAiAssistantChatCommand),
        "chatId": n => { processingAiAssistantChatCommand.chatId = n.getGuidValue(); },
        "content": n => { processingAiAssistantChatCommand.content = n.getStringValue(); },
        "userId": n => { processingAiAssistantChatCommand.userId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPromptItem(promptItem: Partial<PromptItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditsInfo(promptItem),
        "content": n => { promptItem.content = n.getStringValue(); },
        "description": n => { promptItem.description = n.getStringValue(); },
        "id": n => { promptItem.id = n.getNumberValue(); },
        "isPublic": n => { promptItem.isPublic = n.getBooleanValue(); },
        "name": n => { promptItem.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryAiAssistantChatHistoryCommandResponse(queryAiAssistantChatHistoryCommandResponse: Partial<QueryAiAssistantChatHistoryCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAIAssistantChatContext(queryAiAssistantChatHistoryCommandResponse),
        "chatId": n => { queryAiAssistantChatHistoryCommandResponse.chatId = n.getGuidValue(); },
        "createTime": n => { queryAiAssistantChatHistoryCommandResponse.createTime = n.getStringValue(); },
        "updateTime": n => { queryAiAssistantChatHistoryCommandResponse.updateTime = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryAiAssistantChatTopicListCommandResponse(queryAiAssistantChatTopicListCommandResponse: Partial<QueryAiAssistantChatTopicListCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "items": n => { queryAiAssistantChatTopicListCommandResponse.items = n.getCollectionOfObjectValues<AiAssistantChatTopic>(createAiAssistantChatTopicFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryAiModelListCommandResponse(queryAiModelListCommandResponse: Partial<QueryAiModelListCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "aiModels": n => { queryAiModelListCommandResponse.aiModels = n.getCollectionOfObjectValues<AiNotKeyEndpoint>(createAiNotKeyEndpointFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryAiModelProviderCount(queryAiModelProviderCount: Partial<QueryAiModelProviderCount> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "count": n => { queryAiModelProviderCount.count = n.getNumberValue(); },
        "provider": n => { queryAiModelProviderCount.provider = n.getEnumValue<AiProvider>(AiProviderObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryAiModelProviderListResponse(queryAiModelProviderListResponse: Partial<QueryAiModelProviderListResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "providers": n => { queryAiModelProviderListResponse.providers = n.getCollectionOfObjectValues<QueryAiModelProviderCount>(createQueryAiModelProviderCountFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryAllOAuthPrividerCommandResponse(queryAllOAuthPrividerCommandResponse: Partial<QueryAllOAuthPrividerCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "items": n => { queryAllOAuthPrividerCommandResponse.items = n.getCollectionOfObjectValues<QueryAllOAuthPrividerCommandResponseItem>(createQueryAllOAuthPrividerCommandResponseItemFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryAllOAuthPrividerCommandResponseItem(queryAllOAuthPrividerCommandResponseItem: Partial<QueryAllOAuthPrividerCommandResponseItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "iconUrl": n => { queryAllOAuthPrividerCommandResponseItem.iconUrl = n.getStringValue(); },
        "name": n => { queryAllOAuthPrividerCommandResponseItem.name = n.getStringValue(); },
        "oAuthId": n => { queryAllOAuthPrividerCommandResponseItem.oAuthId = n.getGuidValue(); },
        "provider": n => { queryAllOAuthPrividerCommandResponseItem.provider = n.getStringValue(); },
        "redirectUrl": n => { queryAllOAuthPrividerCommandResponseItem.redirectUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryAllOAuthPrividerDetailCommandResponse(queryAllOAuthPrividerDetailCommandResponse: Partial<QueryAllOAuthPrividerDetailCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "items": n => { queryAllOAuthPrividerDetailCommandResponse.items = n.getCollectionOfObjectValues<QueryAllOAuthPrividerDetailCommandResponseItem>(createQueryAllOAuthPrividerDetailCommandResponseItemFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryAllOAuthPrividerDetailCommandResponseItem(queryAllOAuthPrividerDetailCommandResponseItem: Partial<QueryAllOAuthPrividerDetailCommandResponseItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditsInfo(queryAllOAuthPrividerDetailCommandResponseItem),
        "authorizeUrl": n => { queryAllOAuthPrividerDetailCommandResponseItem.authorizeUrl = n.getStringValue(); },
        "iconUrl": n => { queryAllOAuthPrividerDetailCommandResponseItem.iconUrl = n.getStringValue(); },
        "id": n => { queryAllOAuthPrividerDetailCommandResponseItem.id = n.getGuidValue(); },
        "key": n => { queryAllOAuthPrividerDetailCommandResponseItem.key = n.getStringValue(); },
        "name": n => { queryAllOAuthPrividerDetailCommandResponseItem.name = n.getStringValue(); },
        "provider": n => { queryAllOAuthPrividerDetailCommandResponseItem.provider = n.getStringValue(); },
        "wellKnown": n => { queryAllOAuthPrividerDetailCommandResponseItem.wellKnown = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryePromptClassCommandResponse(queryePromptClassCommandResponse: Partial<QueryePromptClassCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "items": n => { queryePromptClassCommandResponse.items = n.getCollectionOfObjectValues<QueryePromptClassCommandResponseItem>(createQueryePromptClassCommandResponseItemFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryePromptClassCommandResponseItem(queryePromptClassCommandResponseItem: Partial<QueryePromptClassCommandResponseItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { queryePromptClassCommandResponseItem.id = n.getNumberValue(); },
        "name": n => { queryePromptClassCommandResponseItem.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryPluginBaseListCommandResponse(queryPluginBaseListCommandResponse: Partial<QueryPluginBaseListCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "items": n => { queryPluginBaseListCommandResponse.items = n.getCollectionOfObjectValues<PluginBaseInfoItem>(createPluginBaseInfoItemFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryPluginDetailCommand(queryPluginDetailCommand: Partial<QueryPluginDetailCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pluginId": n => { queryPluginDetailCommand.pluginId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryPluginDetailCommandResponse(queryPluginDetailCommandResponse: Partial<QueryPluginDetailCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditsInfo(queryPluginDetailCommandResponse),
        "description": n => { queryPluginDetailCommandResponse.description = n.getStringValue(); },
        "header": n => { queryPluginDetailCommandResponse.header = n.getCollectionOfObjectValues<KeyValueString>(createKeyValueStringFromDiscriminatorValue); },
        "isPublic": n => { queryPluginDetailCommandResponse.isPublic = n.getBooleanValue(); },
        "openapiFileId": n => { queryPluginDetailCommandResponse.openapiFileId = n.getNumberValue(); },
        "openapiFileName": n => { queryPluginDetailCommandResponse.openapiFileName = n.getStringValue(); },
        "pluginId": n => { queryPluginDetailCommandResponse.pluginId = n.getNumberValue(); },
        "pluginName": n => { queryPluginDetailCommandResponse.pluginName = n.getStringValue(); },
        "query": n => { queryPluginDetailCommandResponse.query = n.getCollectionOfObjectValues<KeyValueString>(createKeyValueStringFromDiscriminatorValue); },
        "server": n => { queryPluginDetailCommandResponse.server = n.getStringValue(); },
        "title": n => { queryPluginDetailCommandResponse.title = n.getStringValue(); },
        "type": n => { queryPluginDetailCommandResponse.type = n.getEnumValue<PluginType>(PluginTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryPluginFunctionsListCommand(queryPluginFunctionsListCommand: Partial<QueryPluginFunctionsListCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pluginId": n => { queryPluginFunctionsListCommand.pluginId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryPluginFunctionsListCommandResponse(queryPluginFunctionsListCommandResponse: Partial<QueryPluginFunctionsListCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "items": n => { queryPluginFunctionsListCommandResponse.items = n.getCollectionOfObjectValues<QueryPluginFunctionsListCommandResponseItem>(createQueryPluginFunctionsListCommandResponseItemFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryPluginFunctionsListCommandResponseItem(queryPluginFunctionsListCommandResponseItem: Partial<QueryPluginFunctionsListCommandResponseItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "functionId": n => { queryPluginFunctionsListCommandResponseItem.functionId = n.getNumberValue(); },
        "name": n => { queryPluginFunctionsListCommandResponseItem.name = n.getStringValue(); },
        "path": n => { queryPluginFunctionsListCommandResponseItem.path = n.getStringValue(); },
        "pluginId": n => { queryPluginFunctionsListCommandResponseItem.pluginId = n.getNumberValue(); },
        "summary": n => { queryPluginFunctionsListCommandResponseItem.summary = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryPromptListCommand(queryPromptListCommand: Partial<QueryPromptListCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "classId": n => { queryPromptListCommand.classId = n.getNumberValue(); },
        "isOwn": n => { queryPromptListCommand.isOwn = n.getBooleanValue(); },
        "name": n => { queryPromptListCommand.name = n.getStringValue(); },
        "userId": n => { queryPromptListCommand.userId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryPromptListCommandResponse(queryPromptListCommandResponse: Partial<QueryPromptListCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "items": n => { queryPromptListCommandResponse.items = n.getCollectionOfObjectValues<PromptItem>(createPromptItemFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryPublicSystemAiModelListCommand(queryPublicSystemAiModelListCommand: Partial<QueryPublicSystemAiModelListCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "aiModelType": n => { queryPublicSystemAiModelListCommand.aiModelType = n.getEnumValue<AiModelType>(AiModelTypeObject); },
        "provider": n => { queryPublicSystemAiModelListCommand.provider = n.getEnumValue<AiProvider>(AiProviderObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryPublicSystemAiModelListCommandResponse(queryPublicSystemAiModelListCommandResponse: Partial<QueryPublicSystemAiModelListCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "aiModels": n => { queryPublicSystemAiModelListCommandResponse.aiModels = n.getCollectionOfObjectValues<AiNotKeyEndpoint>(createAiNotKeyEndpointFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryServerInfoCommandResponse(queryServerInfoCommandResponse: Partial<QueryServerInfoCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "disableRegister": n => { queryServerInfoCommandResponse.disableRegister = n.getBooleanValue(); },
        "maxUploadFileSize": n => { queryServerInfoCommandResponse.maxUploadFileSize = n.getNumberValue(); },
        "publicStoreUrl": n => { queryServerInfoCommandResponse.publicStoreUrl = n.getStringValue(); },
        "rsaPublic": n => { queryServerInfoCommandResponse.rsaPublic = n.getStringValue(); },
        "serviceUrl": n => { queryServerInfoCommandResponse.serviceUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQuerySystemAiModelListCommand(querySystemAiModelListCommand: Partial<QuerySystemAiModelListCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "aiModelType": n => { querySystemAiModelListCommand.aiModelType = n.getEnumValue<AiModelType>(AiModelTypeObject); },
        "provider": n => { querySystemAiModelListCommand.provider = n.getEnumValue<AiProvider>(AiProviderObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQuerySystemAiModelListCommandResponse(querySystemAiModelListCommandResponse: Partial<QuerySystemAiModelListCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "aiModels": n => { querySystemAiModelListCommandResponse.aiModels = n.getCollectionOfObjectValues<QuerySystemAiModelListCommandResponseItem>(createQuerySystemAiModelListCommandResponseItemFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQuerySystemAiModelListCommandResponseItem(querySystemAiModelListCommandResponseItem: Partial<QuerySystemAiModelListCommandResponseItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAiNotKeyEndpoint(querySystemAiModelListCommandResponseItem),
        "isPublic": n => { querySystemAiModelListCommandResponseItem.isPublic = n.getBooleanValue(); },
        "isSystem": n => { querySystemAiModelListCommandResponseItem.isSystem = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQuerySystemPluginBaseListCommand(querySystemPluginBaseListCommand: Partial<QuerySystemPluginBaseListCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "name": n => { querySystemPluginBaseListCommand.name = n.getStringValue(); },
        "type": n => { querySystemPluginBaseListCommand.type = n.getEnumValue<PluginType>(PluginTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQuerySystemSettingsCommandResponse(querySystemSettingsCommandResponse: Partial<QuerySystemSettingsCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "items": n => { querySystemSettingsCommandResponse.items = n.getCollectionOfObjectValues<QuerySystemSettingsCommandResponseItem>(createQuerySystemSettingsCommandResponseItemFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQuerySystemSettingsCommandResponseItem(querySystemSettingsCommandResponseItem: Partial<QuerySystemSettingsCommandResponseItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { querySystemSettingsCommandResponseItem.description = n.getStringValue(); },
        "id": n => { querySystemSettingsCommandResponseItem.id = n.getNumberValue(); },
        "key": n => { querySystemSettingsCommandResponseItem.key = n.getStringValue(); },
        "value": n => { querySystemSettingsCommandResponseItem.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryUserAiModelListRequest(queryUserAiModelListRequest: Partial<QueryUserAiModelListRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "aiModelType": n => { queryUserAiModelListRequest.aiModelType = n.getEnumValue<AiModelType>(AiModelTypeObject); },
        "provider": n => { queryUserAiModelListRequest.provider = n.getEnumValue<AiProvider>(AiProviderObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryUserBindAccountCommandResponse(queryUserBindAccountCommandResponse: Partial<QueryUserBindAccountCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "items": n => { queryUserBindAccountCommandResponse.items = n.getCollectionOfObjectValues<QueryUserBindAccountCommandResponseItem>(createQueryUserBindAccountCommandResponseItemFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryUserBindAccountCommandResponseItem(queryUserBindAccountCommandResponseItem: Partial<QueryUserBindAccountCommandResponseItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bindId": n => { queryUserBindAccountCommandResponseItem.bindId = n.getNumberValue(); },
        "iconUrl": n => { queryUserBindAccountCommandResponseItem.iconUrl = n.getStringValue(); },
        "name": n => { queryUserBindAccountCommandResponseItem.name = n.getStringValue(); },
        "providerId": n => { queryUserBindAccountCommandResponseItem.providerId = n.getGuidValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryUserListCommand(queryUserListCommand: Partial<QueryUserListCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoPagedParamter(queryUserListCommand),
        "isAdmin": n => { queryUserListCommand.isAdmin = n.getBooleanValue(); },
        "search": n => { queryUserListCommand.search = n.getStringValue(); },
        "userId": n => { queryUserListCommand.userId = n.getNumberValue(); },
        "userName": n => { queryUserListCommand.userName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryUserListCommandResponse(queryUserListCommandResponse: Partial<QueryUserListCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoPagedResultOfQueryUserListCommandResponseItem(queryUserListCommandResponse),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryUserListCommandResponseItem(queryUserListCommandResponseItem: Partial<QueryUserListCommandResponseItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditsInfo(queryUserListCommandResponseItem),
        "avatarPath": n => { queryUserListCommandResponseItem.avatarPath = n.getStringValue(); },
        "email": n => { queryUserListCommandResponseItem.email = n.getStringValue(); },
        "id": n => { queryUserListCommandResponseItem.id = n.getNumberValue(); },
        "isAdmin": n => { queryUserListCommandResponseItem.isAdmin = n.getBooleanValue(); },
        "isDisable": n => { queryUserListCommandResponseItem.isDisable = n.getBooleanValue(); },
        "nickName": n => { queryUserListCommandResponseItem.nickName = n.getStringValue(); },
        "phone": n => { queryUserListCommandResponseItem.phone = n.getStringValue(); },
        "userName": n => { queryUserListCommandResponseItem.userName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryUserPluginBaseListCommand(queryUserPluginBaseListCommand: Partial<QueryUserPluginBaseListCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "isOwn": n => { queryUserPluginBaseListCommand.isOwn = n.getBooleanValue(); },
        "name": n => { queryUserPluginBaseListCommand.name = n.getStringValue(); },
        "type": n => { queryUserPluginBaseListCommand.type = n.getEnumValue<PluginType>(PluginTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryWikiBaseListCommand(queryWikiBaseListCommand: Partial<QueryWikiBaseListCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "isOwn": n => { queryWikiBaseListCommand.isOwn = n.getBooleanValue(); },
        "isPublic": n => { queryWikiBaseListCommand.isPublic = n.getBooleanValue(); },
        "isSystem": n => { queryWikiBaseListCommand.isSystem = n.getBooleanValue(); },
        "isUser": n => { queryWikiBaseListCommand.isUser = n.getBooleanValue(); },
        "userId": n => { queryWikiBaseListCommand.userId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryWikiDocumentInfoCommand(queryWikiDocumentInfoCommand: Partial<QueryWikiDocumentInfoCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "documentId": n => { queryWikiDocumentInfoCommand.documentId = n.getNumberValue(); },
        "wikiId": n => { queryWikiDocumentInfoCommand.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryWikiDocumentListCommand(queryWikiDocumentListCommand: Partial<QueryWikiDocumentListCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoPagedParamter(queryWikiDocumentListCommand),
        "excludeFileTypes": n => { queryWikiDocumentListCommand.excludeFileTypes = n.getCollectionOfPrimitiveValues<string>(); },
        "includeFileTypes": n => { queryWikiDocumentListCommand.includeFileTypes = n.getCollectionOfPrimitiveValues<string>(); },
        "query": n => { queryWikiDocumentListCommand.query = n.getStringValue(); },
        "wikiId": n => { queryWikiDocumentListCommand.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryWikiDocumentListItem(queryWikiDocumentListItem: Partial<QueryWikiDocumentListItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditsInfo(queryWikiDocumentListItem),
        "contentType": n => { queryWikiDocumentListItem.contentType = n.getStringValue(); },
        "documentId": n => { queryWikiDocumentListItem.documentId = n.getNumberValue(); },
        "embedding": n => { queryWikiDocumentListItem.embedding = n.getBooleanValue(); },
        "fileName": n => { queryWikiDocumentListItem.fileName = n.getStringValue(); },
        "fileSize": n => { queryWikiDocumentListItem.fileSize = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryWikiDocumentListResponse(queryWikiDocumentListResponse: Partial<QueryWikiDocumentListResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoPagedResultOfQueryWikiDocumentListItem(queryWikiDocumentListResponse),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryWikiDocumentTaskListCommand(queryWikiDocumentTaskListCommand: Partial<QueryWikiDocumentTaskListCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "documentId": n => { queryWikiDocumentTaskListCommand.documentId = n.getNumberValue(); },
        "wikiId": n => { queryWikiDocumentTaskListCommand.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryWikiInfoCommand(queryWikiInfoCommand: Partial<QueryWikiInfoCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "wikiId": n => { queryWikiInfoCommand.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryWikiInfoResponse(queryWikiInfoResponse: Partial<QueryWikiInfoResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditsInfo(queryWikiInfoResponse),
        "description": n => { queryWikiInfoResponse.description = n.getStringValue(); },
        "documentCount": n => { queryWikiInfoResponse.documentCount = n.getNumberValue(); },
        "embeddingBatchSize": n => { queryWikiInfoResponse.embeddingBatchSize = n.getNumberValue(); },
        "embeddingDimensions": n => { queryWikiInfoResponse.embeddingDimensions = n.getNumberValue(); },
        "embeddingModelId": n => { queryWikiInfoResponse.embeddingModelId = n.getNumberValue(); },
        "embeddingModelTokenizer": n => { queryWikiInfoResponse.embeddingModelTokenizer = n.getEnumValue<EmbeddingTokenizer>(EmbeddingTokenizerObject); },
        "isLock": n => { queryWikiInfoResponse.isLock = n.getBooleanValue(); },
        "isPublic": n => { queryWikiInfoResponse.isPublic = n.getBooleanValue(); },
        "isUser": n => { queryWikiInfoResponse.isUser = n.getBooleanValue(); },
        "maxRetries": n => { queryWikiInfoResponse.maxRetries = n.getNumberValue(); },
        "name": n => { queryWikiInfoResponse.name = n.getStringValue(); },
        "wikiId": n => { queryWikiInfoResponse.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryWikiUsersCommand(queryWikiUsersCommand: Partial<QueryWikiUsersCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "wikiId": n => { queryWikiUsersCommand.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryWikiUsersCommandResponse(queryWikiUsersCommandResponse: Partial<QueryWikiUsersCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "users": n => { queryWikiUsersCommandResponse.users = n.getCollectionOfObjectValues<QueryWikiUsersCommandResponseItem>(createQueryWikiUsersCommandResponseItemFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryWikiUsersCommandResponseItem(queryWikiUsersCommandResponseItem: Partial<QueryWikiUsersCommandResponseItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditsInfo(queryWikiUsersCommandResponseItem),
        "avatarPath": n => { queryWikiUsersCommandResponseItem.avatarPath = n.getStringValue(); },
        "email": n => { queryWikiUsersCommandResponseItem.email = n.getStringValue(); },
        "id": n => { queryWikiUsersCommandResponseItem.id = n.getNumberValue(); },
        "nickName": n => { queryWikiUsersCommandResponseItem.nickName = n.getStringValue(); },
        "userName": n => { queryWikiUsersCommandResponseItem.userName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRefreshMcpServerPluginCommand(refreshMcpServerPluginCommand: Partial<RefreshMcpServerPluginCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "pluginId": n => { refreshMcpServerPluginCommand.pluginId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRefreshTokenCommand(refreshTokenCommand: Partial<RefreshTokenCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "refreshToken": n => { refreshTokenCommand.refreshToken = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRefreshTokenCommandResponse(refreshTokenCommandResponse: Partial<RefreshTokenCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accessToken": n => { refreshTokenCommandResponse.accessToken = n.getStringValue(); },
        "expiresIn": n => { refreshTokenCommandResponse.expiresIn = n.getStringValue(); },
        "refreshToken": n => { refreshTokenCommandResponse.refreshToken = n.getStringValue(); },
        "tokenType": n => { refreshTokenCommandResponse.tokenType = n.getStringValue(); },
        "userId": n => { refreshTokenCommandResponse.userId = n.getNumberValue(); },
        "userName": n => { refreshTokenCommandResponse.userName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRegisterUserCommand(registerUserCommand: Partial<RegisterUserCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "email": n => { registerUserCommand.email = n.getStringValue(); },
        "nickName": n => { registerUserCommand.nickName = n.getStringValue(); },
        "password": n => { registerUserCommand.password = n.getStringValue(); },
        "phone": n => { registerUserCommand.phone = n.getStringValue(); },
        "userName": n => { registerUserCommand.userName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRemoveWikiUserCommand(removeWikiUserCommand: Partial<RemoveWikiUserCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "userIds": n => { removeWikiUserCommand.userIds = n.getCollectionOfPrimitiveValues<number>(); },
        "wikiId": n => { removeWikiUserCommand.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoResetUserPasswordCommand(resetUserPasswordCommand: Partial<ResetUserPasswordCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "userId": n => { resetUserPasswordCommand.userId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchResult(searchResult: Partial<SearchResult> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "noResult": n => { searchResult.noResult = n.getBooleanValue(); },
        "query": n => { searchResult.query = n.getStringValue(); },
        "results": n => { searchResult.results = n.getCollectionOfObjectValues<Citation>(createCitationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchWikiDocumentTextCommand(searchWikiDocumentTextCommand: Partial<SearchWikiDocumentTextCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "documentId": n => { searchWikiDocumentTextCommand.documentId = n.getNumberValue(); },
        "query": n => { searchWikiDocumentTextCommand.query = n.getStringValue(); },
        "wikiId": n => { searchWikiDocumentTextCommand.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchWikiDocumentTextCommandResponse(searchWikiDocumentTextCommandResponse: Partial<SearchWikiDocumentTextCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "searchResult": n => { searchWikiDocumentTextCommandResponse.searchResult = n.getObjectValue<SearchResult>(createSearchResultFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSetSystemSettingsCommand(setSystemSettingsCommand: Partial<SetSystemSettingsCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "settings": n => { setSystemSettingsCommand.settings = n.getObjectValue<KeyValueString>(createKeyValueStringFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSetUserAdminCommand(setUserAdminCommand: Partial<SetUserAdminCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "isAdmin": n => { setUserAdminCommand.isAdmin = n.getBooleanValue(); },
        "userIds": n => { setUserAdminCommand.userIds = n.getCollectionOfPrimitiveValues<number>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSimpleInt(simpleInt: Partial<SimpleInt> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoSimpleOfInt32(simpleInt),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSimpleOfInt32(simpleOfInt32: Partial<SimpleOfInt32> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "value": n => { simpleOfInt32.value = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSimpleOfString(simpleOfString: Partial<SimpleOfString> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "value": n => { simpleOfString.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSimpleString(simpleString: Partial<SimpleString> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoSimpleOfString(simpleString),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUnbindUserAccountCommand(unbindUserAccountCommand: Partial<UnbindUserAccountCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bindId": n => { unbindUserAccountCommand.bindId = n.getNumberValue(); },
        "userId": n => { unbindUserAccountCommand.userId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateMcpServerPluginCommand(updateMcpServerPluginCommand: Partial<UpdateMcpServerPluginCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoMcpServerPluginConnectionOptions(updateMcpServerPluginCommand),
        "isPublic": n => { updateMcpServerPluginCommand.isPublic = n.getBooleanValue(); },
        "isSystem": n => { updateMcpServerPluginCommand.isSystem = n.getBooleanValue(); },
        "pluginId": n => { updateMcpServerPluginCommand.pluginId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateOAuthConnectionCommand(updateOAuthConnectionCommand: Partial<UpdateOAuthConnectionCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCreateOAuthConnectionCommand(updateOAuthConnectionCommand),
        "oAuthConnectionId": n => { updateOAuthConnectionCommand.oAuthConnectionId = n.getGuidValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateOpenApiPluginCommand(updateOpenApiPluginCommand: Partial<UpdateOpenApiPluginCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { updateOpenApiPluginCommand.description = n.getStringValue(); },
        "fileId": n => { updateOpenApiPluginCommand.fileId = n.getNumberValue(); },
        "fileName": n => { updateOpenApiPluginCommand.fileName = n.getStringValue(); },
        "header": n => { updateOpenApiPluginCommand.header = n.getCollectionOfObjectValues<KeyValueString>(createKeyValueStringFromDiscriminatorValue); },
        "isPublic": n => { updateOpenApiPluginCommand.isPublic = n.getBooleanValue(); },
        "isSystem": n => { updateOpenApiPluginCommand.isSystem = n.getBooleanValue(); },
        "name": n => { updateOpenApiPluginCommand.name = n.getStringValue(); },
        "pluginId": n => { updateOpenApiPluginCommand.pluginId = n.getNumberValue(); },
        "query": n => { updateOpenApiPluginCommand.query = n.getCollectionOfObjectValues<KeyValueString>(createKeyValueStringFromDiscriminatorValue); },
        "serverUrl": n => { updateOpenApiPluginCommand.serverUrl = n.getStringValue(); },
        "title": n => { updateOpenApiPluginCommand.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdatePromptClassCommand(updatePromptClassCommand: Partial<UpdatePromptClassCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { updatePromptClassCommand.id = n.getNumberValue(); },
        "name": n => { updatePromptClassCommand.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdatePromptCommand(updatePromptCommand: Partial<UpdatePromptCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "content": n => { updatePromptCommand.content = n.getStringValue(); },
        "description": n => { updatePromptCommand.description = n.getStringValue(); },
        "isPublic": n => { updatePromptCommand.isPublic = n.getBooleanValue(); },
        "name": n => { updatePromptCommand.name = n.getStringValue(); },
        "promptClassId": n => { updatePromptCommand.promptClassId = n.getNumberValue(); },
        "promptId": n => { updatePromptCommand.promptId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateSystemAiModelRequest(updateSystemAiModelRequest: Partial<UpdateSystemAiModelRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAiEndpoint(updateSystemAiModelRequest),
        "aiModelId": n => { updateSystemAiModelRequest.aiModelId = n.getNumberValue(); },
        "isPublic": n => { updateSystemAiModelRequest.isPublic = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateUserAiModelRequest(updateUserAiModelRequest: Partial<UpdateUserAiModelRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAiEndpoint(updateUserAiModelRequest),
        "aiModelId": n => { updateUserAiModelRequest.aiModelId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateUserInfoCommand(updateUserInfoCommand: Partial<UpdateUserInfoCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "email": n => { updateUserInfoCommand.email = n.getStringValue(); },
        "nickName": n => { updateUserInfoCommand.nickName = n.getStringValue(); },
        "phone": n => { updateUserInfoCommand.phone = n.getStringValue(); },
        "userId": n => { updateUserInfoCommand.userId = n.getNumberValue(); },
        "userName": n => { updateUserInfoCommand.userName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateUserPasswordCommand(updateUserPasswordCommand: Partial<UpdateUserPasswordCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "password": n => { updateUserPasswordCommand.password = n.getStringValue(); },
        "userId": n => { updateUserPasswordCommand.userId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateWikiConfigCommand(updateWikiConfigCommand: Partial<UpdateWikiConfigCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoWikiConfig(updateWikiConfigCommand),
        "wikiId": n => { updateWikiConfigCommand.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateWikiInfoCommand(updateWikiInfoCommand: Partial<UpdateWikiInfoCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { updateWikiInfoCommand.description = n.getStringValue(); },
        "isPublic": n => { updateWikiInfoCommand.isPublic = n.getBooleanValue(); },
        "isSystem": n => { updateWikiInfoCommand.isSystem = n.getBooleanValue(); },
        "name": n => { updateWikiInfoCommand.name = n.getStringValue(); },
        "wikiId": n => { updateWikiInfoCommand.wikiId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUploadtUserAvatarCommand(uploadtUserAvatarCommand: Partial<UploadtUserAvatarCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "fileId": n => { uploadtUserAvatarCommand.fileId = n.getNumberValue(); },
        "userId": n => { uploadtUserAvatarCommand.userId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserStateInfo(userStateInfo: Partial<UserStateInfo> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "avatarPath": n => { userStateInfo.avatarPath = n.getStringValue(); },
        "email": n => { userStateInfo.email = n.getStringValue(); },
        "isAdmin": n => { userStateInfo.isAdmin = n.getBooleanValue(); },
        "isDeleted": n => { userStateInfo.isDeleted = n.getBooleanValue(); },
        "isDisable": n => { userStateInfo.isDisable = n.getBooleanValue(); },
        "nickName": n => { userStateInfo.nickName = n.getStringValue(); },
        "phone": n => { userStateInfo.phone = n.getStringValue(); },
        "userId": n => { userStateInfo.userId = n.getNumberValue(); },
        "userName": n => { userStateInfo.userName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWikiConfig(wikiConfig: Partial<WikiConfig> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "embeddingBatchSize": n => { wikiConfig.embeddingBatchSize = n.getNumberValue(); },
        "embeddingDimensions": n => { wikiConfig.embeddingDimensions = n.getNumberValue(); },
        "embeddingModelId": n => { wikiConfig.embeddingModelId = n.getNumberValue(); },
        "embeddingModelTokenizer": n => { wikiConfig.embeddingModelTokenizer = n.getEnumValue<EmbeddingTokenizer>(EmbeddingTokenizerObject); },
        "maxRetries": n => { wikiConfig.maxRetries = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWikiDocumentTaskItem(wikiDocumentTaskItem: Partial<WikiDocumentTaskItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditsInfo(wikiDocumentTaskItem),
        "contentType": n => { wikiDocumentTaskItem.contentType = n.getStringValue(); },
        "documentId": n => { wikiDocumentTaskItem.documentId = n.getNumberValue(); },
        "fileId": n => { wikiDocumentTaskItem.fileId = n.getNumberValue(); },
        "fileName": n => { wikiDocumentTaskItem.fileName = n.getStringValue(); },
        "fileSize": n => { wikiDocumentTaskItem.fileSize = n.getStringValue(); },
        "id": n => { wikiDocumentTaskItem.id = n.getNumberValue(); },
        "maxTokensPerParagraph": n => { wikiDocumentTaskItem.maxTokensPerParagraph = n.getNumberValue(); },
        "message": n => { wikiDocumentTaskItem.message = n.getStringValue(); },
        "overlappingTokens": n => { wikiDocumentTaskItem.overlappingTokens = n.getNumberValue(); },
        "state": n => { wikiDocumentTaskItem.state = n.getEnumValue<FileEmbeddingState>(FileEmbeddingStateObject); },
        "taskTag": n => { wikiDocumentTaskItem.taskTag = n.getStringValue(); },
        "tokenizer": n => { wikiDocumentTaskItem.tokenizer = n.getStringValue(); },
        "wikiId": n => { wikiDocumentTaskItem.wikiId = n.getNumberValue(); },
    }
}
/**
 * 禁用启用用户.
 */
export interface DisableUserCommand extends Parsable {
    /**
     * 是否禁用.
     */
    isDisable?: boolean | null;
    /**
     * 用户ID.
     */
    userIds?: number[] | null;
}
/**
 * 向量化文档.
 */
export interface EmbeddingDocumentCommand extends Parsable {
    /**
     * 文档 id.
     */
    documentId?: number | null;
    /**
     * 每个段落最大 token 数量.
     */
    maxTokensPerParagraph?: number | null;
    /**
     * 块之间重叠令牌的数量.
     */
    overlappingTokens?: number | null;
    /**
     * 文本分割方法，暂时不支持使用.
     */
    splitMethod?: string | null;
    /**
     * 统计 tokens 数量的算法 支持: "p50k", "cl100k", "o200k".
     */
    tokenizer?: EmbeddingTokenizer | null;
    /**
     * 知识库 id.
     */
    wikiId?: number | null;
}
export type EmbeddingTokenizer = (typeof EmbeddingTokenizerObject)[keyof typeof EmbeddingTokenizerObject];
/**
 * 空数据.
 */
export interface EmptyCommandResponse extends Parsable {
}
export type FileEmbeddingState = (typeof FileEmbeddingStateObject)[keyof typeof FileEmbeddingStateObject];
export type FileVisibility = (typeof FileVisibilityObject)[keyof typeof FileVisibilityObject];
/**
 * 导入 mcp 服务.
 */
export interface ImportMcpServerPluginCommand extends McpServerPluginConnectionOptions, Parsable {
    /**
     * 是否公开，系统插件 == true 时才能设置.
     */
    isPublic?: boolean | null;
    /**
     * 系统插件.
     */
    isSystem?: boolean | null;
}
/**
 * 导入 openapi 文件，支持 json、yaml.
 */
export interface ImportOpenApiPluginCommand extends Parsable {
    /**
     * 描述.
     */
    description?: string | null;
    /**
     * 上传的 id.
     */
    fileId?: number | null;
    /**
     * 文件名称.
     */
    fileName?: string | null;
    /**
     * 是否公开，系统插件 == true 时才能设置.
     */
    isPublic?: boolean | null;
    /**
     * 系统插件.
     */
    isSystem?: boolean | null;
    /**
     * 插件名称.
     */
    name?: string | null;
    /**
     * 插件标题，可中文.
     */
    title?: string | null;
}
/**
 * 邀请知识库协作成员，可以管理知识库文档等.
 */
export interface InviteWikiUserCommand extends Parsable {
    /**
     * 被邀请用户.
     */
    userName?: string | null;
    /**
     * 知识库 id.
     */
    wikiId?: number | null;
}
/**
 * kv.
 */
export interface KeyValueOfStringAndString extends Parsable {
    /**
     * Key.
     */
    key?: string | null;
    /**
     * Value.
     */
    value?: string | null;
}
export interface KeyValuePairOfStringAndListOfString extends Parsable {
    /**
     * The key property
     */
    key?: string | null;
    /**
     * The value property
     */
    value?: string[] | null;
}
/**
 * KeyValueString.
 */
export interface KeyValueString extends KeyValueOfStringAndString, Parsable {
}
/**
 * 登录.
 */
export interface LoginCommand extends Parsable {
    /**
     * 密码，使用 RSA 公钥加密.
     */
    password?: string | null;
    /**
     * 用户名或邮箱.
     */
    userName?: string | null;
}
/**
 * 登录结果.
 */
export interface LoginCommandResponse extends Parsable {
    /**
     * 访问令牌.
     */
    accessToken?: string | null;
    /**
     * 过期时间（秒）.
     */
    expiresIn?: string | null;
    /**
     * 刷新令牌.
     */
    refreshToken?: string | null;
    /**
     * 令牌类型.
     */
    tokenType?: string | null;
    /**
     * 用户ID.
     */
    userId?: number | null;
    /**
     * 用户名.
     */
    userName?: string | null;
}
/**
 * MCP 服务器连接配置.
 */
export interface McpServerPluginConnectionOptions extends Parsable {
    /**
     * 描述.
     */
    description?: string | null;
    /**
     * Header 头部信息.
     */
    header?: KeyValueString[] | null;
    /**
     * 插件名称，只能纯字母，用于给 AI 使用.
     */
    name?: string | null;
    /**
     * Query 字典.
     */
    query?: KeyValueString[] | null;
    /**
     * MCP Service 地址.
     */
    serverUrl?: string | null;
    /**
     * 插件标题，可中文.
     */
    title?: string | null;
}
/**
 * ModelAbilities.
 */
export interface ModelAbilities extends Parsable {
    /**
     * Whether model supports file upload
     */
    files?: boolean | null;
    /**
     * Whether model supports function call
     */
    functionCall?: boolean | null;
    /**
     * Whether model supports image output
     */
    imageOutput?: boolean | null;
    /**
     * Whether model supports vision
     */
    vision?: boolean | null;
}
/**
 * 使用 OAuth 绑定已存在的账号.
 */
export interface OAuthBindExistAccountCommand extends Parsable {
    /**
     * id.
     */
    tempOAuthBindId?: Guid | null;
}
/**
 * 使用 OAuth 登录，用于第三方登录回调后触发接口.
 */
export interface OAuthLoginCommand extends Parsable {
    /**
     * Code.
     */
    code?: string | null;
    /**
     * id.
     */
    oAuthId?: Guid | null;
}
/**
 * 响应.
 */
export interface OAuthLoginCommandResponse extends Parsable {
    /**
     * 如果已经绑定用户.
     */
    isBindUser?: boolean | null;
    /**
     * IsBindUser == true 时，返回用户登录信息.
     */
    loginCommandResponse?: LoginCommandResponse | null;
    /**
     * 用户在第三方登录的名字.
     */
    name?: string | null;
    /**
     * id.
     */
    oAuthId?: Guid | null;
    /**
     * 如果此 id 没有绑定过用户，则返回此 id，使用此 id 绑定或注册用户.
     */
    tempOAuthBindId?: Guid | null;
}
export type OAuthPrivider = (typeof OAuthPrividerObject)[keyof typeof OAuthPrividerObject];
/**
 * 第三方账号没有绑定记录时，使用第三方账号一键注册.
 */
export interface OAuthRegisterCommand extends Parsable {
    /**
     * 登录绑定 OAuth 用户 ID.
     */
    tempOAuthBindId?: Guid | null;
}
/**
 * 分页参数.
 */
export interface PagedParamter extends Parsable {
    /**
     * 页码，从1开始.
     */
    pageNo?: number | null;
    /**
     * 每页大小.
     */
    pageSize?: number | null;
}
/**
 * 分页结果.
 */
export interface PagedResultOfQueryUserListCommandResponseItem extends PagedParamter, Parsable {
    /**
     * 项目集合.
     */
    items?: QueryUserListCommandResponseItem[] | null;
    /**
     * 总数.
     */
    total?: number | null;
}
/**
 * 分页结果.
 */
export interface PagedResultOfQueryWikiDocumentListItem extends PagedParamter, Parsable {
    /**
     * 项目集合.
     */
    items?: QueryWikiDocumentListItem[] | null;
    /**
     * 总数.
     */
    total?: number | null;
}
/**
 * 插件.
 */
export interface PluginBaseInfoItem extends AuditsInfo, Parsable {
    /**
     * 注释.
     */
    description?: string | null;
    /**
     * 是否公开.
     */
    isPublic?: boolean | null;
    /**
     * 系统插件.
     */
    isSystem?: boolean | null;
    /**
     * 文件id.
     */
    openapiFileId?: number | null;
    /**
     * 文件名称.
     */
    openapiFileName?: string | null;
    /**
     * id.
     */
    pluginId?: number | null;
    /**
     * 插件名称.
     */
    pluginName?: string | null;
    /**
     * 服务器地址.
     */
    server?: string | null;
    /**
     * 插件标题.
     */
    title?: string | null;
    /**
     * system|mcp|openapi.
     */
    type?: PluginType | null;
}
export type PluginType = (typeof PluginTypeObject)[keyof typeof PluginTypeObject];
export interface PreloadWikiDocumentResponse extends Parsable {
    /**
     * 签名过期时间，当 IsExist = true 时字段为空.
     */
    expiration?: string | null;
    /**
     * 文件ID.
     */
    fileId?: number | null;
    /**
     * 文件已存在,如果文件已存在则直接使用 FileId，无需再次上传.
     */
    isExist?: boolean | null;
    /**
     * 预签名上传地址，当 IsExist = true 时字段为空.
     */
    uploadUrl?: string | null;
    /**
     * 文件可见性.
     */
    visibility?: FileVisibility | null;
}
/**
 * 预上传文件.
 */
export interface PreUploadFileCommandResponse extends Parsable {
    /**
     * 签名过期时间，当 IsExist = true 时字段为空.
     */
    expiration?: string | null;
    /**
     * 文件ID.
     */
    fileId?: number | null;
    /**
     * 文件已存在,如果文件已存在则直接使用 FileId，无需再次上传.
     */
    isExist?: boolean | null;
    /**
     * 预签名上传地址，当 IsExist = true 时字段为空.
     */
    uploadUrl?: string | null;
    /**
     * 文件可见性.
     */
    visibility?: FileVisibility | null;
}
/**
 * 上传图像，例如头像、公有图像等，文件公开访问，都根路径下.
 */
export interface PreUploadImageCommand extends Parsable {
    /**
     * 文件类型.
     */
    contentType?: string | null;
    /**
     * 文件名称.
     */
    fileName?: string | null;
    /**
     * 文件大小.
     */
    fileSize?: number | null;
    /**
     * 文件 MD5.
     */
    mD5?: string | null;
}
/**
 * 预上传 openapi 文件，支持 json、yaml.
 */
export interface PreUploadOpenApiFilePluginCommand extends Parsable {
    /**
     * 文件类型.
     */
    contentType?: string | null;
    /**
     * 文件名称.
     */
    fileName?: string | null;
    /**
     * 文件大小.
     */
    fileSize?: number | null;
    /**
     * 文件 MD5.
     */
    mD5?: string | null;
}
/**
 * 导入 openapi 文件插件.
 */
export interface PreUploadOpenApiFilePluginCommandResponse extends Parsable {
    /**
     * 签名过期时间，当 IsExist = true 时字段为空.
     */
    expiration?: string | null;
    /**
     * 文件ID.
     */
    fileId?: number | null;
    /**
     * 文件已存在,如果文件已存在则直接使用 FileId，无需再次上传.
     */
    isExist?: boolean | null;
    /**
     * 预签名上传地址，当 IsExist = true 时字段为空.
     */
    uploadUrl?: string | null;
    /**
     * 文件可见性.
     */
    visibility?: FileVisibility | null;
}
/**
 * 预上传知识库文件.
 */
export interface PreUploadWikiDocumentCommand extends Parsable {
    /**
     * 文件类型.
     */
    contentType?: string | null;
    /**
     * 文件名称.
     */
    fileName?: string | null;
    /**
     * 文件大小.
     */
    fileSize?: number | null;
    /**
     * 文件 MD5.
     */
    mD5?: string | null;
    /**
     * 知识库 id.            
     */
    wikiId?: number | null;
}
/**
 * 进行对话，对话时，History 每次做增量传递.
 */
export interface ProcessingAiAssistantChatCommand extends AIAssistantChatObject, Parsable {
    /**
     * 对话 id，id 为空时自动新建.
     */
    chatId?: Guid | null;
    /**
     * 用户的提问.
     */
    content?: string | null;
    /**
     * 当前用户标识.
     */
    userId?: number | null;
}
/**
 * 查询提示词详细信息.
 */
export interface PromptItem extends AuditsInfo, Parsable {
    /**
     * 助手设定,markdown.
     */
    content?: string | null;
    /**
     * 描述.
     */
    description?: string | null;
    /**
     * id.
     */
    id?: number | null;
    /**
     * The isPublic property
     */
    isPublic?: boolean | null;
    /**
     * 名称.
     */
    name?: string | null;
}
/**
 * 对话记录结果.
 */
export interface QueryAiAssistantChatHistoryCommandResponse extends AIAssistantChatContext, Parsable {
    /**
     * id.
     */
    chatId?: Guid | null;
    /**
     * 创建时间.
     */
    createTime?: string | null;
    /**
     * 最后更新时间.
     */
    updateTime?: string | null;
}
/**
 * 话题列表.
 */
export interface QueryAiAssistantChatTopicListCommandResponse extends Parsable {
    /**
     * The items property
     */
    items?: AiAssistantChatTopic[] | null;
}
/**
 * Ai 模型列表.
 */
export interface QueryAiModelListCommandResponse extends Parsable {
    /**
     * AI 模型列表.
     */
    aiModels?: AiNotKeyEndpoint[] | null;
}
/**
 * AI 模型数量.
 */
export interface QueryAiModelProviderCount extends Parsable {
    /**
     * 模型数量.
     */
    count?: number | null;
    /**
     * 供应商名称.
     */
    provider?: AiProvider | null;
}
/**
 * AI 模型供应商和已添加的ai模型数量列表.
 */
export interface QueryAiModelProviderListResponse extends Parsable {
    /**
     * AI 服务商列表，{ai服务提供商,模型数量}.
     */
    providers?: QueryAiModelProviderCount[] | null;
}
/**
 * QueryAllOAuthPrividerCommandResponse。
 */
export interface QueryAllOAuthPrividerCommandResponse extends Parsable {
    /**
     * 集合.
     */
    items?: QueryAllOAuthPrividerCommandResponseItem[] | null;
}
/**
 * QueryAllOAuthPrividerCommandResponseItem.
 */
export interface QueryAllOAuthPrividerCommandResponseItem extends Parsable {
    /**
     * 提供商图标地址
     */
    iconUrl?: string | null;
    /**
     * 提供商名称
     */
    name?: string | null;
    /**
     * id.
     */
    oAuthId?: Guid | null;
    /**
     * 提供商标识
     */
    provider?: string | null;
    /**
     * 授权地址.
     */
    redirectUrl?: string | null;
}
export interface QueryAllOAuthPrividerDetailCommandResponse extends Parsable {
    /**
     * 列表.
     */
    items?: QueryAllOAuthPrividerDetailCommandResponseItem[] | null;
}
export interface QueryAllOAuthPrividerDetailCommandResponseItem extends AuditsInfo, Parsable {
    /**
     * 回调地址.
     */
    authorizeUrl?: string | null;
    /**
     * 提供商图标地址
     */
    iconUrl?: string | null;
    /**
     * id.
     */
    id?: Guid | null;
    /**
     * The key property
     */
    key?: string | null;
    /**
     * 提供商名称
     */
    name?: string | null;
    /**
     * 提供商标识
     */
    provider?: string | null;
    /**
     * 发现端口
     */
    wellKnown?: string | null;
}
export interface QueryePromptClassCommandResponse extends Parsable {
    /**
     * The items property
     */
    items?: QueryePromptClassCommandResponseItem[] | null;
}
export interface QueryePromptClassCommandResponseItem extends Parsable {
    /**
     * id.
     */
    id?: number | null;
    /**
     * 名称.
     */
    name?: string | null;
}
/**
 * QueryPluginListCommandResponse.
 */
export interface QueryPluginBaseListCommandResponse extends Parsable {
    /**
     * 列表.
     */
    items?: PluginBaseInfoItem[] | null;
}
/**
 * 查询该插件的详细信息.
 */
export interface QueryPluginDetailCommand extends Parsable {
    /**
     * 插件 id.
     */
    pluginId?: number | null;
}
export interface QueryPluginDetailCommandResponse extends AuditsInfo, Parsable {
    /**
     * 注释.
     */
    description?: string | null;
    /**
     * Header 头部信息.
     */
    header?: KeyValueString[] | null;
    /**
     * 是否公开.
     */
    isPublic?: boolean | null;
    /**
     * 文件id.
     */
    openapiFileId?: number | null;
    /**
     * 文件名称.
     */
    openapiFileName?: string | null;
    /**
     * id.
     */
    pluginId?: number | null;
    /**
     * 插件名称.
     */
    pluginName?: string | null;
    /**
     * Query 字典.
     */
    query?: KeyValueString[] | null;
    /**
     * 服务器地址.
     */
    server?: string | null;
    /**
     * 插件标题.
     */
    title?: string | null;
    /**
     * system|mcp|openapi.
     */
    type?: PluginType | null;
}
/**
 * 获取插件的函数列表.
 */
export interface QueryPluginFunctionsListCommand extends Parsable {
    /**
     * 插件 id.
     */
    pluginId?: number | null;
}
/**
 * 函数列表.
 */
export interface QueryPluginFunctionsListCommandResponse extends Parsable {
    /**
     * 函数列表.
     */
    items?: QueryPluginFunctionsListCommandResponseItem[] | null;
}
/**
 * 函数.
 */
export interface QueryPluginFunctionsListCommandResponseItem extends Parsable {
    /**
     * id.
     */
    functionId?: number | null;
    /**
     * 函数名称.
     */
    name?: string | null;
    /**
     * api路径.
     */
    path?: string | null;
    /**
     * 插件路径.
     */
    pluginId?: number | null;
    /**
     * 描述.
     */
    summary?: string | null;
}
/**
 * 查询能看到的提示词列表.
 */
export interface QueryPromptListCommand extends Parsable {
    /**
     * 筛选分类.
     */
    classId?: number | null;
    /**
     * 自己创建的.
     */
    isOwn?: boolean | null;
    /**
     * 筛选名称.
     */
    name?: string | null;
    /**
     * 用户 id.
     */
    userId?: number | null;
}
/**
 * 提示词列表.
 */
export interface QueryPromptListCommandResponse extends Parsable {
    /**
     * 列表.
     */
    items?: PromptItem[] | null;
}
/**
 * 查询公开访问的系统AI模型列表.
 */
export interface QueryPublicSystemAiModelListCommand extends Parsable {
    /**
     * Ai 模型类型.
     */
    aiModelType?: AiModelType | null;
    /**
     * AI 模型类型.
     */
    provider?: AiProvider | null;
}
/**
 * Ai 模型列表.
 */
export interface QueryPublicSystemAiModelListCommandResponse extends Parsable {
    /**
     * AI 模型列表.
     */
    aiModels?: AiNotKeyEndpoint[] | null;
}
/**
 * 服务器信息.
 */
export interface QueryServerInfoCommandResponse extends Parsable {
    /**
     * 禁止注册.
     */
    disableRegister?: boolean | null;
    /**
     * 最大可上传文件大小，单位为字节.
     */
    maxUploadFileSize?: number | null;
    /**
     * 公共存储地址，静态资源时可直接访问.
     */
    publicStoreUrl?: string | null;
    /**
     * RSA 公钥，用于加密密码等信息传输到服务器.
     */
    rsaPublic?: string | null;
    /**
     * 系统访问地址.
     */
    serviceUrl?: string | null;
}
/**
 * 系统视图，查询系统能够看到的模型列表.
 */
export interface QuerySystemAiModelListCommand extends Parsable {
    /**
     * Ai 模型类型.
     */
    aiModelType?: AiModelType | null;
    /**
     * AI 模型类型.
     */
    provider?: AiProvider | null;
}
export interface QuerySystemAiModelListCommandResponse extends Parsable {
    /**
     * AI 模型列表.
     */
    aiModels?: QuerySystemAiModelListCommandResponseItem[] | null;
}
export interface QuerySystemAiModelListCommandResponseItem extends AiNotKeyEndpoint, Parsable {
    /**
     * The isPublic property
     */
    isPublic?: boolean | null;
    /**
     * The isSystem property
     */
    isSystem?: boolean | null;
}
/**
 * 获取系统插件基础信息列表.
 */
export interface QuerySystemPluginBaseListCommand extends Parsable {
    /**
     * 名称搜索.
     */
    name?: string | null;
    /**
     * 筛选类型.
     */
    type?: PluginType | null;
}
/**
 * QuerySystemSettingsCommandResponse.
 */
export interface QuerySystemSettingsCommandResponse extends Parsable {
    /**
     * 列表.
     */
    items?: QuerySystemSettingsCommandResponseItem[] | null;
}
/**
 * QuerySystemSettingsCommandResponseItem.
 */
export interface QuerySystemSettingsCommandResponseItem extends Parsable {
    /**
     * 描述.
     */
    description?: string | null;
    /**
     * id.
     */
    id?: number | null;
    /**
     * 配置名称.
     */
    key?: string | null;
    /**
     * 配置值.
     */
    value?: string | null;
}
export interface QueryUserAiModelListRequest extends Parsable {
    /**
     * Ai 模型类型.
     */
    aiModelType?: AiModelType | null;
    /**
     * AI 模型类型.
     */
    provider?: AiProvider | null;
}
export interface QueryUserBindAccountCommandResponse extends Parsable {
    /**
     * The items property
     */
    items?: QueryUserBindAccountCommandResponseItem[] | null;
}
export interface QueryUserBindAccountCommandResponseItem extends Parsable {
    /**
     * The bindId property
     */
    bindId?: number | null;
    /**
     * The iconUrl property
     */
    iconUrl?: string | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The providerId property
     */
    providerId?: Guid | null;
}
/**
 * 分页查询用户列表.
 */
export interface QueryUserListCommand extends PagedParamter, Parsable {
    /**
     * 只看管理员.
     */
    isAdmin?: boolean | null;
    /**
     * 搜索参数.
     */
    search?: string | null;
    /**
     * 查询指定用户.
     */
    userId?: number | null;
    /**
     * 根据用户名筛选.
     */
    userName?: string | null;
}
/**
 * QueryUserListCommandResponse.
 */
export interface QueryUserListCommandResponse extends PagedResultOfQueryUserListCommandResponseItem, Parsable {
}
/**
 * QueryUserListCommandResponseItem.
 */
export interface QueryUserListCommandResponseItem extends AuditsInfo, Parsable {
    /**
     * 头像路径.
     */
    avatarPath?: string | null;
    /**
     * 邮箱.
     */
    email?: string | null;
    /**
     * 用户ID.
     */
    id?: number | null;
    /**
     * 是否管理员.
     */
    isAdmin?: boolean | null;
    /**
     * 禁用.
     */
    isDisable?: boolean | null;
    /**
     * 昵称.
     */
    nickName?: string | null;
    /**
     * 手机号.
     */
    phone?: string | null;
    /**
     * 用户名.
     */
    userName?: string | null;
}
/**
 * 获取用户插件基础信息列表.
 */
export interface QueryUserPluginBaseListCommand extends Parsable {
    /**
     * 只查询该用户创建的插件，不设置时查询所有用户可用插件.
     */
    isOwn?: boolean | null;
    /**
     * 名称搜索.
     */
    name?: string | null;
    /**
     * 筛选类型.
     */
    type?: PluginType | null;
}
/**
 * 查询当前用户可以看到的所有知识库.
 */
export interface QueryWikiBaseListCommand extends Parsable {
    /**
     * 只查询该用户创建的知识库.
     */
    isOwn?: boolean | null;
    /**
     * 只查询公开的知识库.
     */
    isPublic?: boolean | null;
    /**
     * 是否系统知识库.
     */
    isSystem?: boolean | null;
    /**
     * 只查询已加入的知识库.
     */
    isUser?: boolean | null;
    /**
     * 用户id.
     */
    userId?: number | null;
}
/**
 * 查询单个文档信息.
 */
export interface QueryWikiDocumentInfoCommand extends Parsable {
    /**
     * 文档 id.
     */
    documentId?: number | null;
    /**
     * 知识库 id.
     */
    wikiId?: number | null;
}
/**
 * 查询 wiki 文件列表.
 */
export interface QueryWikiDocumentListCommand extends PagedParamter, Parsable {
    /**
     * 排除文件类型，如 .md、.docx 等.
     */
    excludeFileTypes?: string[] | null;
    /**
     * 包括文件类型，如 .md、.docx 等.
     */
    includeFileTypes?: string[] | null;
    /**
     * 筛选文件名称.
     */
    query?: string | null;
    /**
     * 知识库 id.
     */
    wikiId?: number | null;
}
export interface QueryWikiDocumentListItem extends AuditsInfo, Parsable {
    /**
     * The contentType property
     */
    contentType?: string | null;
    /**
     * The documentId property
     */
    documentId?: number | null;
    /**
     * 是否有向量化内容.
     */
    embedding?: boolean | null;
    /**
     * The fileName property
     */
    fileName?: string | null;
    /**
     * The fileSize property
     */
    fileSize?: number | null;
}
export interface QueryWikiDocumentListResponse extends PagedResultOfQueryWikiDocumentListItem, Parsable {
}
/**
 * 查询文档任务列表.
 */
export interface QueryWikiDocumentTaskListCommand extends Parsable {
    /**
     * 文档id.
     */
    documentId?: number | null;
    /**
     * 知识库id.
     */
    wikiId?: number | null;
}
/**
 * 获取知识库简单信息.
 */
export interface QueryWikiInfoCommand extends Parsable {
    /**
     * 知识库 id.
     */
    wikiId?: number | null;
}
/**
 * 知识库信息.
 */
export interface QueryWikiInfoResponse extends AuditsInfo, Parsable {
    /**
     * 知识库描述.
     */
    description?: string | null;
    /**
     * 文档数量.
     */
    documentCount?: number | null;
    /**
     * 批处理大小.
     */
    embeddingBatchSize?: number | null;
    /**
     * 维度，跟模型有关.
     */
    embeddingDimensions?: number | null;
    /**
     * 指定进行文档向量化的模型.
     */
    embeddingModelId?: number | null;
    /**
     * 分词器.
     */
    embeddingModelTokenizer?: EmbeddingTokenizer | null;
    /**
     * 锁定配置，锁定后不能再修改.
     */
    isLock?: boolean | null;
    /**
     * 公开使用，所有人不需要加入团队即可使用此知识库.
     */
    isPublic?: boolean | null;
    /**
     * 是否该知识库成员.
     */
    isUser?: boolean | null;
    /**
     * 最大重试次数.
     */
    maxRetries?: number | null;
    /**
     * 知识库名称.
     */
    name?: string | null;
    /**
     * 知识库 id.
     */
    wikiId?: number | null;
}
/**
 * 查询知识库协作成员.
 */
export interface QueryWikiUsersCommand extends Parsable {
    /**
     * 查询知识库协作的成员列表.
     */
    wikiId?: number | null;
}
export interface QueryWikiUsersCommandResponse extends Parsable {
    /**
     * The users property
     */
    users?: QueryWikiUsersCommandResponseItem[] | null;
}
export interface QueryWikiUsersCommandResponseItem extends AuditsInfo, Parsable {
    /**
     * 头像路径.
     */
    avatarPath?: string | null;
    /**
     * 邮箱.
     */
    email?: string | null;
    /**
     * 用户ID.
     */
    id?: number | null;
    /**
     * 昵称.
     */
    nickName?: string | null;
    /**
     * 用户名.
     */
    userName?: string | null;
}
/**
 * 刷新 MCP 服务器的工具列表.
 */
export interface RefreshMcpServerPluginCommand extends Parsable {
    /**
     * 插件 id.            
     */
    pluginId?: number | null;
}
/**
 * 刷新 token.
 */
export interface RefreshTokenCommand extends Parsable {
    /**
     * 刷新令牌.
     */
    refreshToken?: string | null;
}
export interface RefreshTokenCommandResponse extends Parsable {
    /**
     * 访问令牌.
     */
    accessToken?: string | null;
    /**
     * 过期时间（秒）.
     */
    expiresIn?: string | null;
    /**
     * 刷新令牌.
     */
    refreshToken?: string | null;
    /**
     * 令牌类型.
     */
    tokenType?: string | null;
    /**
     * 用户ID.
     */
    userId?: number | null;
    /**
     * 用户名.
     */
    userName?: string | null;
}
/**
 * 注册用户.
 */
export interface RegisterUserCommand extends Parsable {
    /**
     * 邮箱.
     */
    email?: string | null;
    /**
     * 昵称.
     */
    nickName?: string | null;
    /**
     * 密码，接口请求时，使用 RSA 公钥加密密码.
     */
    password?: string | null;
    /**
     * 手机号.
     */
    phone?: string | null;
    /**
     * 用户名.
     */
    userName?: string | null;
}
/**
 * 移除知识库协作成员.
 */
export interface RemoveWikiUserCommand extends Parsable {
    /**
     * 被邀请用户.
     */
    userIds?: number[] | null;
    /**
     * 知识库 id.
     */
    wikiId?: number | null;
}
/**
 * 重置用户密码.
 */
export interface ResetUserPasswordCommand extends Parsable {
    /**
     * 用户 id.
     */
    userId?: number | null;
}
export interface SearchResult extends Parsable {
    /**
     * Whether the search didn't return any result
     */
    noResult?: boolean | null;
    /**
     * Client question.
     */
    query?: string | null;
    /**
     * List of the relevant sources used to produce the answer.Key = Document IDValue = List of partitions used from the document.
     */
    results?: Citation[] | null;
}
/**
 * 搜索知识库文档分片.
 */
export interface SearchWikiDocumentTextCommand extends Parsable {
    /**
     * 文档id，不设置时搜索整个知识库.
     */
    documentId?: number | null;
    /**
     * 搜索文本，区配文本.
     */
    query?: string | null;
    /**
     * 知识库 id.            
     */
    wikiId?: number | null;
}
export interface SearchWikiDocumentTextCommandResponse extends Parsable {
    /**
     * The searchResult property
     */
    searchResult?: SearchResult | null;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAddSystemAiModelRequest(writer: SerializationWriter, addSystemAiModelRequest: Partial<AddSystemAiModelRequest> | undefined | null = {}) : void {
    if (addSystemAiModelRequest) {
        serializeAiEndpoint(writer, addSystemAiModelRequest)
        writer.writeBooleanValue("isPublic", addSystemAiModelRequest.isPublic);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAddUserAiModelRequest(writer: SerializationWriter, addUserAiModelRequest: Partial<AddUserAiModelRequest> | undefined | null = {}) : void {
    if (addUserAiModelRequest) {
        serializeAiEndpoint(writer, addUserAiModelRequest)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAIAssistantChatContext(writer: SerializationWriter, aIAssistantChatContext: Partial<AIAssistantChatContext> | undefined | null = {}) : void {
    if (aIAssistantChatContext) {
        serializeAIAssistantChatObject(writer, aIAssistantChatContext)
        writer.writeObjectValue("chatHistory", aIAssistantChatContext.chatHistory);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAIAssistantChatObject(writer: SerializationWriter, aIAssistantChatObject: Partial<AIAssistantChatObject> | undefined | null = {}) : void {
    if (aIAssistantChatObject) {
        writer.writeCollectionOfObjectValues<KeyValueString>("executionSettings", aIAssistantChatObject.executionSettings, serializeKeyValueString);
        writer.writeNumberValue("modelId", aIAssistantChatObject.modelId);
        writer.writeCollectionOfPrimitiveValues<number>("pluginIds", aIAssistantChatObject.pluginIds);
        writer.writeStringValue("prompt", aIAssistantChatObject.prompt);
        writer.writeStringValue("title", aIAssistantChatObject.title);
        writer.writeNumberValue("wikiId", aIAssistantChatObject.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAiAssistantChatTopic(writer: SerializationWriter, aiAssistantChatTopic: Partial<AiAssistantChatTopic> | undefined | null = {}) : void {
    if (aiAssistantChatTopic) {
        writer.writeGuidValue("chatId", aiAssistantChatTopic.chatId);
        writer.writeStringValue("createTime", aiAssistantChatTopic.createTime);
        writer.writeStringValue("title", aiAssistantChatTopic.title);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAiEndpoint(writer: SerializationWriter, aiEndpoint: Partial<AiEndpoint> | undefined | null = {}) : void {
    if (aiEndpoint) {
        writer.writeObjectValue<ModelAbilities>("abilities", aiEndpoint.abilities, serializeModelAbilities);
        writer.writeEnumValue<AiModelType>("aiModelType", aiEndpoint.aiModelType);
        writer.writeNumberValue("contextWindowTokens", aiEndpoint.contextWindowTokens);
        writer.writeStringValue("deploymentName", aiEndpoint.deploymentName);
        writer.writeStringValue("endpoint", aiEndpoint.endpoint);
        writer.writeStringValue("key", aiEndpoint.key);
        writer.writeNumberValue("maxDimension", aiEndpoint.maxDimension);
        writer.writeStringValue("name", aiEndpoint.name);
        writer.writeEnumValue<AiProvider>("provider", aiEndpoint.provider);
        writer.writeNumberValue("textOutput", aiEndpoint.textOutput);
        writer.writeStringValue("title", aiEndpoint.title);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAiNotKeyEndpoint(writer: SerializationWriter, aiNotKeyEndpoint: Partial<AiNotKeyEndpoint> | undefined | null = {}) : void {
    if (aiNotKeyEndpoint) {
        writer.writeObjectValue<ModelAbilities>("abilities", aiNotKeyEndpoint.abilities, serializeModelAbilities);
        writer.writeEnumValue<AiModelType>("aiModelType", aiNotKeyEndpoint.aiModelType);
        writer.writeNumberValue("contextWindowTokens", aiNotKeyEndpoint.contextWindowTokens);
        writer.writeStringValue("deploymentName", aiNotKeyEndpoint.deploymentName);
        writer.writeStringValue("endpoint", aiNotKeyEndpoint.endpoint);
        writer.writeNumberValue("id", aiNotKeyEndpoint.id);
        writer.writeNumberValue("maxDimension", aiNotKeyEndpoint.maxDimension);
        writer.writeStringValue("name", aiNotKeyEndpoint.name);
        writer.writeEnumValue<AiProvider>("provider", aiNotKeyEndpoint.provider);
        writer.writeNumberValue("textOutput", aiNotKeyEndpoint.textOutput);
        writer.writeStringValue("title", aiNotKeyEndpoint.title);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditsInfo(writer: SerializationWriter, auditsInfo: Partial<AuditsInfo> | undefined | null = {}) : void {
    if (auditsInfo) {
        writer.writeStringValue("createTime", auditsInfo.createTime);
        writer.writeNumberValue("createUserId", auditsInfo.createUserId);
        writer.writeStringValue("createUserName", auditsInfo.createUserName);
        writer.writeStringValue("updateTime", auditsInfo.updateTime);
        writer.writeNumberValue("updateUserId", auditsInfo.updateUserId);
        writer.writeStringValue("updateUserName", auditsInfo.updateUserName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBusinessExceptionError(writer: SerializationWriter, businessExceptionError: Partial<BusinessExceptionError> | undefined | null = {}) : void {
    if (businessExceptionError) {
        writer.writeCollectionOfPrimitiveValues<string>("errors", businessExceptionError.errors);
        writer.writeStringValue("name", businessExceptionError.name);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBusinessValidationResult(writer: SerializationWriter, businessValidationResult: Partial<BusinessValidationResult> | undefined | null = {}) : void {
    if (businessValidationResult) {
        writer.writeNumberValue("code", businessValidationResult.code);
        writer.writeStringValue("detail", businessValidationResult.detail);
        writer.writeCollectionOfObjectValues<BusinessExceptionError>("errors", businessValidationResult.errors, serializeBusinessExceptionError);
        writer.writeObjectValue<BusinessValidationResult_extensions>("extensions", businessValidationResult.extensions, serializeBusinessValidationResult_extensions);
        writer.writeStringValue("requestId", businessValidationResult.requestId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBusinessValidationResult_extensions(writer: SerializationWriter, businessValidationResult_extensions: Partial<BusinessValidationResult_extensions> | undefined | null = {}) : void {
    if (businessValidationResult_extensions) {
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCancalWikiDocumentTaskCommand(writer: SerializationWriter, cancalWikiDocumentTaskCommand: Partial<CancalWikiDocumentTaskCommand> | undefined | null = {}) : void {
    if (cancalWikiDocumentTaskCommand) {
        writer.writeNumberValue("documentId", cancalWikiDocumentTaskCommand.documentId);
        writer.writeNumberValue("taskId", cancalWikiDocumentTaskCommand.taskId);
        writer.writeNumberValue("wikiId", cancalWikiDocumentTaskCommand.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCitation(writer: SerializationWriter, citation: Partial<Citation> | undefined | null = {}) : void {
    if (citation) {
        writer.writeStringValue("documentId", citation.documentId);
        writer.writeStringValue("fileId", citation.fileId);
        writer.writeStringValue("index", citation.index);
        writer.writeStringValue("link", citation.link);
        writer.writeCollectionOfObjectValues<Citation_Partition>("partitions", citation.partitions, serializeCitation_Partition);
        writer.writeStringValue("sourceContentType", citation.sourceContentType);
        writer.writeStringValue("sourceName", citation.sourceName);
        writer.writeStringValue("sourceUrl", citation.sourceUrl);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCitation_Partition(writer: SerializationWriter, citation_Partition: Partial<Citation_Partition> | undefined | null = {}) : void {
    if (citation_Partition) {
        writer.writeStringValue("lastUpdate", citation_Partition.lastUpdate);
        writer.writeNumberValue("partitionNumber", citation_Partition.partitionNumber);
        writer.writeNumberValue("relevance", citation_Partition.relevance);
        writer.writeNumberValue("sectionNumber", citation_Partition.sectionNumber);
        writer.writeCollectionOfObjectValues<KeyValuePairOfStringAndListOfString>("tags", citation_Partition.tags, serializeKeyValuePairOfStringAndListOfString);
        writer.writeStringValue("text", citation_Partition.text);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeClearWikiDocumentEmbeddingCommand(writer: SerializationWriter, clearWikiDocumentEmbeddingCommand: Partial<ClearWikiDocumentEmbeddingCommand> | undefined | null = {}) : void {
    if (clearWikiDocumentEmbeddingCommand) {
        writer.writeNumberValue("documentId", clearWikiDocumentEmbeddingCommand.documentId);
        writer.writeNumberValue("wikiId", clearWikiDocumentEmbeddingCommand.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplateFileUploadCommand(writer: SerializationWriter, complateFileUploadCommand: Partial<ComplateFileUploadCommand> | undefined | null = {}) : void {
    if (complateFileUploadCommand) {
        writer.writeNumberValue("fileId", complateFileUploadCommand.fileId);
        writer.writeBooleanValue("isSuccess", complateFileUploadCommand.isSuccess);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplateUploadWikiDocumentCommand(writer: SerializationWriter, complateUploadWikiDocumentCommand: Partial<ComplateUploadWikiDocumentCommand> | undefined | null = {}) : void {
    if (complateUploadWikiDocumentCommand) {
        writer.writeNumberValue("fileId", complateUploadWikiDocumentCommand.fileId);
        writer.writeBooleanValue("isSuccess", complateUploadWikiDocumentCommand.isSuccess);
        writer.writeNumberValue("wikiId", complateUploadWikiDocumentCommand.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreateOAuthConnectionCommand(writer: SerializationWriter, createOAuthConnectionCommand: Partial<CreateOAuthConnectionCommand> | undefined | null = {}) : void {
    if (createOAuthConnectionCommand) {
        writer.writeStringValue("iconUrl", createOAuthConnectionCommand.iconUrl);
        writer.writeStringValue("key", createOAuthConnectionCommand.key);
        writer.writeStringValue("name", createOAuthConnectionCommand.name);
        writer.writeEnumValue<OAuthPrivider>("provider", createOAuthConnectionCommand.provider);
        writer.writeStringValue("secret", createOAuthConnectionCommand.secret);
        writer.writeStringValue("wellKnown", createOAuthConnectionCommand.wellKnown);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreatePromptClassCommand(writer: SerializationWriter, createPromptClassCommand: Partial<CreatePromptClassCommand> | undefined | null = {}) : void {
    if (createPromptClassCommand) {
        writer.writeStringValue("name", createPromptClassCommand.name);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreatePromptCommand(writer: SerializationWriter, createPromptCommand: Partial<CreatePromptCommand> | undefined | null = {}) : void {
    if (createPromptCommand) {
        writer.writeStringValue("content", createPromptCommand.content);
        writer.writeStringValue("description", createPromptCommand.description);
        writer.writeBooleanValue("isPublic", createPromptCommand.isPublic);
        writer.writeStringValue("name", createPromptCommand.name);
        writer.writeNumberValue("promptClassId", createPromptCommand.promptClassId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreateWikiCommand(writer: SerializationWriter, createWikiCommand: Partial<CreateWikiCommand> | undefined | null = {}) : void {
    if (createWikiCommand) {
        writer.writeStringValue("description", createWikiCommand.description);
        writer.writeStringValue("name", createWikiCommand.name);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeleteAiAssistantChatCommand(writer: SerializationWriter, deleteAiAssistantChatCommand: Partial<DeleteAiAssistantChatCommand> | undefined | null = {}) : void {
    if (deleteAiAssistantChatCommand) {
        writer.writeGuidValue("chatId", deleteAiAssistantChatCommand.chatId);
        writer.writeNumberValue("userId", deleteAiAssistantChatCommand.userId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeleteAiModelCommand(writer: SerializationWriter, deleteAiModelCommand: Partial<DeleteAiModelCommand> | undefined | null = {}) : void {
    if (deleteAiModelCommand) {
        writer.writeNumberValue("aiModelId", deleteAiModelCommand.aiModelId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeleteOAuthConnectionCommand(writer: SerializationWriter, deleteOAuthConnectionCommand: Partial<DeleteOAuthConnectionCommand> | undefined | null = {}) : void {
    if (deleteOAuthConnectionCommand) {
        writer.writeGuidValue("oAuthConnectionId", deleteOAuthConnectionCommand.oAuthConnectionId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeletePluginCommand(writer: SerializationWriter, deletePluginCommand: Partial<DeletePluginCommand> | undefined | null = {}) : void {
    if (deletePluginCommand) {
        writer.writeNumberValue("pluginId", deletePluginCommand.pluginId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeletePromptCommand(writer: SerializationWriter, deletePromptCommand: Partial<DeletePromptCommand> | undefined | null = {}) : void {
    if (deletePromptCommand) {
        writer.writeNumberValue("promptId", deletePromptCommand.promptId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeleteUserCommand(writer: SerializationWriter, deleteUserCommand: Partial<DeleteUserCommand> | undefined | null = {}) : void {
    if (deleteUserCommand) {
        writer.writeCollectionOfPrimitiveValues<number>("userIds", deleteUserCommand.userIds);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeleteWikiCommand(writer: SerializationWriter, deleteWikiCommand: Partial<DeleteWikiCommand> | undefined | null = {}) : void {
    if (deleteWikiCommand) {
        writer.writeNumberValue("wikiId", deleteWikiCommand.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeleteWikiDocumentCommand(writer: SerializationWriter, deleteWikiDocumentCommand: Partial<DeleteWikiDocumentCommand> | undefined | null = {}) : void {
    if (deleteWikiDocumentCommand) {
        writer.writeNumberValue("documentId", deleteWikiDocumentCommand.documentId);
        writer.writeNumberValue("wikiId", deleteWikiDocumentCommand.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDisableUserCommand(writer: SerializationWriter, disableUserCommand: Partial<DisableUserCommand> | undefined | null = {}) : void {
    if (disableUserCommand) {
        writer.writeBooleanValue("isDisable", disableUserCommand.isDisable);
        writer.writeCollectionOfPrimitiveValues<number>("userIds", disableUserCommand.userIds);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEmbeddingDocumentCommand(writer: SerializationWriter, embeddingDocumentCommand: Partial<EmbeddingDocumentCommand> | undefined | null = {}) : void {
    if (embeddingDocumentCommand) {
        writer.writeNumberValue("documentId", embeddingDocumentCommand.documentId);
        writer.writeNumberValue("maxTokensPerParagraph", embeddingDocumentCommand.maxTokensPerParagraph);
        writer.writeNumberValue("overlappingTokens", embeddingDocumentCommand.overlappingTokens);
        writer.writeStringValue("splitMethod", embeddingDocumentCommand.splitMethod);
        writer.writeEnumValue<EmbeddingTokenizer>("tokenizer", embeddingDocumentCommand.tokenizer);
        writer.writeNumberValue("wikiId", embeddingDocumentCommand.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEmptyCommandResponse(writer: SerializationWriter, emptyCommandResponse: Partial<EmptyCommandResponse> | undefined | null = {}) : void {
    if (emptyCommandResponse) {
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeImportMcpServerPluginCommand(writer: SerializationWriter, importMcpServerPluginCommand: Partial<ImportMcpServerPluginCommand> | undefined | null = {}) : void {
    if (importMcpServerPluginCommand) {
        serializeMcpServerPluginConnectionOptions(writer, importMcpServerPluginCommand)
        writer.writeBooleanValue("isPublic", importMcpServerPluginCommand.isPublic);
        writer.writeBooleanValue("isSystem", importMcpServerPluginCommand.isSystem);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeImportOpenApiPluginCommand(writer: SerializationWriter, importOpenApiPluginCommand: Partial<ImportOpenApiPluginCommand> | undefined | null = {}) : void {
    if (importOpenApiPluginCommand) {
        writer.writeStringValue("description", importOpenApiPluginCommand.description);
        writer.writeNumberValue("fileId", importOpenApiPluginCommand.fileId);
        writer.writeStringValue("fileName", importOpenApiPluginCommand.fileName);
        writer.writeBooleanValue("isPublic", importOpenApiPluginCommand.isPublic);
        writer.writeBooleanValue("isSystem", importOpenApiPluginCommand.isSystem);
        writer.writeStringValue("name", importOpenApiPluginCommand.name);
        writer.writeStringValue("title", importOpenApiPluginCommand.title);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInviteWikiUserCommand(writer: SerializationWriter, inviteWikiUserCommand: Partial<InviteWikiUserCommand> | undefined | null = {}) : void {
    if (inviteWikiUserCommand) {
        writer.writeStringValue("userName", inviteWikiUserCommand.userName);
        writer.writeNumberValue("wikiId", inviteWikiUserCommand.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKeyValueOfStringAndString(writer: SerializationWriter, keyValueOfStringAndString: Partial<KeyValueOfStringAndString> | undefined | null = {}) : void {
    if (keyValueOfStringAndString) {
        writer.writeStringValue("key", keyValueOfStringAndString.key);
        writer.writeStringValue("value", keyValueOfStringAndString.value);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKeyValuePairOfStringAndListOfString(writer: SerializationWriter, keyValuePairOfStringAndListOfString: Partial<KeyValuePairOfStringAndListOfString> | undefined | null = {}) : void {
    if (keyValuePairOfStringAndListOfString) {
        writer.writeStringValue("key", keyValuePairOfStringAndListOfString.key);
        writer.writeCollectionOfPrimitiveValues<string>("value", keyValuePairOfStringAndListOfString.value);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKeyValueString(writer: SerializationWriter, keyValueString: Partial<KeyValueString> | undefined | null = {}) : void {
    if (keyValueString) {
        serializeKeyValueOfStringAndString(writer, keyValueString)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLoginCommand(writer: SerializationWriter, loginCommand: Partial<LoginCommand> | undefined | null = {}) : void {
    if (loginCommand) {
        writer.writeStringValue("password", loginCommand.password);
        writer.writeStringValue("userName", loginCommand.userName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLoginCommandResponse(writer: SerializationWriter, loginCommandResponse: Partial<LoginCommandResponse> | undefined | null = {}) : void {
    if (loginCommandResponse) {
        writer.writeStringValue("accessToken", loginCommandResponse.accessToken);
        writer.writeStringValue("expiresIn", loginCommandResponse.expiresIn);
        writer.writeStringValue("refreshToken", loginCommandResponse.refreshToken);
        writer.writeStringValue("tokenType", loginCommandResponse.tokenType);
        writer.writeNumberValue("userId", loginCommandResponse.userId);
        writer.writeStringValue("userName", loginCommandResponse.userName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMcpServerPluginConnectionOptions(writer: SerializationWriter, mcpServerPluginConnectionOptions: Partial<McpServerPluginConnectionOptions> | undefined | null = {}) : void {
    if (mcpServerPluginConnectionOptions) {
        writer.writeStringValue("description", mcpServerPluginConnectionOptions.description);
        writer.writeCollectionOfObjectValues<KeyValueString>("header", mcpServerPluginConnectionOptions.header, serializeKeyValueString);
        writer.writeStringValue("name", mcpServerPluginConnectionOptions.name);
        writer.writeCollectionOfObjectValues<KeyValueString>("query", mcpServerPluginConnectionOptions.query, serializeKeyValueString);
        writer.writeStringValue("serverUrl", mcpServerPluginConnectionOptions.serverUrl);
        writer.writeStringValue("title", mcpServerPluginConnectionOptions.title);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeModelAbilities(writer: SerializationWriter, modelAbilities: Partial<ModelAbilities> | undefined | null = {}) : void {
    if (modelAbilities) {
        writer.writeBooleanValue("files", modelAbilities.files);
        writer.writeBooleanValue("functionCall", modelAbilities.functionCall);
        writer.writeBooleanValue("imageOutput", modelAbilities.imageOutput);
        writer.writeBooleanValue("vision", modelAbilities.vision);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOAuthBindExistAccountCommand(writer: SerializationWriter, oAuthBindExistAccountCommand: Partial<OAuthBindExistAccountCommand> | undefined | null = {}) : void {
    if (oAuthBindExistAccountCommand) {
        writer.writeGuidValue("tempOAuthBindId", oAuthBindExistAccountCommand.tempOAuthBindId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOAuthLoginCommand(writer: SerializationWriter, oAuthLoginCommand: Partial<OAuthLoginCommand> | undefined | null = {}) : void {
    if (oAuthLoginCommand) {
        writer.writeStringValue("code", oAuthLoginCommand.code);
        writer.writeGuidValue("oAuthId", oAuthLoginCommand.oAuthId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOAuthLoginCommandResponse(writer: SerializationWriter, oAuthLoginCommandResponse: Partial<OAuthLoginCommandResponse> | undefined | null = {}) : void {
    if (oAuthLoginCommandResponse) {
        writer.writeBooleanValue("isBindUser", oAuthLoginCommandResponse.isBindUser);
        writer.writeObjectValue<LoginCommandResponse>("loginCommandResponse", oAuthLoginCommandResponse.loginCommandResponse, serializeLoginCommandResponse);
        writer.writeStringValue("name", oAuthLoginCommandResponse.name);
        writer.writeGuidValue("oAuthId", oAuthLoginCommandResponse.oAuthId);
        writer.writeGuidValue("tempOAuthBindId", oAuthLoginCommandResponse.tempOAuthBindId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOAuthRegisterCommand(writer: SerializationWriter, oAuthRegisterCommand: Partial<OAuthRegisterCommand> | undefined | null = {}) : void {
    if (oAuthRegisterCommand) {
        writer.writeGuidValue("tempOAuthBindId", oAuthRegisterCommand.tempOAuthBindId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePagedParamter(writer: SerializationWriter, pagedParamter: Partial<PagedParamter> | undefined | null = {}) : void {
    if (pagedParamter) {
        writer.writeNumberValue("pageNo", pagedParamter.pageNo);
        writer.writeNumberValue("pageSize", pagedParamter.pageSize);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePagedResultOfQueryUserListCommandResponseItem(writer: SerializationWriter, pagedResultOfQueryUserListCommandResponseItem: Partial<PagedResultOfQueryUserListCommandResponseItem> | undefined | null = {}) : void {
    if (pagedResultOfQueryUserListCommandResponseItem) {
        serializePagedParamter(writer, pagedResultOfQueryUserListCommandResponseItem)
        writer.writeCollectionOfObjectValues<QueryUserListCommandResponseItem>("items", pagedResultOfQueryUserListCommandResponseItem.items, serializeQueryUserListCommandResponseItem);
        writer.writeNumberValue("total", pagedResultOfQueryUserListCommandResponseItem.total);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePagedResultOfQueryWikiDocumentListItem(writer: SerializationWriter, pagedResultOfQueryWikiDocumentListItem: Partial<PagedResultOfQueryWikiDocumentListItem> | undefined | null = {}) : void {
    if (pagedResultOfQueryWikiDocumentListItem) {
        serializePagedParamter(writer, pagedResultOfQueryWikiDocumentListItem)
        writer.writeCollectionOfObjectValues<QueryWikiDocumentListItem>("items", pagedResultOfQueryWikiDocumentListItem.items, serializeQueryWikiDocumentListItem);
        writer.writeNumberValue("total", pagedResultOfQueryWikiDocumentListItem.total);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePluginBaseInfoItem(writer: SerializationWriter, pluginBaseInfoItem: Partial<PluginBaseInfoItem> | undefined | null = {}) : void {
    if (pluginBaseInfoItem) {
        serializeAuditsInfo(writer, pluginBaseInfoItem)
        writer.writeStringValue("description", pluginBaseInfoItem.description);
        writer.writeBooleanValue("isPublic", pluginBaseInfoItem.isPublic);
        writer.writeBooleanValue("isSystem", pluginBaseInfoItem.isSystem);
        writer.writeNumberValue("openapiFileId", pluginBaseInfoItem.openapiFileId);
        writer.writeStringValue("openapiFileName", pluginBaseInfoItem.openapiFileName);
        writer.writeNumberValue("pluginId", pluginBaseInfoItem.pluginId);
        writer.writeStringValue("pluginName", pluginBaseInfoItem.pluginName);
        writer.writeStringValue("server", pluginBaseInfoItem.server);
        writer.writeStringValue("title", pluginBaseInfoItem.title);
        writer.writeEnumValue<PluginType>("type", pluginBaseInfoItem.type);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePreloadWikiDocumentResponse(writer: SerializationWriter, preloadWikiDocumentResponse: Partial<PreloadWikiDocumentResponse> | undefined | null = {}) : void {
    if (preloadWikiDocumentResponse) {
        writer.writeStringValue("expiration", preloadWikiDocumentResponse.expiration);
        writer.writeNumberValue("fileId", preloadWikiDocumentResponse.fileId);
        writer.writeBooleanValue("isExist", preloadWikiDocumentResponse.isExist);
        writer.writeStringValue("uploadUrl", preloadWikiDocumentResponse.uploadUrl);
        writer.writeEnumValue<FileVisibility>("visibility", preloadWikiDocumentResponse.visibility);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePreUploadFileCommandResponse(writer: SerializationWriter, preUploadFileCommandResponse: Partial<PreUploadFileCommandResponse> | undefined | null = {}) : void {
    if (preUploadFileCommandResponse) {
        writer.writeStringValue("expiration", preUploadFileCommandResponse.expiration);
        writer.writeNumberValue("fileId", preUploadFileCommandResponse.fileId);
        writer.writeBooleanValue("isExist", preUploadFileCommandResponse.isExist);
        writer.writeStringValue("uploadUrl", preUploadFileCommandResponse.uploadUrl);
        writer.writeEnumValue<FileVisibility>("visibility", preUploadFileCommandResponse.visibility);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePreUploadImageCommand(writer: SerializationWriter, preUploadImageCommand: Partial<PreUploadImageCommand> | undefined | null = {}) : void {
    if (preUploadImageCommand) {
        writer.writeStringValue("contentType", preUploadImageCommand.contentType);
        writer.writeStringValue("fileName", preUploadImageCommand.fileName);
        writer.writeNumberValue("fileSize", preUploadImageCommand.fileSize);
        writer.writeStringValue("mD5", preUploadImageCommand.mD5);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePreUploadOpenApiFilePluginCommand(writer: SerializationWriter, preUploadOpenApiFilePluginCommand: Partial<PreUploadOpenApiFilePluginCommand> | undefined | null = {}) : void {
    if (preUploadOpenApiFilePluginCommand) {
        writer.writeStringValue("contentType", preUploadOpenApiFilePluginCommand.contentType);
        writer.writeStringValue("fileName", preUploadOpenApiFilePluginCommand.fileName);
        writer.writeNumberValue("fileSize", preUploadOpenApiFilePluginCommand.fileSize);
        writer.writeStringValue("mD5", preUploadOpenApiFilePluginCommand.mD5);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePreUploadOpenApiFilePluginCommandResponse(writer: SerializationWriter, preUploadOpenApiFilePluginCommandResponse: Partial<PreUploadOpenApiFilePluginCommandResponse> | undefined | null = {}) : void {
    if (preUploadOpenApiFilePluginCommandResponse) {
        writer.writeStringValue("expiration", preUploadOpenApiFilePluginCommandResponse.expiration);
        writer.writeNumberValue("fileId", preUploadOpenApiFilePluginCommandResponse.fileId);
        writer.writeBooleanValue("isExist", preUploadOpenApiFilePluginCommandResponse.isExist);
        writer.writeStringValue("uploadUrl", preUploadOpenApiFilePluginCommandResponse.uploadUrl);
        writer.writeEnumValue<FileVisibility>("visibility", preUploadOpenApiFilePluginCommandResponse.visibility);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePreUploadWikiDocumentCommand(writer: SerializationWriter, preUploadWikiDocumentCommand: Partial<PreUploadWikiDocumentCommand> | undefined | null = {}) : void {
    if (preUploadWikiDocumentCommand) {
        writer.writeStringValue("contentType", preUploadWikiDocumentCommand.contentType);
        writer.writeStringValue("fileName", preUploadWikiDocumentCommand.fileName);
        writer.writeNumberValue("fileSize", preUploadWikiDocumentCommand.fileSize);
        writer.writeStringValue("mD5", preUploadWikiDocumentCommand.mD5);
        writer.writeNumberValue("wikiId", preUploadWikiDocumentCommand.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProcessingAiAssistantChatCommand(writer: SerializationWriter, processingAiAssistantChatCommand: Partial<ProcessingAiAssistantChatCommand> | undefined | null = {}) : void {
    if (processingAiAssistantChatCommand) {
        serializeAIAssistantChatObject(writer, processingAiAssistantChatCommand)
        writer.writeGuidValue("chatId", processingAiAssistantChatCommand.chatId);
        writer.writeStringValue("content", processingAiAssistantChatCommand.content);
        writer.writeNumberValue("userId", processingAiAssistantChatCommand.userId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePromptItem(writer: SerializationWriter, promptItem: Partial<PromptItem> | undefined | null = {}) : void {
    if (promptItem) {
        serializeAuditsInfo(writer, promptItem)
        writer.writeStringValue("content", promptItem.content);
        writer.writeStringValue("description", promptItem.description);
        writer.writeNumberValue("id", promptItem.id);
        writer.writeBooleanValue("isPublic", promptItem.isPublic);
        writer.writeStringValue("name", promptItem.name);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryAiAssistantChatHistoryCommandResponse(writer: SerializationWriter, queryAiAssistantChatHistoryCommandResponse: Partial<QueryAiAssistantChatHistoryCommandResponse> | undefined | null = {}) : void {
    if (queryAiAssistantChatHistoryCommandResponse) {
        serializeAIAssistantChatContext(writer, queryAiAssistantChatHistoryCommandResponse)
        writer.writeGuidValue("chatId", queryAiAssistantChatHistoryCommandResponse.chatId);
        writer.writeStringValue("createTime", queryAiAssistantChatHistoryCommandResponse.createTime);
        writer.writeStringValue("updateTime", queryAiAssistantChatHistoryCommandResponse.updateTime);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryAiAssistantChatTopicListCommandResponse(writer: SerializationWriter, queryAiAssistantChatTopicListCommandResponse: Partial<QueryAiAssistantChatTopicListCommandResponse> | undefined | null = {}) : void {
    if (queryAiAssistantChatTopicListCommandResponse) {
        writer.writeCollectionOfObjectValues<AiAssistantChatTopic>("items", queryAiAssistantChatTopicListCommandResponse.items, serializeAiAssistantChatTopic);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryAiModelListCommandResponse(writer: SerializationWriter, queryAiModelListCommandResponse: Partial<QueryAiModelListCommandResponse> | undefined | null = {}) : void {
    if (queryAiModelListCommandResponse) {
        writer.writeCollectionOfObjectValues<AiNotKeyEndpoint>("aiModels", queryAiModelListCommandResponse.aiModels, serializeAiNotKeyEndpoint);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryAiModelProviderCount(writer: SerializationWriter, queryAiModelProviderCount: Partial<QueryAiModelProviderCount> | undefined | null = {}) : void {
    if (queryAiModelProviderCount) {
        writer.writeNumberValue("count", queryAiModelProviderCount.count);
        writer.writeEnumValue<AiProvider>("provider", queryAiModelProviderCount.provider);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryAiModelProviderListResponse(writer: SerializationWriter, queryAiModelProviderListResponse: Partial<QueryAiModelProviderListResponse> | undefined | null = {}) : void {
    if (queryAiModelProviderListResponse) {
        writer.writeCollectionOfObjectValues<QueryAiModelProviderCount>("providers", queryAiModelProviderListResponse.providers, serializeQueryAiModelProviderCount);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryAllOAuthPrividerCommandResponse(writer: SerializationWriter, queryAllOAuthPrividerCommandResponse: Partial<QueryAllOAuthPrividerCommandResponse> | undefined | null = {}) : void {
    if (queryAllOAuthPrividerCommandResponse) {
        writer.writeCollectionOfObjectValues<QueryAllOAuthPrividerCommandResponseItem>("items", queryAllOAuthPrividerCommandResponse.items, serializeQueryAllOAuthPrividerCommandResponseItem);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryAllOAuthPrividerCommandResponseItem(writer: SerializationWriter, queryAllOAuthPrividerCommandResponseItem: Partial<QueryAllOAuthPrividerCommandResponseItem> | undefined | null = {}) : void {
    if (queryAllOAuthPrividerCommandResponseItem) {
        writer.writeStringValue("iconUrl", queryAllOAuthPrividerCommandResponseItem.iconUrl);
        writer.writeStringValue("name", queryAllOAuthPrividerCommandResponseItem.name);
        writer.writeGuidValue("oAuthId", queryAllOAuthPrividerCommandResponseItem.oAuthId);
        writer.writeStringValue("provider", queryAllOAuthPrividerCommandResponseItem.provider);
        writer.writeStringValue("redirectUrl", queryAllOAuthPrividerCommandResponseItem.redirectUrl);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryAllOAuthPrividerDetailCommandResponse(writer: SerializationWriter, queryAllOAuthPrividerDetailCommandResponse: Partial<QueryAllOAuthPrividerDetailCommandResponse> | undefined | null = {}) : void {
    if (queryAllOAuthPrividerDetailCommandResponse) {
        writer.writeCollectionOfObjectValues<QueryAllOAuthPrividerDetailCommandResponseItem>("items", queryAllOAuthPrividerDetailCommandResponse.items, serializeQueryAllOAuthPrividerDetailCommandResponseItem);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryAllOAuthPrividerDetailCommandResponseItem(writer: SerializationWriter, queryAllOAuthPrividerDetailCommandResponseItem: Partial<QueryAllOAuthPrividerDetailCommandResponseItem> | undefined | null = {}) : void {
    if (queryAllOAuthPrividerDetailCommandResponseItem) {
        serializeAuditsInfo(writer, queryAllOAuthPrividerDetailCommandResponseItem)
        writer.writeStringValue("authorizeUrl", queryAllOAuthPrividerDetailCommandResponseItem.authorizeUrl);
        writer.writeStringValue("iconUrl", queryAllOAuthPrividerDetailCommandResponseItem.iconUrl);
        writer.writeGuidValue("id", queryAllOAuthPrividerDetailCommandResponseItem.id);
        writer.writeStringValue("key", queryAllOAuthPrividerDetailCommandResponseItem.key);
        writer.writeStringValue("name", queryAllOAuthPrividerDetailCommandResponseItem.name);
        writer.writeStringValue("provider", queryAllOAuthPrividerDetailCommandResponseItem.provider);
        writer.writeStringValue("wellKnown", queryAllOAuthPrividerDetailCommandResponseItem.wellKnown);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryePromptClassCommandResponse(writer: SerializationWriter, queryePromptClassCommandResponse: Partial<QueryePromptClassCommandResponse> | undefined | null = {}) : void {
    if (queryePromptClassCommandResponse) {
        writer.writeCollectionOfObjectValues<QueryePromptClassCommandResponseItem>("items", queryePromptClassCommandResponse.items, serializeQueryePromptClassCommandResponseItem);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryePromptClassCommandResponseItem(writer: SerializationWriter, queryePromptClassCommandResponseItem: Partial<QueryePromptClassCommandResponseItem> | undefined | null = {}) : void {
    if (queryePromptClassCommandResponseItem) {
        writer.writeNumberValue("id", queryePromptClassCommandResponseItem.id);
        writer.writeStringValue("name", queryePromptClassCommandResponseItem.name);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryPluginBaseListCommandResponse(writer: SerializationWriter, queryPluginBaseListCommandResponse: Partial<QueryPluginBaseListCommandResponse> | undefined | null = {}) : void {
    if (queryPluginBaseListCommandResponse) {
        writer.writeCollectionOfObjectValues<PluginBaseInfoItem>("items", queryPluginBaseListCommandResponse.items, serializePluginBaseInfoItem);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryPluginDetailCommand(writer: SerializationWriter, queryPluginDetailCommand: Partial<QueryPluginDetailCommand> | undefined | null = {}) : void {
    if (queryPluginDetailCommand) {
        writer.writeNumberValue("pluginId", queryPluginDetailCommand.pluginId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryPluginDetailCommandResponse(writer: SerializationWriter, queryPluginDetailCommandResponse: Partial<QueryPluginDetailCommandResponse> | undefined | null = {}) : void {
    if (queryPluginDetailCommandResponse) {
        serializeAuditsInfo(writer, queryPluginDetailCommandResponse)
        writer.writeStringValue("description", queryPluginDetailCommandResponse.description);
        writer.writeCollectionOfObjectValues<KeyValueString>("header", queryPluginDetailCommandResponse.header, serializeKeyValueString);
        writer.writeBooleanValue("isPublic", queryPluginDetailCommandResponse.isPublic);
        writer.writeNumberValue("openapiFileId", queryPluginDetailCommandResponse.openapiFileId);
        writer.writeStringValue("openapiFileName", queryPluginDetailCommandResponse.openapiFileName);
        writer.writeNumberValue("pluginId", queryPluginDetailCommandResponse.pluginId);
        writer.writeStringValue("pluginName", queryPluginDetailCommandResponse.pluginName);
        writer.writeCollectionOfObjectValues<KeyValueString>("query", queryPluginDetailCommandResponse.query, serializeKeyValueString);
        writer.writeStringValue("server", queryPluginDetailCommandResponse.server);
        writer.writeStringValue("title", queryPluginDetailCommandResponse.title);
        writer.writeEnumValue<PluginType>("type", queryPluginDetailCommandResponse.type);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryPluginFunctionsListCommand(writer: SerializationWriter, queryPluginFunctionsListCommand: Partial<QueryPluginFunctionsListCommand> | undefined | null = {}) : void {
    if (queryPluginFunctionsListCommand) {
        writer.writeNumberValue("pluginId", queryPluginFunctionsListCommand.pluginId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryPluginFunctionsListCommandResponse(writer: SerializationWriter, queryPluginFunctionsListCommandResponse: Partial<QueryPluginFunctionsListCommandResponse> | undefined | null = {}) : void {
    if (queryPluginFunctionsListCommandResponse) {
        writer.writeCollectionOfObjectValues<QueryPluginFunctionsListCommandResponseItem>("items", queryPluginFunctionsListCommandResponse.items, serializeQueryPluginFunctionsListCommandResponseItem);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryPluginFunctionsListCommandResponseItem(writer: SerializationWriter, queryPluginFunctionsListCommandResponseItem: Partial<QueryPluginFunctionsListCommandResponseItem> | undefined | null = {}) : void {
    if (queryPluginFunctionsListCommandResponseItem) {
        writer.writeNumberValue("functionId", queryPluginFunctionsListCommandResponseItem.functionId);
        writer.writeStringValue("name", queryPluginFunctionsListCommandResponseItem.name);
        writer.writeStringValue("path", queryPluginFunctionsListCommandResponseItem.path);
        writer.writeNumberValue("pluginId", queryPluginFunctionsListCommandResponseItem.pluginId);
        writer.writeStringValue("summary", queryPluginFunctionsListCommandResponseItem.summary);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryPromptListCommand(writer: SerializationWriter, queryPromptListCommand: Partial<QueryPromptListCommand> | undefined | null = {}) : void {
    if (queryPromptListCommand) {
        writer.writeNumberValue("classId", queryPromptListCommand.classId);
        writer.writeBooleanValue("isOwn", queryPromptListCommand.isOwn);
        writer.writeStringValue("name", queryPromptListCommand.name);
        writer.writeNumberValue("userId", queryPromptListCommand.userId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryPromptListCommandResponse(writer: SerializationWriter, queryPromptListCommandResponse: Partial<QueryPromptListCommandResponse> | undefined | null = {}) : void {
    if (queryPromptListCommandResponse) {
        writer.writeCollectionOfObjectValues<PromptItem>("items", queryPromptListCommandResponse.items, serializePromptItem);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryPublicSystemAiModelListCommand(writer: SerializationWriter, queryPublicSystemAiModelListCommand: Partial<QueryPublicSystemAiModelListCommand> | undefined | null = {}) : void {
    if (queryPublicSystemAiModelListCommand) {
        writer.writeEnumValue<AiModelType>("aiModelType", queryPublicSystemAiModelListCommand.aiModelType);
        writer.writeEnumValue<AiProvider>("provider", queryPublicSystemAiModelListCommand.provider);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryPublicSystemAiModelListCommandResponse(writer: SerializationWriter, queryPublicSystemAiModelListCommandResponse: Partial<QueryPublicSystemAiModelListCommandResponse> | undefined | null = {}) : void {
    if (queryPublicSystemAiModelListCommandResponse) {
        writer.writeCollectionOfObjectValues<AiNotKeyEndpoint>("aiModels", queryPublicSystemAiModelListCommandResponse.aiModels, serializeAiNotKeyEndpoint);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryServerInfoCommandResponse(writer: SerializationWriter, queryServerInfoCommandResponse: Partial<QueryServerInfoCommandResponse> | undefined | null = {}) : void {
    if (queryServerInfoCommandResponse) {
        writer.writeBooleanValue("disableRegister", queryServerInfoCommandResponse.disableRegister);
        writer.writeNumberValue("maxUploadFileSize", queryServerInfoCommandResponse.maxUploadFileSize);
        writer.writeStringValue("publicStoreUrl", queryServerInfoCommandResponse.publicStoreUrl);
        writer.writeStringValue("rsaPublic", queryServerInfoCommandResponse.rsaPublic);
        writer.writeStringValue("serviceUrl", queryServerInfoCommandResponse.serviceUrl);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQuerySystemAiModelListCommand(writer: SerializationWriter, querySystemAiModelListCommand: Partial<QuerySystemAiModelListCommand> | undefined | null = {}) : void {
    if (querySystemAiModelListCommand) {
        writer.writeEnumValue<AiModelType>("aiModelType", querySystemAiModelListCommand.aiModelType);
        writer.writeEnumValue<AiProvider>("provider", querySystemAiModelListCommand.provider);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQuerySystemAiModelListCommandResponse(writer: SerializationWriter, querySystemAiModelListCommandResponse: Partial<QuerySystemAiModelListCommandResponse> | undefined | null = {}) : void {
    if (querySystemAiModelListCommandResponse) {
        writer.writeCollectionOfObjectValues<QuerySystemAiModelListCommandResponseItem>("aiModels", querySystemAiModelListCommandResponse.aiModels, serializeQuerySystemAiModelListCommandResponseItem);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQuerySystemAiModelListCommandResponseItem(writer: SerializationWriter, querySystemAiModelListCommandResponseItem: Partial<QuerySystemAiModelListCommandResponseItem> | undefined | null = {}) : void {
    if (querySystemAiModelListCommandResponseItem) {
        serializeAiNotKeyEndpoint(writer, querySystemAiModelListCommandResponseItem)
        writer.writeBooleanValue("isPublic", querySystemAiModelListCommandResponseItem.isPublic);
        writer.writeBooleanValue("isSystem", querySystemAiModelListCommandResponseItem.isSystem);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQuerySystemPluginBaseListCommand(writer: SerializationWriter, querySystemPluginBaseListCommand: Partial<QuerySystemPluginBaseListCommand> | undefined | null = {}) : void {
    if (querySystemPluginBaseListCommand) {
        writer.writeStringValue("name", querySystemPluginBaseListCommand.name);
        writer.writeEnumValue<PluginType>("type", querySystemPluginBaseListCommand.type);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQuerySystemSettingsCommandResponse(writer: SerializationWriter, querySystemSettingsCommandResponse: Partial<QuerySystemSettingsCommandResponse> | undefined | null = {}) : void {
    if (querySystemSettingsCommandResponse) {
        writer.writeCollectionOfObjectValues<QuerySystemSettingsCommandResponseItem>("items", querySystemSettingsCommandResponse.items, serializeQuerySystemSettingsCommandResponseItem);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQuerySystemSettingsCommandResponseItem(writer: SerializationWriter, querySystemSettingsCommandResponseItem: Partial<QuerySystemSettingsCommandResponseItem> | undefined | null = {}) : void {
    if (querySystemSettingsCommandResponseItem) {
        writer.writeStringValue("description", querySystemSettingsCommandResponseItem.description);
        writer.writeNumberValue("id", querySystemSettingsCommandResponseItem.id);
        writer.writeStringValue("key", querySystemSettingsCommandResponseItem.key);
        writer.writeStringValue("value", querySystemSettingsCommandResponseItem.value);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryUserAiModelListRequest(writer: SerializationWriter, queryUserAiModelListRequest: Partial<QueryUserAiModelListRequest> | undefined | null = {}) : void {
    if (queryUserAiModelListRequest) {
        writer.writeEnumValue<AiModelType>("aiModelType", queryUserAiModelListRequest.aiModelType);
        writer.writeEnumValue<AiProvider>("provider", queryUserAiModelListRequest.provider);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryUserBindAccountCommandResponse(writer: SerializationWriter, queryUserBindAccountCommandResponse: Partial<QueryUserBindAccountCommandResponse> | undefined | null = {}) : void {
    if (queryUserBindAccountCommandResponse) {
        writer.writeCollectionOfObjectValues<QueryUserBindAccountCommandResponseItem>("items", queryUserBindAccountCommandResponse.items, serializeQueryUserBindAccountCommandResponseItem);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryUserBindAccountCommandResponseItem(writer: SerializationWriter, queryUserBindAccountCommandResponseItem: Partial<QueryUserBindAccountCommandResponseItem> | undefined | null = {}) : void {
    if (queryUserBindAccountCommandResponseItem) {
        writer.writeNumberValue("bindId", queryUserBindAccountCommandResponseItem.bindId);
        writer.writeStringValue("iconUrl", queryUserBindAccountCommandResponseItem.iconUrl);
        writer.writeStringValue("name", queryUserBindAccountCommandResponseItem.name);
        writer.writeGuidValue("providerId", queryUserBindAccountCommandResponseItem.providerId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryUserListCommand(writer: SerializationWriter, queryUserListCommand: Partial<QueryUserListCommand> | undefined | null = {}) : void {
    if (queryUserListCommand) {
        serializePagedParamter(writer, queryUserListCommand)
        writer.writeBooleanValue("isAdmin", queryUserListCommand.isAdmin);
        writer.writeStringValue("search", queryUserListCommand.search);
        writer.writeNumberValue("userId", queryUserListCommand.userId);
        writer.writeStringValue("userName", queryUserListCommand.userName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryUserListCommandResponse(writer: SerializationWriter, queryUserListCommandResponse: Partial<QueryUserListCommandResponse> | undefined | null = {}) : void {
    if (queryUserListCommandResponse) {
        serializePagedResultOfQueryUserListCommandResponseItem(writer, queryUserListCommandResponse)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryUserListCommandResponseItem(writer: SerializationWriter, queryUserListCommandResponseItem: Partial<QueryUserListCommandResponseItem> | undefined | null = {}) : void {
    if (queryUserListCommandResponseItem) {
        serializeAuditsInfo(writer, queryUserListCommandResponseItem)
        writer.writeStringValue("avatarPath", queryUserListCommandResponseItem.avatarPath);
        writer.writeStringValue("email", queryUserListCommandResponseItem.email);
        writer.writeNumberValue("id", queryUserListCommandResponseItem.id);
        writer.writeBooleanValue("isAdmin", queryUserListCommandResponseItem.isAdmin);
        writer.writeBooleanValue("isDisable", queryUserListCommandResponseItem.isDisable);
        writer.writeStringValue("nickName", queryUserListCommandResponseItem.nickName);
        writer.writeStringValue("phone", queryUserListCommandResponseItem.phone);
        writer.writeStringValue("userName", queryUserListCommandResponseItem.userName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryUserPluginBaseListCommand(writer: SerializationWriter, queryUserPluginBaseListCommand: Partial<QueryUserPluginBaseListCommand> | undefined | null = {}) : void {
    if (queryUserPluginBaseListCommand) {
        writer.writeBooleanValue("isOwn", queryUserPluginBaseListCommand.isOwn);
        writer.writeStringValue("name", queryUserPluginBaseListCommand.name);
        writer.writeEnumValue<PluginType>("type", queryUserPluginBaseListCommand.type);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryWikiBaseListCommand(writer: SerializationWriter, queryWikiBaseListCommand: Partial<QueryWikiBaseListCommand> | undefined | null = {}) : void {
    if (queryWikiBaseListCommand) {
        writer.writeBooleanValue("isOwn", queryWikiBaseListCommand.isOwn);
        writer.writeBooleanValue("isPublic", queryWikiBaseListCommand.isPublic);
        writer.writeBooleanValue("isSystem", queryWikiBaseListCommand.isSystem);
        writer.writeBooleanValue("isUser", queryWikiBaseListCommand.isUser);
        writer.writeNumberValue("userId", queryWikiBaseListCommand.userId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryWikiDocumentInfoCommand(writer: SerializationWriter, queryWikiDocumentInfoCommand: Partial<QueryWikiDocumentInfoCommand> | undefined | null = {}) : void {
    if (queryWikiDocumentInfoCommand) {
        writer.writeNumberValue("documentId", queryWikiDocumentInfoCommand.documentId);
        writer.writeNumberValue("wikiId", queryWikiDocumentInfoCommand.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryWikiDocumentListCommand(writer: SerializationWriter, queryWikiDocumentListCommand: Partial<QueryWikiDocumentListCommand> | undefined | null = {}) : void {
    if (queryWikiDocumentListCommand) {
        serializePagedParamter(writer, queryWikiDocumentListCommand)
        writer.writeCollectionOfPrimitiveValues<string>("excludeFileTypes", queryWikiDocumentListCommand.excludeFileTypes);
        writer.writeCollectionOfPrimitiveValues<string>("includeFileTypes", queryWikiDocumentListCommand.includeFileTypes);
        writer.writeStringValue("query", queryWikiDocumentListCommand.query);
        writer.writeNumberValue("wikiId", queryWikiDocumentListCommand.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryWikiDocumentListItem(writer: SerializationWriter, queryWikiDocumentListItem: Partial<QueryWikiDocumentListItem> | undefined | null = {}) : void {
    if (queryWikiDocumentListItem) {
        serializeAuditsInfo(writer, queryWikiDocumentListItem)
        writer.writeStringValue("contentType", queryWikiDocumentListItem.contentType);
        writer.writeNumberValue("documentId", queryWikiDocumentListItem.documentId);
        writer.writeBooleanValue("embedding", queryWikiDocumentListItem.embedding);
        writer.writeStringValue("fileName", queryWikiDocumentListItem.fileName);
        writer.writeNumberValue("fileSize", queryWikiDocumentListItem.fileSize);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryWikiDocumentListResponse(writer: SerializationWriter, queryWikiDocumentListResponse: Partial<QueryWikiDocumentListResponse> | undefined | null = {}) : void {
    if (queryWikiDocumentListResponse) {
        serializePagedResultOfQueryWikiDocumentListItem(writer, queryWikiDocumentListResponse)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryWikiDocumentTaskListCommand(writer: SerializationWriter, queryWikiDocumentTaskListCommand: Partial<QueryWikiDocumentTaskListCommand> | undefined | null = {}) : void {
    if (queryWikiDocumentTaskListCommand) {
        writer.writeNumberValue("documentId", queryWikiDocumentTaskListCommand.documentId);
        writer.writeNumberValue("wikiId", queryWikiDocumentTaskListCommand.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryWikiInfoCommand(writer: SerializationWriter, queryWikiInfoCommand: Partial<QueryWikiInfoCommand> | undefined | null = {}) : void {
    if (queryWikiInfoCommand) {
        writer.writeNumberValue("wikiId", queryWikiInfoCommand.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryWikiInfoResponse(writer: SerializationWriter, queryWikiInfoResponse: Partial<QueryWikiInfoResponse> | undefined | null = {}) : void {
    if (queryWikiInfoResponse) {
        serializeAuditsInfo(writer, queryWikiInfoResponse)
        writer.writeStringValue("description", queryWikiInfoResponse.description);
        writer.writeNumberValue("documentCount", queryWikiInfoResponse.documentCount);
        writer.writeNumberValue("embeddingBatchSize", queryWikiInfoResponse.embeddingBatchSize);
        writer.writeNumberValue("embeddingDimensions", queryWikiInfoResponse.embeddingDimensions);
        writer.writeNumberValue("embeddingModelId", queryWikiInfoResponse.embeddingModelId);
        writer.writeEnumValue<EmbeddingTokenizer>("embeddingModelTokenizer", queryWikiInfoResponse.embeddingModelTokenizer);
        writer.writeBooleanValue("isLock", queryWikiInfoResponse.isLock);
        writer.writeBooleanValue("isPublic", queryWikiInfoResponse.isPublic);
        writer.writeBooleanValue("isUser", queryWikiInfoResponse.isUser);
        writer.writeNumberValue("maxRetries", queryWikiInfoResponse.maxRetries);
        writer.writeStringValue("name", queryWikiInfoResponse.name);
        writer.writeNumberValue("wikiId", queryWikiInfoResponse.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryWikiUsersCommand(writer: SerializationWriter, queryWikiUsersCommand: Partial<QueryWikiUsersCommand> | undefined | null = {}) : void {
    if (queryWikiUsersCommand) {
        writer.writeNumberValue("wikiId", queryWikiUsersCommand.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryWikiUsersCommandResponse(writer: SerializationWriter, queryWikiUsersCommandResponse: Partial<QueryWikiUsersCommandResponse> | undefined | null = {}) : void {
    if (queryWikiUsersCommandResponse) {
        writer.writeCollectionOfObjectValues<QueryWikiUsersCommandResponseItem>("users", queryWikiUsersCommandResponse.users, serializeQueryWikiUsersCommandResponseItem);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryWikiUsersCommandResponseItem(writer: SerializationWriter, queryWikiUsersCommandResponseItem: Partial<QueryWikiUsersCommandResponseItem> | undefined | null = {}) : void {
    if (queryWikiUsersCommandResponseItem) {
        serializeAuditsInfo(writer, queryWikiUsersCommandResponseItem)
        writer.writeStringValue("avatarPath", queryWikiUsersCommandResponseItem.avatarPath);
        writer.writeStringValue("email", queryWikiUsersCommandResponseItem.email);
        writer.writeNumberValue("id", queryWikiUsersCommandResponseItem.id);
        writer.writeStringValue("nickName", queryWikiUsersCommandResponseItem.nickName);
        writer.writeStringValue("userName", queryWikiUsersCommandResponseItem.userName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRefreshMcpServerPluginCommand(writer: SerializationWriter, refreshMcpServerPluginCommand: Partial<RefreshMcpServerPluginCommand> | undefined | null = {}) : void {
    if (refreshMcpServerPluginCommand) {
        writer.writeNumberValue("pluginId", refreshMcpServerPluginCommand.pluginId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRefreshTokenCommand(writer: SerializationWriter, refreshTokenCommand: Partial<RefreshTokenCommand> | undefined | null = {}) : void {
    if (refreshTokenCommand) {
        writer.writeStringValue("refreshToken", refreshTokenCommand.refreshToken);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRefreshTokenCommandResponse(writer: SerializationWriter, refreshTokenCommandResponse: Partial<RefreshTokenCommandResponse> | undefined | null = {}) : void {
    if (refreshTokenCommandResponse) {
        writer.writeStringValue("accessToken", refreshTokenCommandResponse.accessToken);
        writer.writeStringValue("expiresIn", refreshTokenCommandResponse.expiresIn);
        writer.writeStringValue("refreshToken", refreshTokenCommandResponse.refreshToken);
        writer.writeStringValue("tokenType", refreshTokenCommandResponse.tokenType);
        writer.writeNumberValue("userId", refreshTokenCommandResponse.userId);
        writer.writeStringValue("userName", refreshTokenCommandResponse.userName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRegisterUserCommand(writer: SerializationWriter, registerUserCommand: Partial<RegisterUserCommand> | undefined | null = {}) : void {
    if (registerUserCommand) {
        writer.writeStringValue("email", registerUserCommand.email);
        writer.writeStringValue("nickName", registerUserCommand.nickName);
        writer.writeStringValue("password", registerUserCommand.password);
        writer.writeStringValue("phone", registerUserCommand.phone);
        writer.writeStringValue("userName", registerUserCommand.userName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRemoveWikiUserCommand(writer: SerializationWriter, removeWikiUserCommand: Partial<RemoveWikiUserCommand> | undefined | null = {}) : void {
    if (removeWikiUserCommand) {
        writer.writeCollectionOfPrimitiveValues<number>("userIds", removeWikiUserCommand.userIds);
        writer.writeNumberValue("wikiId", removeWikiUserCommand.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeResetUserPasswordCommand(writer: SerializationWriter, resetUserPasswordCommand: Partial<ResetUserPasswordCommand> | undefined | null = {}) : void {
    if (resetUserPasswordCommand) {
        writer.writeNumberValue("userId", resetUserPasswordCommand.userId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchResult(writer: SerializationWriter, searchResult: Partial<SearchResult> | undefined | null = {}) : void {
    if (searchResult) {
        writer.writeBooleanValue("noResult", searchResult.noResult);
        writer.writeStringValue("query", searchResult.query);
        writer.writeCollectionOfObjectValues<Citation>("results", searchResult.results, serializeCitation);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchWikiDocumentTextCommand(writer: SerializationWriter, searchWikiDocumentTextCommand: Partial<SearchWikiDocumentTextCommand> | undefined | null = {}) : void {
    if (searchWikiDocumentTextCommand) {
        writer.writeNumberValue("documentId", searchWikiDocumentTextCommand.documentId);
        writer.writeStringValue("query", searchWikiDocumentTextCommand.query);
        writer.writeNumberValue("wikiId", searchWikiDocumentTextCommand.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchWikiDocumentTextCommandResponse(writer: SerializationWriter, searchWikiDocumentTextCommandResponse: Partial<SearchWikiDocumentTextCommandResponse> | undefined | null = {}) : void {
    if (searchWikiDocumentTextCommandResponse) {
        writer.writeObjectValue<SearchResult>("searchResult", searchWikiDocumentTextCommandResponse.searchResult, serializeSearchResult);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSetSystemSettingsCommand(writer: SerializationWriter, setSystemSettingsCommand: Partial<SetSystemSettingsCommand> | undefined | null = {}) : void {
    if (setSystemSettingsCommand) {
        writer.writeObjectValue<KeyValueString>("settings", setSystemSettingsCommand.settings, serializeKeyValueString);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSetUserAdminCommand(writer: SerializationWriter, setUserAdminCommand: Partial<SetUserAdminCommand> | undefined | null = {}) : void {
    if (setUserAdminCommand) {
        writer.writeBooleanValue("isAdmin", setUserAdminCommand.isAdmin);
        writer.writeCollectionOfPrimitiveValues<number>("userIds", setUserAdminCommand.userIds);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSimpleInt(writer: SerializationWriter, simpleInt: Partial<SimpleInt> | undefined | null = {}) : void {
    if (simpleInt) {
        serializeSimpleOfInt32(writer, simpleInt)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSimpleOfInt32(writer: SerializationWriter, simpleOfInt32: Partial<SimpleOfInt32> | undefined | null = {}) : void {
    if (simpleOfInt32) {
        writer.writeNumberValue("value", simpleOfInt32.value);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSimpleOfString(writer: SerializationWriter, simpleOfString: Partial<SimpleOfString> | undefined | null = {}) : void {
    if (simpleOfString) {
        writer.writeStringValue("value", simpleOfString.value);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSimpleString(writer: SerializationWriter, simpleString: Partial<SimpleString> | undefined | null = {}) : void {
    if (simpleString) {
        serializeSimpleOfString(writer, simpleString)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUnbindUserAccountCommand(writer: SerializationWriter, unbindUserAccountCommand: Partial<UnbindUserAccountCommand> | undefined | null = {}) : void {
    if (unbindUserAccountCommand) {
        writer.writeNumberValue("bindId", unbindUserAccountCommand.bindId);
        writer.writeNumberValue("userId", unbindUserAccountCommand.userId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateMcpServerPluginCommand(writer: SerializationWriter, updateMcpServerPluginCommand: Partial<UpdateMcpServerPluginCommand> | undefined | null = {}) : void {
    if (updateMcpServerPluginCommand) {
        serializeMcpServerPluginConnectionOptions(writer, updateMcpServerPluginCommand)
        writer.writeBooleanValue("isPublic", updateMcpServerPluginCommand.isPublic);
        writer.writeBooleanValue("isSystem", updateMcpServerPluginCommand.isSystem);
        writer.writeNumberValue("pluginId", updateMcpServerPluginCommand.pluginId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateOAuthConnectionCommand(writer: SerializationWriter, updateOAuthConnectionCommand: Partial<UpdateOAuthConnectionCommand> | undefined | null = {}) : void {
    if (updateOAuthConnectionCommand) {
        serializeCreateOAuthConnectionCommand(writer, updateOAuthConnectionCommand)
        writer.writeGuidValue("oAuthConnectionId", updateOAuthConnectionCommand.oAuthConnectionId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateOpenApiPluginCommand(writer: SerializationWriter, updateOpenApiPluginCommand: Partial<UpdateOpenApiPluginCommand> | undefined | null = {}) : void {
    if (updateOpenApiPluginCommand) {
        writer.writeStringValue("description", updateOpenApiPluginCommand.description);
        writer.writeNumberValue("fileId", updateOpenApiPluginCommand.fileId);
        writer.writeStringValue("fileName", updateOpenApiPluginCommand.fileName);
        writer.writeCollectionOfObjectValues<KeyValueString>("header", updateOpenApiPluginCommand.header, serializeKeyValueString);
        writer.writeBooleanValue("isPublic", updateOpenApiPluginCommand.isPublic);
        writer.writeBooleanValue("isSystem", updateOpenApiPluginCommand.isSystem);
        writer.writeStringValue("name", updateOpenApiPluginCommand.name);
        writer.writeNumberValue("pluginId", updateOpenApiPluginCommand.pluginId);
        writer.writeCollectionOfObjectValues<KeyValueString>("query", updateOpenApiPluginCommand.query, serializeKeyValueString);
        writer.writeStringValue("serverUrl", updateOpenApiPluginCommand.serverUrl);
        writer.writeStringValue("title", updateOpenApiPluginCommand.title);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdatePromptClassCommand(writer: SerializationWriter, updatePromptClassCommand: Partial<UpdatePromptClassCommand> | undefined | null = {}) : void {
    if (updatePromptClassCommand) {
        writer.writeNumberValue("id", updatePromptClassCommand.id);
        writer.writeStringValue("name", updatePromptClassCommand.name);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdatePromptCommand(writer: SerializationWriter, updatePromptCommand: Partial<UpdatePromptCommand> | undefined | null = {}) : void {
    if (updatePromptCommand) {
        writer.writeStringValue("content", updatePromptCommand.content);
        writer.writeStringValue("description", updatePromptCommand.description);
        writer.writeBooleanValue("isPublic", updatePromptCommand.isPublic);
        writer.writeStringValue("name", updatePromptCommand.name);
        writer.writeNumberValue("promptClassId", updatePromptCommand.promptClassId);
        writer.writeNumberValue("promptId", updatePromptCommand.promptId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateSystemAiModelRequest(writer: SerializationWriter, updateSystemAiModelRequest: Partial<UpdateSystemAiModelRequest> | undefined | null = {}) : void {
    if (updateSystemAiModelRequest) {
        serializeAiEndpoint(writer, updateSystemAiModelRequest)
        writer.writeNumberValue("aiModelId", updateSystemAiModelRequest.aiModelId);
        writer.writeBooleanValue("isPublic", updateSystemAiModelRequest.isPublic);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateUserAiModelRequest(writer: SerializationWriter, updateUserAiModelRequest: Partial<UpdateUserAiModelRequest> | undefined | null = {}) : void {
    if (updateUserAiModelRequest) {
        serializeAiEndpoint(writer, updateUserAiModelRequest)
        writer.writeNumberValue("aiModelId", updateUserAiModelRequest.aiModelId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateUserInfoCommand(writer: SerializationWriter, updateUserInfoCommand: Partial<UpdateUserInfoCommand> | undefined | null = {}) : void {
    if (updateUserInfoCommand) {
        writer.writeStringValue("email", updateUserInfoCommand.email);
        writer.writeStringValue("nickName", updateUserInfoCommand.nickName);
        writer.writeStringValue("phone", updateUserInfoCommand.phone);
        writer.writeNumberValue("userId", updateUserInfoCommand.userId);
        writer.writeStringValue("userName", updateUserInfoCommand.userName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateUserPasswordCommand(writer: SerializationWriter, updateUserPasswordCommand: Partial<UpdateUserPasswordCommand> | undefined | null = {}) : void {
    if (updateUserPasswordCommand) {
        writer.writeStringValue("password", updateUserPasswordCommand.password);
        writer.writeNumberValue("userId", updateUserPasswordCommand.userId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateWikiConfigCommand(writer: SerializationWriter, updateWikiConfigCommand: Partial<UpdateWikiConfigCommand> | undefined | null = {}) : void {
    if (updateWikiConfigCommand) {
        serializeWikiConfig(writer, updateWikiConfigCommand)
        writer.writeNumberValue("wikiId", updateWikiConfigCommand.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateWikiInfoCommand(writer: SerializationWriter, updateWikiInfoCommand: Partial<UpdateWikiInfoCommand> | undefined | null = {}) : void {
    if (updateWikiInfoCommand) {
        writer.writeStringValue("description", updateWikiInfoCommand.description);
        writer.writeBooleanValue("isPublic", updateWikiInfoCommand.isPublic);
        writer.writeBooleanValue("isSystem", updateWikiInfoCommand.isSystem);
        writer.writeStringValue("name", updateWikiInfoCommand.name);
        writer.writeNumberValue("wikiId", updateWikiInfoCommand.wikiId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUploadtUserAvatarCommand(writer: SerializationWriter, uploadtUserAvatarCommand: Partial<UploadtUserAvatarCommand> | undefined | null = {}) : void {
    if (uploadtUserAvatarCommand) {
        writer.writeNumberValue("fileId", uploadtUserAvatarCommand.fileId);
        writer.writeNumberValue("userId", uploadtUserAvatarCommand.userId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserStateInfo(writer: SerializationWriter, userStateInfo: Partial<UserStateInfo> | undefined | null = {}) : void {
    if (userStateInfo) {
        writer.writeStringValue("avatarPath", userStateInfo.avatarPath);
        writer.writeStringValue("email", userStateInfo.email);
        writer.writeBooleanValue("isAdmin", userStateInfo.isAdmin);
        writer.writeBooleanValue("isDeleted", userStateInfo.isDeleted);
        writer.writeBooleanValue("isDisable", userStateInfo.isDisable);
        writer.writeStringValue("nickName", userStateInfo.nickName);
        writer.writeStringValue("phone", userStateInfo.phone);
        writer.writeNumberValue("userId", userStateInfo.userId);
        writer.writeStringValue("userName", userStateInfo.userName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWikiConfig(writer: SerializationWriter, wikiConfig: Partial<WikiConfig> | undefined | null = {}) : void {
    if (wikiConfig) {
        writer.writeNumberValue("embeddingBatchSize", wikiConfig.embeddingBatchSize);
        writer.writeNumberValue("embeddingDimensions", wikiConfig.embeddingDimensions);
        writer.writeNumberValue("embeddingModelId", wikiConfig.embeddingModelId);
        writer.writeEnumValue<EmbeddingTokenizer>("embeddingModelTokenizer", wikiConfig.embeddingModelTokenizer);
        writer.writeNumberValue("maxRetries", wikiConfig.maxRetries);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWikiDocumentTaskItem(writer: SerializationWriter, wikiDocumentTaskItem: Partial<WikiDocumentTaskItem> | undefined | null = {}) : void {
    if (wikiDocumentTaskItem) {
        serializeAuditsInfo(writer, wikiDocumentTaskItem)
        writer.writeStringValue("contentType", wikiDocumentTaskItem.contentType);
        writer.writeNumberValue("documentId", wikiDocumentTaskItem.documentId);
        writer.writeNumberValue("fileId", wikiDocumentTaskItem.fileId);
        writer.writeStringValue("fileName", wikiDocumentTaskItem.fileName);
        writer.writeStringValue("fileSize", wikiDocumentTaskItem.fileSize);
        writer.writeNumberValue("id", wikiDocumentTaskItem.id);
        writer.writeNumberValue("maxTokensPerParagraph", wikiDocumentTaskItem.maxTokensPerParagraph);
        writer.writeStringValue("message", wikiDocumentTaskItem.message);
        writer.writeNumberValue("overlappingTokens", wikiDocumentTaskItem.overlappingTokens);
        writer.writeEnumValue<FileEmbeddingState>("state", wikiDocumentTaskItem.state);
        writer.writeStringValue("taskTag", wikiDocumentTaskItem.taskTag);
        writer.writeStringValue("tokenizer", wikiDocumentTaskItem.tokenizer);
        writer.writeNumberValue("wikiId", wikiDocumentTaskItem.wikiId);
    }
}
/**
 * 设置系统配置.
 */
export interface SetSystemSettingsCommand extends Parsable {
    /**
     * 系统配置.
     */
    settings?: KeyValueString | null;
}
/**
 * 设置用户是否为管理员.
 */
export interface SetUserAdminCommand extends Parsable {
    /**
     * 是否为管理员.
     */
    isAdmin?: boolean | null;
    /**
     * 用户ID.
     */
    userIds?: number[] | null;
}
/**
 * SimpleInt.
 */
export interface SimpleInt extends Parsable, SimpleOfInt32 {
}
/**
 * 简单类型.
 */
export interface SimpleOfInt32 extends Parsable {
    /**
     * 任何类型.
     */
    value?: number | null;
}
/**
 * 简单类型.
 */
export interface SimpleOfString extends Parsable {
    /**
     * 任何类型.
     */
    value?: string | null;
}
/**
 * SimpleString.
 */
export interface SimpleString extends Parsable, SimpleOfString {
}
/**
 * 解绑第三方账号.
 */
export interface UnbindUserAccountCommand extends Parsable {
    /**
     * 绑定 id.
     */
    bindId?: number | null;
    /**
     * 用户 id.
     */
    userId?: number | null;
}
/**
 * 更新 MCP 插件.
 */
export interface UpdateMcpServerPluginCommand extends McpServerPluginConnectionOptions, Parsable {
    /**
     * 是否公开，系统插件 == true 时才能设置.
     */
    isPublic?: boolean | null;
    /**
     * 系统插件.
     */
    isSystem?: boolean | null;
    /**
     * 插件 id.            
     */
    pluginId?: number | null;
}
/**
 * 更新 OAuth2.0 连接配置.
 */
export interface UpdateOAuthConnectionCommand extends CreateOAuthConnectionCommand, Parsable {
    /**
     * id.
     */
    oAuthConnectionId?: Guid | null;
}
/**
 * 更新 openapi 文件，支持 json、yaml.
 */
export interface UpdateOpenApiPluginCommand extends Parsable {
    /**
     * 描述.
     */
    description?: string | null;
    /**
     * 上传的 id.
     */
    fileId?: number | null;
    /**
     * 文件名称.
     */
    fileName?: string | null;
    /**
     * Header 头部信息.
     */
    header?: KeyValueString[] | null;
    /**
     * 是否公开，系统插件 == true 时才能设置.
     */
    isPublic?: boolean | null;
    /**
     * 系统插件.
     */
    isSystem?: boolean | null;
    /**
     * 插件名称.
     */
    name?: string | null;
    /**
     * 插件 id.
     */
    pluginId?: number | null;
    /**
     * Query 字典.
     */
    query?: KeyValueString[] | null;
    /**
     * MCP Service 地址.
     */
    serverUrl?: string | null;
    /**
     * 插件标题，可中文.
     */
    title?: string | null;
}
/**
 * 修改提示词分类.
 */
export interface UpdatePromptClassCommand extends Parsable {
    /**
     * id.
     */
    id?: number | null;
    /**
     * 名称.
     */
    name?: string | null;
}
/**
 * 更新提示词.
 */
export interface UpdatePromptCommand extends Parsable {
    /**
     * 助手设定,markdown.
     */
    content?: string | null;
    /**
     * 描述.
     */
    description?: string | null;
    /**
     * 是否公开.
     */
    isPublic?: boolean | null;
    /**
     * 名称.
     */
    name?: string | null;
    /**
     * 新的分类id.
     */
    promptClassId?: number | null;
    /**
     * 提示词 id.
     */
    promptId?: number | null;
}
/**
 * 修改一个系统级模型.
 */
export interface UpdateSystemAiModelRequest extends AiEndpoint, Parsable {
    /**
     * AI 模型 id.
     */
    aiModelId?: number | null;
    /**
     * 公开使用，只有系统模型才能公开使用.
     */
    isPublic?: boolean | null;
}
/**
 * 修改一个用户私有的模型.
 */
export interface UpdateUserAiModelRequest extends AiEndpoint, Parsable {
    /**
     * AI 模型 id.
     */
    aiModelId?: number | null;
}
/**
 * 修改用户信息.
 */
export interface UpdateUserInfoCommand extends Parsable {
    /**
     * 邮箱.
     */
    email?: string | null;
    /**
     * 昵称.
     */
    nickName?: string | null;
    /**
     * 手机号.
     */
    phone?: string | null;
    /**
     * 用户ID.
     */
    userId?: number | null;
    /**
     * 用户名.
     */
    userName?: string | null;
}
/**
 * 重置密码.
 */
export interface UpdateUserPasswordCommand extends Parsable {
    /**
     * 新的密码，提前使用 rsa 公有加密.
     */
    password?: string | null;
    /**
     * 用户 id.
     */
    userId?: number | null;
}
/**
 * 更新知识库设置信息.
 */
export interface UpdateWikiConfigCommand extends Parsable, WikiConfig {
    /**
     * 知识库 id.
     */
    wikiId?: number | null;
}
/**
 * 修改知识库信息.
 */
export interface UpdateWikiInfoCommand extends Parsable {
    /**
     * 知识库描述.
     */
    description?: string | null;
    /**
     * 公开使用，所有人不需要加入团队即可使用此知识库.
     */
    isPublic?: boolean | null;
    /**
     * 是否系统知识库.
     */
    isSystem?: boolean | null;
    /**
     * 知识库名称.
     */
    name?: string | null;
    /**
     * 知识库 id.
     */
    wikiId?: number | null;
}
/**
 * 上传用户头像.
 */
export interface UploadtUserAvatarCommand extends Parsable {
    /**
     * 文件id.
     */
    fileId?: number | null;
    /**
     * 用户 id.
     */
    userId?: number | null;
}
/**
 * UserStateInfo.
 */
export interface UserStateInfo extends Parsable {
    /**
     * 头像路径.
     */
    avatarPath?: string | null;
    /**
     * 邮箱.
     */
    email?: string | null;
    /**
     * 是否管理员.
     */
    isAdmin?: boolean | null;
    /**
     * 已被删除.
     */
    isDeleted?: boolean | null;
    /**
     * 禁用.
     */
    isDisable?: boolean | null;
    /**
     * 昵称.
     */
    nickName?: string | null;
    /**
     * 手机号.
     */
    phone?: string | null;
    /**
     * 用户ID.
     */
    userId?: number | null;
    /**
     * 用户名.
     */
    userName?: string | null;
}
/**
 * 知识库配置.
 */
export interface WikiConfig extends Parsable {
    /**
     * 批处理大小.
     */
    embeddingBatchSize?: number | null;
    /**
     * 维度，跟模型有关，小于嵌入向量的最大值.
     */
    embeddingDimensions?: number | null;
    /**
     * 指定进行文档向量化的模型.
     */
    embeddingModelId?: number | null;
    /**
     * 分词器.
     */
    embeddingModelTokenizer?: EmbeddingTokenizer | null;
    /**
     * 文档处理最大重试次数.
     */
    maxRetries?: number | null;
}
/**
 * 文档列表.
 */
export interface WikiDocumentTaskItem extends AuditsInfo, Parsable {
    /**
     * 文件类型.
     */
    contentType?: string | null;
    /**
     * 文档id.
     */
    documentId?: number | null;
    /**
     * 文件id.
     */
    fileId?: number | null;
    /**
     * 文件名称.
     */
    fileName?: string | null;
    /**
     * 文件大小.
     */
    fileSize?: string | null;
    /**
     * id.
     */
    id?: number | null;
    /**
     * 每段最大token数量.
     */
    maxTokensPerParagraph?: number | null;
    /**
     * 执行信息.
     */
    message?: string | null;
    /**
     * 重叠的token数量.
     */
    overlappingTokens?: number | null;
    /**
     * 任务状态.
     */
    state?: FileEmbeddingState | null;
    /**
     * 任务标识，用来判断要执行的任务是否一致.
     */
    taskTag?: string | null;
    /**
     * 分词器.
     */
    tokenizer?: string | null;
    /**
     * 知识库id.
     */
    wikiId?: number | null;
}
/**
 * AI 模型大分类.
 */
export const AiModelTypeObject = {
    Chat: "chat",
    Embedding: "embedding",
    Image: "image",
    Tts: "tts",
    Stts: "stts",
    Realtime: "realtime",
    Text2video: "text2video",
    Text2music: "text2music",
} as const;
/**
 * AI 服务提供商，服务商来源.
 */
export const AiProviderObject = {
    Custom: "custom",
    Ai21: "ai21",
    Ai360: "ai360",
    Anthropic: "anthropic",
    Azure: "azure",
    Baichuan: "baichuan",
    Bedrock: "bedrock",
    Cloudflare: "cloudflare",
    Cohere: "cohere",
    Deepseek: "deepseek",
    Fireworksai: "fireworksai",
    Giteeai: "giteeai",
    Github: "github",
    Google: "google",
    Groq: "groq",
    Higress: "higress",
    Huggingface: "huggingface",
    Hunyuan: "hunyuan",
    Infiniai: "infiniai",
    Internlm: "internlm",
    Jina: "jina",
    Lmstudio: "lmstudio",
    Minimax: "minimax",
    Mistral: "mistral",
    Moonshot: "moonshot",
    Novita: "novita",
    Nvidia: "nvidia",
    Ollama: "ollama",
    Openai: "openai",
    Openrouter: "openrouter",
    Perplexity: "perplexity",
    Ppio: "ppio",
    Qiniu: "qiniu",
    Qwen: "qwen",
    Sambanova: "sambanova",
    Search1api: "search1api",
    Sensenova: "sensenova",
    Siliconcloud: "siliconcloud",
    Spark: "spark",
    Stepfun: "stepfun",
    Taichu: "taichu",
    Tencentcloud: "tencentcloud",
    Togetherai: "togetherai",
    Upstage: "upstage",
    Vertexai: "vertexai",
    Vllm: "vllm",
    Volcengine: "volcengine",
    Wenxin: "wenxin",
    Xai: "xai",
    Xinference: "xinference",
    Zeroone: "zeroone",
    Zhipu: "zhipu",
} as const;
export const EmbeddingTokenizerObject = {
    P50k: "p50k",
    Cl100k: "cl100k",
    O200k: "o200k",
} as const;
/**
 * 向量化状态.
 */
export const FileEmbeddingStateObject = {
    None: "none",
    Wait: "wait",
    Processing: "processing",
    Cancal: "cancal",
    Successful: "successful",
    Failed: "failed",
} as const;
/**
 * 存储类型.
 */
export const FileVisibilityObject = {
    Public: "public",
    Private: "private",
} as const;
/**
 * OAuth 提供商.
 */
export const OAuthPrividerObject = {
    Custom: "custom",
    Feishu: "feishu",
    DingTalk: "dingTalk",
    GitHub: "gitHub",
} as const;
/**
 * 插件类型.
 */
export const PluginTypeObject = {
    OpenApi: "openApi",
    Mcp: "mcp",
    System: "system",
} as const;
/* tslint:enable */
/* eslint-enable */

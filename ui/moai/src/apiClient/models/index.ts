/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type ApiError, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * 数据子项.
 */
export interface AuditsInfo extends Parsable {
    /**
     * 创建时间.
     */
    createTime?: string | null;
    /**
     * 创建人ID.
     */
    createUserId?: number | null;
    /**
     * 创建者 名字.
     */
    createUserName?: string | null;
    /**
     * 更新时间.
     */
    updateTime?: string | null;
    /**
     * 更新人ID.
     */
    updateUserId?: number | null;
    /**
     * 更新人 名字.
     */
    updateUserName?: string | null;
}
/**
 * 错误信息.
 */
export interface BusinessExceptionError extends Parsable {
    /**
     * 错误信息列表.
     */
    errors?: string[] | null;
    /**
     * 名称.
     */
    name?: string | null;
}
/**
 * 错误响应模型.
 */
export interface BusinessValidationResult extends ApiError, Parsable {
    /**
     * 错误码.
     */
    code?: number | null;
    /**
     * 错误消息.
     */
    detail?: string | null;
    /**
     * 具体错误列表.
     */
    errors?: BusinessExceptionError[] | null;
    /**
     * 扩展.
     */
    extensions?: BusinessValidationResult_extensions | null;
    /**
     * 请求上下文 ID.
     */
    requestId?: string | null;
}
/**
 * 扩展.
 */
export interface BusinessValidationResult_extensions extends Parsable {
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditsInfo}
 */
// @ts-ignore
export function createAuditsInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuditsInfo;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BusinessExceptionError}
 */
// @ts-ignore
export function createBusinessExceptionErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBusinessExceptionError;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BusinessValidationResult_extensions}
 */
// @ts-ignore
export function createBusinessValidationResult_extensionsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBusinessValidationResult_extensions;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BusinessValidationResult}
 */
// @ts-ignore
export function createBusinessValidationResultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBusinessValidationResult;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreateOAuthConnectionCommand}
 */
// @ts-ignore
export function createCreateOAuthConnectionCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateOAuthConnectionCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeleteOAuthConnectionCommand}
 */
// @ts-ignore
export function createDeleteOAuthConnectionCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeleteOAuthConnectionCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EmptyCommandResponse}
 */
// @ts-ignore
export function createEmptyCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEmptyCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LoginCommand}
 */
// @ts-ignore
export function createLoginCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLoginCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LoginCommandResponse}
 */
// @ts-ignore
export function createLoginCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLoginCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OAuthBindExistAccountCommand}
 */
// @ts-ignore
export function createOAuthBindExistAccountCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOAuthBindExistAccountCommand;
}
/**
 * 创建 OAuth2.0 连接配置.
 */
export interface CreateOAuthConnectionCommand extends Parsable {
    /**
     * 图标地址.
     */
    iconUrl?: string | null;
    /**
     * 应用key.
     */
    key?: string | null;
    /**
     * 认证名称.
     */
    name?: string | null;
    /**
     * 提供商.
     */
    provider?: string | null;
    /**
     * 密钥.
     */
    secret?: string | null;
    /**
     * 发现端口.
     */
    wellKnown?: string | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OAuthLoginCommand}
 */
// @ts-ignore
export function createOAuthLoginCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOAuthLoginCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OAuthLoginCommandResponse}
 */
// @ts-ignore
export function createOAuthLoginCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOAuthLoginCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OAuthRegisterCommand}
 */
// @ts-ignore
export function createOAuthRegisterCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOAuthRegisterCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryAllOAuthPrividerCommandResponse}
 */
// @ts-ignore
export function createQueryAllOAuthPrividerCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryAllOAuthPrividerCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryAllOAuthPrividerCommandResponseItem}
 */
// @ts-ignore
export function createQueryAllOAuthPrividerCommandResponseItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryAllOAuthPrividerCommandResponseItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryAllOAuthPrividerDetailCommandResponse}
 */
// @ts-ignore
export function createQueryAllOAuthPrividerDetailCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryAllOAuthPrividerDetailCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryAllOAuthPrividerDetailCommandResponseItem}
 */
// @ts-ignore
export function createQueryAllOAuthPrividerDetailCommandResponseItemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryAllOAuthPrividerDetailCommandResponseItem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryServerInfoCommandResponse}
 */
// @ts-ignore
export function createQueryServerInfoCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryServerInfoCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QueryUserInfoCommandResponse}
 */
// @ts-ignore
export function createQueryUserInfoCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQueryUserInfoCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RefreshTokenCommand}
 */
// @ts-ignore
export function createRefreshTokenCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRefreshTokenCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RefreshTokenCommandResponse}
 */
// @ts-ignore
export function createRefreshTokenCommandResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRefreshTokenCommandResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RegisterUserCommand}
 */
// @ts-ignore
export function createRegisterUserCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRegisterUserCommand;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SimpleInt}
 */
// @ts-ignore
export function createSimpleIntFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSimpleInt;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SimpleOfInt32}
 */
// @ts-ignore
export function createSimpleOfInt32FromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSimpleOfInt32;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SimpleOfString}
 */
// @ts-ignore
export function createSimpleOfStringFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSimpleOfString;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SimpleString}
 */
// @ts-ignore
export function createSimpleStringFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSimpleString;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpdateOAuthConnectionCommand}
 */
// @ts-ignore
export function createUpdateOAuthConnectionCommandFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUpdateOAuthConnectionCommand;
}
/**
 * 删除认证方式.
 */
export interface DeleteOAuthConnectionCommand extends Parsable {
    /**
     * id.
     */
    oAuthConnectionId?: number | null;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditsInfo(auditsInfo: Partial<AuditsInfo> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "createTime": n => { auditsInfo.createTime = n.getStringValue(); },
        "createUserId": n => { auditsInfo.createUserId = n.getNumberValue(); },
        "createUserName": n => { auditsInfo.createUserName = n.getStringValue(); },
        "updateTime": n => { auditsInfo.updateTime = n.getStringValue(); },
        "updateUserId": n => { auditsInfo.updateUserId = n.getNumberValue(); },
        "updateUserName": n => { auditsInfo.updateUserName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBusinessExceptionError(businessExceptionError: Partial<BusinessExceptionError> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "errors": n => { businessExceptionError.errors = n.getCollectionOfPrimitiveValues<string>(); },
        "name": n => { businessExceptionError.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBusinessValidationResult(businessValidationResult: Partial<BusinessValidationResult> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "code": n => { businessValidationResult.code = n.getNumberValue(); },
        "detail": n => { businessValidationResult.detail = n.getStringValue(); },
        "errors": n => { businessValidationResult.errors = n.getCollectionOfObjectValues<BusinessExceptionError>(createBusinessExceptionErrorFromDiscriminatorValue); },
        "extensions": n => { businessValidationResult.extensions = n.getObjectValue<BusinessValidationResult_extensions>(createBusinessValidationResult_extensionsFromDiscriminatorValue); },
        "requestId": n => { businessValidationResult.requestId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBusinessValidationResult_extensions(businessValidationResult_extensions: Partial<BusinessValidationResult_extensions> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreateOAuthConnectionCommand(createOAuthConnectionCommand: Partial<CreateOAuthConnectionCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "iconUrl": n => { createOAuthConnectionCommand.iconUrl = n.getStringValue(); },
        "key": n => { createOAuthConnectionCommand.key = n.getStringValue(); },
        "name": n => { createOAuthConnectionCommand.name = n.getStringValue(); },
        "provider": n => { createOAuthConnectionCommand.provider = n.getStringValue(); },
        "secret": n => { createOAuthConnectionCommand.secret = n.getStringValue(); },
        "wellKnown": n => { createOAuthConnectionCommand.wellKnown = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeleteOAuthConnectionCommand(deleteOAuthConnectionCommand: Partial<DeleteOAuthConnectionCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "oAuthConnectionId": n => { deleteOAuthConnectionCommand.oAuthConnectionId = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEmptyCommandResponse(emptyCommandResponse: Partial<EmptyCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLoginCommand(loginCommand: Partial<LoginCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "oAuthBindId": n => { loginCommand.oAuthBindId = n.getStringValue(); },
        "password": n => { loginCommand.password = n.getStringValue(); },
        "userName": n => { loginCommand.userName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLoginCommandResponse(loginCommandResponse: Partial<LoginCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accessToken": n => { loginCommandResponse.accessToken = n.getStringValue(); },
        "expiresIn": n => { loginCommandResponse.expiresIn = n.getStringValue(); },
        "refreshToken": n => { loginCommandResponse.refreshToken = n.getStringValue(); },
        "tokenType": n => { loginCommandResponse.tokenType = n.getStringValue(); },
        "userId": n => { loginCommandResponse.userId = n.getNumberValue(); },
        "userName": n => { loginCommandResponse.userName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOAuthBindExistAccountCommand(oAuthBindExistAccountCommand: Partial<OAuthBindExistAccountCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "oAuthBindId": n => { oAuthBindExistAccountCommand.oAuthBindId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOAuthLoginCommand(oAuthLoginCommand: Partial<OAuthLoginCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "code": n => { oAuthLoginCommand.code = n.getStringValue(); },
        "oAuthId": n => { oAuthLoginCommand.oAuthId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOAuthLoginCommandResponse(oAuthLoginCommandResponse: Partial<OAuthLoginCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "isBindUser": n => { oAuthLoginCommandResponse.isBindUser = n.getBooleanValue(); },
        "loginCommandResponse": n => { oAuthLoginCommandResponse.loginCommandResponse = n.getObjectValue<LoginCommandResponse>(createLoginCommandResponseFromDiscriminatorValue); },
        "oAuthBindId": n => { oAuthLoginCommandResponse.oAuthBindId = n.getStringValue(); },
        "oAuthId": n => { oAuthLoginCommandResponse.oAuthId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOAuthRegisterCommand(oAuthRegisterCommand: Partial<OAuthRegisterCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "oAuthBindId": n => { oAuthRegisterCommand.oAuthBindId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryAllOAuthPrividerCommandResponse(queryAllOAuthPrividerCommandResponse: Partial<QueryAllOAuthPrividerCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "items": n => { queryAllOAuthPrividerCommandResponse.items = n.getCollectionOfObjectValues<QueryAllOAuthPrividerCommandResponseItem>(createQueryAllOAuthPrividerCommandResponseItemFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryAllOAuthPrividerCommandResponseItem(queryAllOAuthPrividerCommandResponseItem: Partial<QueryAllOAuthPrividerCommandResponseItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "iconUrl": n => { queryAllOAuthPrividerCommandResponseItem.iconUrl = n.getStringValue(); },
        "name": n => { queryAllOAuthPrividerCommandResponseItem.name = n.getStringValue(); },
        "oAuthId": n => { queryAllOAuthPrividerCommandResponseItem.oAuthId = n.getStringValue(); },
        "provider": n => { queryAllOAuthPrividerCommandResponseItem.provider = n.getStringValue(); },
        "redirectUrl": n => { queryAllOAuthPrividerCommandResponseItem.redirectUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryAllOAuthPrividerDetailCommandResponse(queryAllOAuthPrividerDetailCommandResponse: Partial<QueryAllOAuthPrividerDetailCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "items": n => { queryAllOAuthPrividerDetailCommandResponse.items = n.getCollectionOfObjectValues<QueryAllOAuthPrividerDetailCommandResponseItem>(createQueryAllOAuthPrividerDetailCommandResponseItemFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryAllOAuthPrividerDetailCommandResponseItem(queryAllOAuthPrividerDetailCommandResponseItem: Partial<QueryAllOAuthPrividerDetailCommandResponseItem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditsInfo(queryAllOAuthPrividerDetailCommandResponseItem),
        "iconUrl": n => { queryAllOAuthPrividerDetailCommandResponseItem.iconUrl = n.getStringValue(); },
        "id": n => { queryAllOAuthPrividerDetailCommandResponseItem.id = n.getNumberValue(); },
        "key": n => { queryAllOAuthPrividerDetailCommandResponseItem.key = n.getStringValue(); },
        "name": n => { queryAllOAuthPrividerDetailCommandResponseItem.name = n.getStringValue(); },
        "oAuthId": n => { queryAllOAuthPrividerDetailCommandResponseItem.oAuthId = n.getStringValue(); },
        "provider": n => { queryAllOAuthPrividerDetailCommandResponseItem.provider = n.getStringValue(); },
        "redirectUri": n => { queryAllOAuthPrividerDetailCommandResponseItem.redirectUri = n.getStringValue(); },
        "wellKnown": n => { queryAllOAuthPrividerDetailCommandResponseItem.wellKnown = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryServerInfoCommandResponse(queryServerInfoCommandResponse: Partial<QueryServerInfoCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "isInit": n => { queryServerInfoCommandResponse.isInit = n.getBooleanValue(); },
        "publicStoreUrl": n => { queryServerInfoCommandResponse.publicStoreUrl = n.getStringValue(); },
        "rsaPublic": n => { queryServerInfoCommandResponse.rsaPublic = n.getStringValue(); },
        "serviceUrl": n => { queryServerInfoCommandResponse.serviceUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQueryUserInfoCommandResponse(queryUserInfoCommandResponse: Partial<QueryUserInfoCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "avatar": n => { queryUserInfoCommandResponse.avatar = n.getStringValue(); },
        "isAdmin": n => { queryUserInfoCommandResponse.isAdmin = n.getBooleanValue(); },
        "isRoot": n => { queryUserInfoCommandResponse.isRoot = n.getBooleanValue(); },
        "nickName": n => { queryUserInfoCommandResponse.nickName = n.getStringValue(); },
        "userId": n => { queryUserInfoCommandResponse.userId = n.getNumberValue(); },
        "userName": n => { queryUserInfoCommandResponse.userName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRefreshTokenCommand(refreshTokenCommand: Partial<RefreshTokenCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "refreshToken": n => { refreshTokenCommand.refreshToken = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRefreshTokenCommandResponse(refreshTokenCommandResponse: Partial<RefreshTokenCommandResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accessToken": n => { refreshTokenCommandResponse.accessToken = n.getStringValue(); },
        "expiresIn": n => { refreshTokenCommandResponse.expiresIn = n.getStringValue(); },
        "refreshToken": n => { refreshTokenCommandResponse.refreshToken = n.getStringValue(); },
        "tokenType": n => { refreshTokenCommandResponse.tokenType = n.getStringValue(); },
        "userId": n => { refreshTokenCommandResponse.userId = n.getNumberValue(); },
        "userName": n => { refreshTokenCommandResponse.userName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRegisterUserCommand(registerUserCommand: Partial<RegisterUserCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "email": n => { registerUserCommand.email = n.getStringValue(); },
        "nickName": n => { registerUserCommand.nickName = n.getStringValue(); },
        "password": n => { registerUserCommand.password = n.getStringValue(); },
        "phone": n => { registerUserCommand.phone = n.getStringValue(); },
        "userName": n => { registerUserCommand.userName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSimpleInt(simpleInt: Partial<SimpleInt> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoSimpleOfInt32(simpleInt),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSimpleOfInt32(simpleOfInt32: Partial<SimpleOfInt32> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "value": n => { simpleOfInt32.value = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSimpleOfString(simpleOfString: Partial<SimpleOfString> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "value": n => { simpleOfString.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSimpleString(simpleString: Partial<SimpleString> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoSimpleOfString(simpleString),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpdateOAuthConnectionCommand(updateOAuthConnectionCommand: Partial<UpdateOAuthConnectionCommand> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCreateOAuthConnectionCommand(updateOAuthConnectionCommand),
        "oAuthConnectionId": n => { updateOAuthConnectionCommand.oAuthConnectionId = n.getNumberValue(); },
    }
}
/**
 * 空数据.
 */
export interface EmptyCommandResponse extends Parsable {
}
/**
 * 登录.
 */
export interface LoginCommand extends Parsable {
    /**
     * 登录绑定 OAuth 用户 ID.
     */
    oAuthBindId?: string | null;
    /**
     * 密码，使用 RSA 公钥加密.
     */
    password?: string | null;
    /**
     * 用户名或邮箱.
     */
    userName?: string | null;
}
/**
 * 登录结果.
 */
export interface LoginCommandResponse extends Parsable {
    /**
     * 访问令牌.
     */
    accessToken?: string | null;
    /**
     * 过期时间（秒）.
     */
    expiresIn?: string | null;
    /**
     * 刷新令牌.
     */
    refreshToken?: string | null;
    /**
     * 令牌类型.
     */
    tokenType?: string | null;
    /**
     * 用户ID.
     */
    userId?: number | null;
    /**
     * 用户名.
     */
    userName?: string | null;
}
/**
 * 使用 OAuth 绑定已存在的账号.
 */
export interface OAuthBindExistAccountCommand extends Parsable {
    /**
     * id.
     */
    oAuthBindId?: string | null;
}
/**
 * 使用 OAuth 登录.
 */
export interface OAuthLoginCommand extends Parsable {
    /**
     * Code.
     */
    code?: string | null;
    /**
     * id.
     */
    oAuthId?: string | null;
}
export interface OAuthLoginCommandResponse extends Parsable {
    /**
     * 如果已经绑定用户.
     */
    isBindUser?: boolean | null;
    /**
     * IsBindUser == true 时，返回用户登录信息.
     */
    loginCommandResponse?: LoginCommandResponse | null;
    /**
     * 如果此 id 没有绑定过用户，则返回此 id，使用此 id 绑定或注册用户.
     */
    oAuthBindId?: string | null;
    /**
     * id.
     */
    oAuthId?: string | null;
}
/**
 * 使用第三方账号一键注册.
 */
export interface OAuthRegisterCommand extends Parsable {
    /**
     * 登录绑定 OAuth 用户 ID.
     */
    oAuthBindId?: string | null;
}
export interface QueryAllOAuthPrividerCommandResponse extends Parsable {
    /**
     * The items property
     */
    items?: QueryAllOAuthPrividerCommandResponseItem[] | null;
}
/**
 * QueryAllOAuthPrividerCommandResponseItem.
 */
export interface QueryAllOAuthPrividerCommandResponseItem extends Parsable {
    /**
     * 提供商图标地址
     */
    iconUrl?: string | null;
    /**
     * 提供商名称
     */
    name?: string | null;
    /**
     * id.
     */
    oAuthId?: string | null;
    /**
     * 提供商标识
     */
    provider?: string | null;
    /**
     * 授权地址.
     */
    redirectUrl?: string | null;
}
export interface QueryAllOAuthPrividerDetailCommandResponse extends Parsable {
    /**
     * The items property
     */
    items?: QueryAllOAuthPrividerDetailCommandResponseItem[] | null;
}
export interface QueryAllOAuthPrividerDetailCommandResponseItem extends AuditsInfo, Parsable {
    /**
     * 提供商图标地址
     */
    iconUrl?: string | null;
    /**
     * id.
     */
    id?: number | null;
    /**
     * The key property
     */
    key?: string | null;
    /**
     * 提供商名称
     */
    name?: string | null;
    /**
     * OAuathId.
     */
    oAuthId?: string | null;
    /**
     * 提供商标识
     */
    provider?: string | null;
    /**
     * 回调地址.
     */
    redirectUri?: string | null;
    /**
     * 发现端口
     */
    wellKnown?: string | null;
}
/**
 * 服务器信息.
 */
export interface QueryServerInfoCommandResponse extends Parsable {
    /**
     * 已经初始化.
     */
    isInit?: boolean | null;
    /**
     * 公共存储地址，静态资源时可直接访问.
     */
    publicStoreUrl?: string | null;
    /**
     * RSA 公钥，用于加密密码等信息传输到服务器.
     */
    rsaPublic?: string | null;
    /**
     * 系统访问地址.
     */
    serviceUrl?: string | null;
}
/**
 * 用户基本信息响应.
 */
export interface QueryUserInfoCommandResponse extends Parsable {
    /**
     * 头像路径.
     */
    avatar?: string | null;
    /**
     * 是否管理员.
     */
    isAdmin?: boolean | null;
    /**
     * 是否超级管理员.
     */
    isRoot?: boolean | null;
    /**
     * 昵称.
     */
    nickName?: string | null;
    /**
     * 用户 ID.
     */
    userId?: number | null;
    /**
     * 用户名.
     */
    userName?: string | null;
}
/**
 * 刷新 token.
 */
export interface RefreshTokenCommand extends Parsable {
    /**
     * 刷新令牌.
     */
    refreshToken?: string | null;
}
export interface RefreshTokenCommandResponse extends Parsable {
    /**
     * 访问令牌.
     */
    accessToken?: string | null;
    /**
     * 过期时间（秒）.
     */
    expiresIn?: string | null;
    /**
     * 刷新令牌.
     */
    refreshToken?: string | null;
    /**
     * 令牌类型.
     */
    tokenType?: string | null;
    /**
     * 用户ID.
     */
    userId?: number | null;
    /**
     * 用户名.
     */
    userName?: string | null;
}
/**
 * 注册用户.
 */
export interface RegisterUserCommand extends Parsable {
    /**
     * 邮箱.
     */
    email?: string | null;
    /**
     * 昵称.
     */
    nickName?: string | null;
    /**
     * 密码，接口请求时，使用 RSA 公钥加密密码.
     */
    password?: string | null;
    /**
     * 手机号.
     */
    phone?: string | null;
    /**
     * 用户名.
     */
    userName?: string | null;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditsInfo(writer: SerializationWriter, auditsInfo: Partial<AuditsInfo> | undefined | null = {}) : void {
    if (auditsInfo) {
        writer.writeStringValue("createTime", auditsInfo.createTime);
        writer.writeNumberValue("createUserId", auditsInfo.createUserId);
        writer.writeStringValue("createUserName", auditsInfo.createUserName);
        writer.writeStringValue("updateTime", auditsInfo.updateTime);
        writer.writeNumberValue("updateUserId", auditsInfo.updateUserId);
        writer.writeStringValue("updateUserName", auditsInfo.updateUserName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBusinessExceptionError(writer: SerializationWriter, businessExceptionError: Partial<BusinessExceptionError> | undefined | null = {}) : void {
    if (businessExceptionError) {
        writer.writeCollectionOfPrimitiveValues<string>("errors", businessExceptionError.errors);
        writer.writeStringValue("name", businessExceptionError.name);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBusinessValidationResult(writer: SerializationWriter, businessValidationResult: Partial<BusinessValidationResult> | undefined | null = {}) : void {
    if (businessValidationResult) {
        writer.writeNumberValue("code", businessValidationResult.code);
        writer.writeStringValue("detail", businessValidationResult.detail);
        writer.writeCollectionOfObjectValues<BusinessExceptionError>("errors", businessValidationResult.errors, serializeBusinessExceptionError);
        writer.writeObjectValue<BusinessValidationResult_extensions>("extensions", businessValidationResult.extensions, serializeBusinessValidationResult_extensions);
        writer.writeStringValue("requestId", businessValidationResult.requestId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBusinessValidationResult_extensions(writer: SerializationWriter, businessValidationResult_extensions: Partial<BusinessValidationResult_extensions> | undefined | null = {}) : void {
    if (businessValidationResult_extensions) {
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreateOAuthConnectionCommand(writer: SerializationWriter, createOAuthConnectionCommand: Partial<CreateOAuthConnectionCommand> | undefined | null = {}) : void {
    if (createOAuthConnectionCommand) {
        writer.writeStringValue("iconUrl", createOAuthConnectionCommand.iconUrl);
        writer.writeStringValue("key", createOAuthConnectionCommand.key);
        writer.writeStringValue("name", createOAuthConnectionCommand.name);
        writer.writeStringValue("provider", createOAuthConnectionCommand.provider);
        writer.writeStringValue("secret", createOAuthConnectionCommand.secret);
        writer.writeStringValue("wellKnown", createOAuthConnectionCommand.wellKnown);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeleteOAuthConnectionCommand(writer: SerializationWriter, deleteOAuthConnectionCommand: Partial<DeleteOAuthConnectionCommand> | undefined | null = {}) : void {
    if (deleteOAuthConnectionCommand) {
        writer.writeNumberValue("oAuthConnectionId", deleteOAuthConnectionCommand.oAuthConnectionId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEmptyCommandResponse(writer: SerializationWriter, emptyCommandResponse: Partial<EmptyCommandResponse> | undefined | null = {}) : void {
    if (emptyCommandResponse) {
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLoginCommand(writer: SerializationWriter, loginCommand: Partial<LoginCommand> | undefined | null = {}) : void {
    if (loginCommand) {
        writer.writeStringValue("oAuthBindId", loginCommand.oAuthBindId);
        writer.writeStringValue("password", loginCommand.password);
        writer.writeStringValue("userName", loginCommand.userName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLoginCommandResponse(writer: SerializationWriter, loginCommandResponse: Partial<LoginCommandResponse> | undefined | null = {}) : void {
    if (loginCommandResponse) {
        writer.writeStringValue("accessToken", loginCommandResponse.accessToken);
        writer.writeStringValue("expiresIn", loginCommandResponse.expiresIn);
        writer.writeStringValue("refreshToken", loginCommandResponse.refreshToken);
        writer.writeStringValue("tokenType", loginCommandResponse.tokenType);
        writer.writeNumberValue("userId", loginCommandResponse.userId);
        writer.writeStringValue("userName", loginCommandResponse.userName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOAuthBindExistAccountCommand(writer: SerializationWriter, oAuthBindExistAccountCommand: Partial<OAuthBindExistAccountCommand> | undefined | null = {}) : void {
    if (oAuthBindExistAccountCommand) {
        writer.writeStringValue("oAuthBindId", oAuthBindExistAccountCommand.oAuthBindId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOAuthLoginCommand(writer: SerializationWriter, oAuthLoginCommand: Partial<OAuthLoginCommand> | undefined | null = {}) : void {
    if (oAuthLoginCommand) {
        writer.writeStringValue("code", oAuthLoginCommand.code);
        writer.writeStringValue("oAuthId", oAuthLoginCommand.oAuthId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOAuthLoginCommandResponse(writer: SerializationWriter, oAuthLoginCommandResponse: Partial<OAuthLoginCommandResponse> | undefined | null = {}) : void {
    if (oAuthLoginCommandResponse) {
        writer.writeBooleanValue("isBindUser", oAuthLoginCommandResponse.isBindUser);
        writer.writeObjectValue<LoginCommandResponse>("loginCommandResponse", oAuthLoginCommandResponse.loginCommandResponse, serializeLoginCommandResponse);
        writer.writeStringValue("oAuthBindId", oAuthLoginCommandResponse.oAuthBindId);
        writer.writeStringValue("oAuthId", oAuthLoginCommandResponse.oAuthId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOAuthRegisterCommand(writer: SerializationWriter, oAuthRegisterCommand: Partial<OAuthRegisterCommand> | undefined | null = {}) : void {
    if (oAuthRegisterCommand) {
        writer.writeStringValue("oAuthBindId", oAuthRegisterCommand.oAuthBindId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryAllOAuthPrividerCommandResponse(writer: SerializationWriter, queryAllOAuthPrividerCommandResponse: Partial<QueryAllOAuthPrividerCommandResponse> | undefined | null = {}) : void {
    if (queryAllOAuthPrividerCommandResponse) {
        writer.writeCollectionOfObjectValues<QueryAllOAuthPrividerCommandResponseItem>("items", queryAllOAuthPrividerCommandResponse.items, serializeQueryAllOAuthPrividerCommandResponseItem);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryAllOAuthPrividerCommandResponseItem(writer: SerializationWriter, queryAllOAuthPrividerCommandResponseItem: Partial<QueryAllOAuthPrividerCommandResponseItem> | undefined | null = {}) : void {
    if (queryAllOAuthPrividerCommandResponseItem) {
        writer.writeStringValue("iconUrl", queryAllOAuthPrividerCommandResponseItem.iconUrl);
        writer.writeStringValue("name", queryAllOAuthPrividerCommandResponseItem.name);
        writer.writeStringValue("oAuthId", queryAllOAuthPrividerCommandResponseItem.oAuthId);
        writer.writeStringValue("provider", queryAllOAuthPrividerCommandResponseItem.provider);
        writer.writeStringValue("redirectUrl", queryAllOAuthPrividerCommandResponseItem.redirectUrl);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryAllOAuthPrividerDetailCommandResponse(writer: SerializationWriter, queryAllOAuthPrividerDetailCommandResponse: Partial<QueryAllOAuthPrividerDetailCommandResponse> | undefined | null = {}) : void {
    if (queryAllOAuthPrividerDetailCommandResponse) {
        writer.writeCollectionOfObjectValues<QueryAllOAuthPrividerDetailCommandResponseItem>("items", queryAllOAuthPrividerDetailCommandResponse.items, serializeQueryAllOAuthPrividerDetailCommandResponseItem);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryAllOAuthPrividerDetailCommandResponseItem(writer: SerializationWriter, queryAllOAuthPrividerDetailCommandResponseItem: Partial<QueryAllOAuthPrividerDetailCommandResponseItem> | undefined | null = {}) : void {
    if (queryAllOAuthPrividerDetailCommandResponseItem) {
        serializeAuditsInfo(writer, queryAllOAuthPrividerDetailCommandResponseItem)
        writer.writeStringValue("iconUrl", queryAllOAuthPrividerDetailCommandResponseItem.iconUrl);
        writer.writeNumberValue("id", queryAllOAuthPrividerDetailCommandResponseItem.id);
        writer.writeStringValue("key", queryAllOAuthPrividerDetailCommandResponseItem.key);
        writer.writeStringValue("name", queryAllOAuthPrividerDetailCommandResponseItem.name);
        writer.writeStringValue("oAuthId", queryAllOAuthPrividerDetailCommandResponseItem.oAuthId);
        writer.writeStringValue("provider", queryAllOAuthPrividerDetailCommandResponseItem.provider);
        writer.writeStringValue("redirectUri", queryAllOAuthPrividerDetailCommandResponseItem.redirectUri);
        writer.writeStringValue("wellKnown", queryAllOAuthPrividerDetailCommandResponseItem.wellKnown);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryServerInfoCommandResponse(writer: SerializationWriter, queryServerInfoCommandResponse: Partial<QueryServerInfoCommandResponse> | undefined | null = {}) : void {
    if (queryServerInfoCommandResponse) {
        writer.writeBooleanValue("isInit", queryServerInfoCommandResponse.isInit);
        writer.writeStringValue("publicStoreUrl", queryServerInfoCommandResponse.publicStoreUrl);
        writer.writeStringValue("rsaPublic", queryServerInfoCommandResponse.rsaPublic);
        writer.writeStringValue("serviceUrl", queryServerInfoCommandResponse.serviceUrl);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQueryUserInfoCommandResponse(writer: SerializationWriter, queryUserInfoCommandResponse: Partial<QueryUserInfoCommandResponse> | undefined | null = {}) : void {
    if (queryUserInfoCommandResponse) {
        writer.writeStringValue("avatar", queryUserInfoCommandResponse.avatar);
        writer.writeBooleanValue("isAdmin", queryUserInfoCommandResponse.isAdmin);
        writer.writeBooleanValue("isRoot", queryUserInfoCommandResponse.isRoot);
        writer.writeStringValue("nickName", queryUserInfoCommandResponse.nickName);
        writer.writeNumberValue("userId", queryUserInfoCommandResponse.userId);
        writer.writeStringValue("userName", queryUserInfoCommandResponse.userName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRefreshTokenCommand(writer: SerializationWriter, refreshTokenCommand: Partial<RefreshTokenCommand> | undefined | null = {}) : void {
    if (refreshTokenCommand) {
        writer.writeStringValue("refreshToken", refreshTokenCommand.refreshToken);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRefreshTokenCommandResponse(writer: SerializationWriter, refreshTokenCommandResponse: Partial<RefreshTokenCommandResponse> | undefined | null = {}) : void {
    if (refreshTokenCommandResponse) {
        writer.writeStringValue("accessToken", refreshTokenCommandResponse.accessToken);
        writer.writeStringValue("expiresIn", refreshTokenCommandResponse.expiresIn);
        writer.writeStringValue("refreshToken", refreshTokenCommandResponse.refreshToken);
        writer.writeStringValue("tokenType", refreshTokenCommandResponse.tokenType);
        writer.writeNumberValue("userId", refreshTokenCommandResponse.userId);
        writer.writeStringValue("userName", refreshTokenCommandResponse.userName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRegisterUserCommand(writer: SerializationWriter, registerUserCommand: Partial<RegisterUserCommand> | undefined | null = {}) : void {
    if (registerUserCommand) {
        writer.writeStringValue("email", registerUserCommand.email);
        writer.writeStringValue("nickName", registerUserCommand.nickName);
        writer.writeStringValue("password", registerUserCommand.password);
        writer.writeStringValue("phone", registerUserCommand.phone);
        writer.writeStringValue("userName", registerUserCommand.userName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSimpleInt(writer: SerializationWriter, simpleInt: Partial<SimpleInt> | undefined | null = {}) : void {
    if (simpleInt) {
        serializeSimpleOfInt32(writer, simpleInt)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSimpleOfInt32(writer: SerializationWriter, simpleOfInt32: Partial<SimpleOfInt32> | undefined | null = {}) : void {
    if (simpleOfInt32) {
        writer.writeNumberValue("value", simpleOfInt32.value);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSimpleOfString(writer: SerializationWriter, simpleOfString: Partial<SimpleOfString> | undefined | null = {}) : void {
    if (simpleOfString) {
        writer.writeStringValue("value", simpleOfString.value);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSimpleString(writer: SerializationWriter, simpleString: Partial<SimpleString> | undefined | null = {}) : void {
    if (simpleString) {
        serializeSimpleOfString(writer, simpleString)
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpdateOAuthConnectionCommand(writer: SerializationWriter, updateOAuthConnectionCommand: Partial<UpdateOAuthConnectionCommand> | undefined | null = {}) : void {
    if (updateOAuthConnectionCommand) {
        serializeCreateOAuthConnectionCommand(writer, updateOAuthConnectionCommand)
        writer.writeNumberValue("oAuthConnectionId", updateOAuthConnectionCommand.oAuthConnectionId);
    }
}
export interface SimpleInt extends Parsable, SimpleOfInt32 {
}
/**
 * 简单类型.
 */
export interface SimpleOfInt32 extends Parsable {
    /**
     * 任何类型.
     */
    value?: number | null;
}
/**
 * 简单类型.
 */
export interface SimpleOfString extends Parsable {
    /**
     * 任何类型.
     */
    value?: string | null;
}
export interface SimpleString extends Parsable, SimpleOfString {
}
/**
 * 更新 OAuth2.0 连接配置.
 */
export interface UpdateOAuthConnectionCommand extends CreateOAuthConnectionCommand, Parsable {
    /**
     * id.
     */
    oAuthConnectionId?: number | null;
}
/* tslint:enable */
/* eslint-enable */
